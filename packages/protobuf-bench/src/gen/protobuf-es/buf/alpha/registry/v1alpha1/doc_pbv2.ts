// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.8.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/doc.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenDescFile, GenDescMessage, GenDescService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message as Message$1 } from "@bufbuild/protobuf";

export const fileDesc_buf_alpha_registry_v1alpha1_doc: GenDescFile = /*@__PURE__*/
  fileDesc("CiVidWYvYWxwaGEvcmVnaXN0cnkvdjFhbHBoYTEvZG9jLnByb3RvEhtidWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEiVQodR2V0U291cmNlRGlyZWN0b3J5SW5mb1JlcXVlc3QSDQoFb3duZXIYASABKAkSEgoKcmVwb3NpdG9yeRgCIAEoCRIRCglyZWZlcmVuY2UYAyABKAkiVQoeR2V0U291cmNlRGlyZWN0b3J5SW5mb1Jlc3BvbnNlEjMKBHJvb3QYASABKAsyJS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuRmlsZUluZm8iYQoIRmlsZUluZm8SDAoEcGF0aBgBIAEoCRIOCgZpc19kaXIYAiABKAgSNwoIY2hpbGRyZW4YAyADKAsyJS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuRmlsZUluZm8iWgoUR2V0U291cmNlRmlsZVJlcXVlc3QSDQoFb3duZXIYASABKAkSEgoKcmVwb3NpdG9yeRgCIAEoCRIRCglyZWZlcmVuY2UYAyABKAkSDAoEcGF0aBgEIAEoCSIoChVHZXRTb3VyY2VGaWxlUmVzcG9uc2USDwoHY29udGVudBgBIAEoDCJQChhHZXRNb2R1bGVQYWNrYWdlc1JlcXVlc3QSDQoFb3duZXIYASABKAkSEgoKcmVwb3NpdG9yeRgCIAEoCRIRCglyZWZlcmVuY2UYAyABKAkibgoZR2V0TW9kdWxlUGFja2FnZXNSZXNwb25zZRIMCgRuYW1lGAEgASgJEkMKD21vZHVsZV9wYWNrYWdlcxgCIAMoCzIqLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5Nb2R1bGVQYWNrYWdlIjIKDU1vZHVsZVBhY2thZ2USDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCSJVCh1HZXRNb2R1bGVEb2N1bWVudGF0aW9uUmVxdWVzdBINCgVvd25lchgBIAEoCRISCgpyZXBvc2l0b3J5GAIgASgJEhEKCXJlZmVyZW5jZRgDIAEoCSJwCh5HZXRNb2R1bGVEb2N1bWVudGF0aW9uUmVzcG9uc2USTgoUbW9kdWxlX2RvY3VtZW50YXRpb24YASABKAsyMC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTW9kdWxlRG9jdW1lbnRhdGlvbiI6ChNNb2R1bGVEb2N1bWVudGF0aW9uEgwKBG5hbWUYASABKAkSFQoNZG9jdW1lbnRhdGlvbhgDIAEoCSJsCh5HZXRQYWNrYWdlRG9jdW1lbnRhdGlvblJlcXVlc3QSDQoFb3duZXIYASABKAkSEgoKcmVwb3NpdG9yeRgCIAEoCRIRCglyZWZlcmVuY2UYAyABKAkSFAoMcGFja2FnZV9uYW1lGAQgASgJInMKH0dldFBhY2thZ2VEb2N1bWVudGF0aW9uUmVzcG9uc2USUAoVcGFja2FnZV9kb2N1bWVudGF0aW9uGAEgASgLMjEuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlBhY2thZ2VEb2N1bWVudGF0aW9uIqACChRQYWNrYWdlRG9jdW1lbnRhdGlvbhIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEjYKCHNlcnZpY2VzGAMgAygLMiQuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlNlcnZpY2USMAoFZW51bXMYBCADKAsyIS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuRW51bRI2CghtZXNzYWdlcxgFIAMoCzIkLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5NZXNzYWdlEkMKD2ZpbGVfZXh0ZW5zaW9ucxgGIAMoCzIqLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5GaWxlRXh0ZW5zaW9uIloKCExvY2F0aW9uEhIKCnN0YXJ0X2xpbmUYASABKAUSFAoMc3RhcnRfY29sdW1uGAIgASgFEhAKCGVuZF9saW5lGAMgASgFEhIKCmVuZF9jb2x1bW4YBCABKAUi1gEKB1NlcnZpY2USDAoEbmFtZRgBIAEoCRITCgtuZXN0ZWRfbmFtZRgCIAEoCRIRCglmdWxsX25hbWUYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSEQoJZmlsZV9wYXRoGAUgASgJEjcKCGxvY2F0aW9uGAYgASgLMiUuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxvY2F0aW9uEjQKB21ldGhvZHMYByADKAsyIy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTWV0aG9kIrYBCgZNZXRob2QSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRJDCgdyZXF1ZXN0GAMgASgLMjIuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLk1ldGhvZFJlcXVlc3RSZXNwb25zZRJECghyZXNwb25zZRgEIAEoCzIyLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5NZXRob2RSZXF1ZXN0UmVzcG9uc2Ui0gEKFU1ldGhvZFJlcXVlc3RSZXNwb25zZRITCgtuZXN0ZWRfdHlwZRgBIAEoCRIRCglmdWxsX3R5cGUYAiABKAkSEQoJc3RyZWFtaW5nGAMgASgIEjUKB21lc3NhZ2UYBCABKAsyJC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTWVzc2FnZRJHChFpbXBvcnRfbW9kdWxlX3JlZhgFIAEoCzIsLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5JbXBvcnRNb2R1bGVSZWYi1QEKBEVudW0SDAoEbmFtZRgBIAEoCRITCgtuZXN0ZWRfbmFtZRgCIAEoCRIRCglmdWxsX25hbWUYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSEQoJZmlsZV9wYXRoGAUgASgJEjcKCGxvY2F0aW9uGAYgASgLMiUuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxvY2F0aW9uEjYKBnZhbHVlcxgHIAMoCzImLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5FbnVtVmFsdWUiPgoJRW51bVZhbHVlEgwKBG5hbWUYASABKAkSDgoGbnVtYmVyGAIgASgFEhMKC2Rlc2NyaXB0aW9uGAMgASgJImoKD0ltcG9ydE1vZHVsZVJlZhIOCgZyZW1vdGUYASABKAkSDQoFb3duZXIYAiABKAkSEgoKcmVwb3NpdG9yeRgDIAEoCRIOCgZjb21taXQYBCABKAkSFAoMcGFja2FnZV9uYW1lGAUgASgJIrECCgdNZXNzYWdlEgwKBG5hbWUYASABKAkSEwoLbmVzdGVkX25hbWUYAiABKAkSEQoJZnVsbF9uYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEhEKCWZpbGVfcGF0aBgFIAEoCRIUCgxpc19tYXBfZW50cnkYBiABKAgSOQoGZmllbGRzGAcgAygLMikuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLk1lc3NhZ2VGaWVsZBI3Cghsb2NhdGlvbhgIIAEoCzIlLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5Mb2NhdGlvbhI+ChJtZXNzYWdlX2V4dGVuc2lvbnMYCSADKAsyIi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuRmllbGQiiQEKDE1lc3NhZ2VGaWVsZBIzCgVmaWVsZBgBIAEoCzIiLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5GaWVsZEgAEjMKBW9uZW9mGAIgASgLMiIuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLk9uZW9mSABCDwoNbWVzc2FnZV9maWVsZCJJCgVPbmVvZhIMCgRuYW1lGAEgASgJEjIKBmZpZWxkcxgCIAMoCzIiLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5GaWVsZCKDAgoFRmllbGQSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRINCgVsYWJlbBgDIAEoCRITCgtuZXN0ZWRfdHlwZRgEIAEoCRIRCglmdWxsX3R5cGUYBSABKAkSCwoDdGFnGAYgASgNEjgKCW1hcF9lbnRyeRgHIAEoCzIlLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5NYXBFbnRyeRJHChFpbXBvcnRfbW9kdWxlX3JlZhgIIAEoCzIsLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5JbXBvcnRNb2R1bGVSZWYSEAoIZXh0ZW5kZWUYCSABKAkipAEKCE1hcEVudHJ5EhUKDWtleV9mdWxsX3R5cGUYASABKAkSGQoRdmFsdWVfbmVzdGVkX3R5cGUYAiABKAkSFwoPdmFsdWVfZnVsbF90eXBlGAMgASgJEk0KF3ZhbHVlX2ltcG9ydF9tb2R1bGVfcmVmGAQgASgLMiwuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkltcG9ydE1vZHVsZVJlZiK8AQoNRmlsZUV4dGVuc2lvbhIWCg5leHRlbnNpb25fdHlwZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIRCglmaWxlX3BhdGgYAyABKAkSNwoIbG9jYXRpb24YBCABKAsyJS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTG9jYXRpb24SMgoGZmllbGRzGAUgAygLMiIuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkZpZWxkMsgFCgpEb2NTZXJ2aWNlEpEBChZHZXRTb3VyY2VEaXJlY3RvcnlJbmZvEjouYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldFNvdXJjZURpcmVjdG9yeUluZm9SZXF1ZXN0GjsuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldFNvdXJjZURpcmVjdG9yeUluZm9SZXNwb25zZRJ2Cg1HZXRTb3VyY2VGaWxlEjEuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldFNvdXJjZUZpbGVSZXF1ZXN0GjIuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldFNvdXJjZUZpbGVSZXNwb25zZRKCAQoRR2V0TW9kdWxlUGFja2FnZXMSNS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0TW9kdWxlUGFja2FnZXNSZXF1ZXN0GjYuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldE1vZHVsZVBhY2thZ2VzUmVzcG9uc2USkQEKFkdldE1vZHVsZURvY3VtZW50YXRpb24SOi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0TW9kdWxlRG9jdW1lbnRhdGlvblJlcXVlc3QaOy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0TW9kdWxlRG9jdW1lbnRhdGlvblJlc3BvbnNlEpQBChdHZXRQYWNrYWdlRG9jdW1lbnRhdGlvbhI7LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5HZXRQYWNrYWdlRG9jdW1lbnRhdGlvblJlcXVlc3QaPC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UGFja2FnZURvY3VtZW50YXRpb25SZXNwb25zZWIGcHJvdG8z");

/**
 * GetSourceDirectoryInfoRequest takes an owner, repository, and reference.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoRequest
 */
export type GetSourceDirectoryInfoRequest = Message$1<"buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoRequest"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * @generated from field: string reference = 3;
   */
  reference: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoRequest.
// Use `create(GetSourceDirectoryInfoRequestDesc)` to create a new GetSourceDirectoryInfoRequest.
export const GetSourceDirectoryInfoRequestDesc: GenDescMessage<GetSourceDirectoryInfoRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 0);

/**
 * GetSourceDirectoryInfoResponse returns the root FileInfo for the requested module.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoResponse
 */
export type GetSourceDirectoryInfoResponse = Message$1<"buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.FileInfo root = 1;
   */
  root?: FileInfo;
};

// Describes the message buf.alpha.registry.v1alpha1.GetSourceDirectoryInfoResponse.
// Use `create(GetSourceDirectoryInfoResponseDesc)` to create a new GetSourceDirectoryInfoResponse.
export const GetSourceDirectoryInfoResponseDesc: GenDescMessage<GetSourceDirectoryInfoResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 1);

/**
 * FileInfo is a nested structure that contains the file path, whether or not it's a directory,
 * and if so, the FileInfo children of that directory.
 *
 * @generated from message buf.alpha.registry.v1alpha1.FileInfo
 */
export type FileInfo = Message$1<"buf.alpha.registry.v1alpha1.FileInfo"> & {
  /**
   * the normalized path of the directory, relative to the root of the module.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: bool is_dir = 2;
   */
  isDir: boolean;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.FileInfo children = 3;
   */
  children: FileInfo[];
};

// Describes the message buf.alpha.registry.v1alpha1.FileInfo.
// Use `create(FileInfoDesc)` to create a new FileInfo.
export const FileInfoDesc: GenDescMessage<FileInfo> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 2);

/**
 * GetSourceFileRequest takes an owner, repository, reference, and normalized path.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetSourceFileRequest
 */
export type GetSourceFileRequest = Message$1<"buf.alpha.registry.v1alpha1.GetSourceFileRequest"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * @generated from field: string reference = 3;
   */
  reference: string;

  /**
   * the normalized path to the requested file, relative to the root of the module.
   *
   * @generated from field: string path = 4;
   */
  path: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetSourceFileRequest.
// Use `create(GetSourceFileRequestDesc)` to create a new GetSourceFileRequest.
export const GetSourceFileRequestDesc: GenDescMessage<GetSourceFileRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 3);

/**
 * GetSourceFileResponse returns the source code contents of the requested file.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetSourceFileResponse
 */
export type GetSourceFileResponse = Message$1<"buf.alpha.registry.v1alpha1.GetSourceFileResponse"> & {
  /**
   * content is the content of the file.
   *
   * @generated from field: bytes content = 1;
   */
  content: Uint8Array;
};

// Describes the message buf.alpha.registry.v1alpha1.GetSourceFileResponse.
// Use `create(GetSourceFileResponseDesc)` to create a new GetSourceFileResponse.
export const GetSourceFileResponseDesc: GenDescMessage<GetSourceFileResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 4);

/**
 * GetModulePackagesRequest takes an owner, repository, and reference.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetModulePackagesRequest
 */
export type GetModulePackagesRequest = Message$1<"buf.alpha.registry.v1alpha1.GetModulePackagesRequest"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * @generated from field: string reference = 3;
   */
  reference: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetModulePackagesRequest.
// Use `create(GetModulePackagesRequestDesc)` to create a new GetModulePackagesRequest.
export const GetModulePackagesRequestDesc: GenDescMessage<GetModulePackagesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 5);

/**
 * GetModulePackagesResponse returns the list of ModulePackages for the requested module.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetModulePackagesResponse
 */
export type GetModulePackagesResponse = Message$1<"buf.alpha.registry.v1alpha1.GetModulePackagesResponse"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.ModulePackage module_packages = 2;
   */
  modulePackages: ModulePackage[];
};

// Describes the message buf.alpha.registry.v1alpha1.GetModulePackagesResponse.
// Use `create(GetModulePackagesResponseDesc)` to create a new GetModulePackagesResponse.
export const GetModulePackagesResponseDesc: GenDescMessage<GetModulePackagesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 6);

/**
 * ModulePackage provides the details about a module's associated package.
 *
 * @generated from message buf.alpha.registry.v1alpha1.ModulePackage
 */
export type ModulePackage = Message$1<"buf.alpha.registry.v1alpha1.ModulePackage"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ModulePackage.
// Use `create(ModulePackageDesc)` to create a new ModulePackage.
export const ModulePackageDesc: GenDescMessage<ModulePackage> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 7);

/**
 * GetModuleDocumentationRequest takes an owner, repository, and reference.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetModuleDocumentationRequest
 */
export type GetModuleDocumentationRequest = Message$1<"buf.alpha.registry.v1alpha1.GetModuleDocumentationRequest"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * @generated from field: string reference = 3;
   */
  reference: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetModuleDocumentationRequest.
// Use `create(GetModuleDocumentationRequestDesc)` to create a new GetModuleDocumentationRequest.
export const GetModuleDocumentationRequestDesc: GenDescMessage<GetModuleDocumentationRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 8);

/**
 * GetModuleDocumentationResponse returns the ModuleDocumentation for the requested module.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetModuleDocumentationResponse
 */
export type GetModuleDocumentationResponse = Message$1<"buf.alpha.registry.v1alpha1.GetModuleDocumentationResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.ModuleDocumentation module_documentation = 1;
   */
  moduleDocumentation?: ModuleDocumentation;
};

// Describes the message buf.alpha.registry.v1alpha1.GetModuleDocumentationResponse.
// Use `create(GetModuleDocumentationResponseDesc)` to create a new GetModuleDocumentationResponse.
export const GetModuleDocumentationResponseDesc: GenDescMessage<GetModuleDocumentationResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 9);

/**
 * ModuleDocumentation provides the name of the module and associated documentation.
 *
 * @generated from message buf.alpha.registry.v1alpha1.ModuleDocumentation
 */
export type ModuleDocumentation = Message$1<"buf.alpha.registry.v1alpha1.ModuleDocumentation"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * This is the string representation of the contents of the buf.md file for module-level documentation.
   *
   * The buf.md file is a part of the module.
   * string is used to enforce UTF-8 encoding or 7-bit ASCII text.
   *
   * @generated from field: string documentation = 3;
   */
  documentation: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ModuleDocumentation.
// Use `create(ModuleDocumentationDesc)` to create a new ModuleDocumentation.
export const ModuleDocumentationDesc: GenDescMessage<ModuleDocumentation> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 10);

/**
 * GetPackageDocumentationRequest takes an owner, repository, reference, and package name.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetPackageDocumentationRequest
 */
export type GetPackageDocumentationRequest = Message$1<"buf.alpha.registry.v1alpha1.GetPackageDocumentationRequest"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string repository = 2;
   */
  repository: string;

  /**
   * @generated from field: string reference = 3;
   */
  reference: string;

  /**
   * this is the fully qualified package name.
   *
   * @generated from field: string package_name = 4;
   */
  packageName: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPackageDocumentationRequest.
// Use `create(GetPackageDocumentationRequestDesc)` to create a new GetPackageDocumentationRequest.
export const GetPackageDocumentationRequestDesc: GenDescMessage<GetPackageDocumentationRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 11);

/**
 * GetPackageDocumentationReponse returns the documentation for the requested package.
 *
 * @generated from message buf.alpha.registry.v1alpha1.GetPackageDocumentationResponse
 */
export type GetPackageDocumentationResponse = Message$1<"buf.alpha.registry.v1alpha1.GetPackageDocumentationResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.PackageDocumentation package_documentation = 1;
   */
  packageDocumentation?: PackageDocumentation;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPackageDocumentationResponse.
// Use `create(GetPackageDocumentationResponseDesc)` to create a new GetPackageDocumentationResponse.
export const GetPackageDocumentationResponseDesc: GenDescMessage<GetPackageDocumentationResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 12);

/**
 * PackageDocumentation provides the name, description, and top level types defined in the package.
 *
 * @generated from message buf.alpha.registry.v1alpha1.PackageDocumentation
 */
export type PackageDocumentation = Message$1<"buf.alpha.registry.v1alpha1.PackageDocumentation"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * description contains the package-level comment documentation.
   * There is currently no convention for this.
   *
   * This is derived from the leading comments at the top level of the package.
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * services contains all the services defined in the package in alphabetical order.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Service services = 3;
   */
  services: Service[];

  /**
   * enums contains all the enums defined in the package in alphabetical order.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Enum enums = 4;
   */
  enums: Enum[];

  /**
   * messages contains all the messages defined in the package in alphabetical order.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Message messages = 5;
   */
  messages: Message[];

  /**
   * extensions contains all the file level extensions in the package in alphabetical order.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.FileExtension file_extensions = 6;
   */
  fileExtensions: FileExtension[];
};

// Describes the message buf.alpha.registry.v1alpha1.PackageDocumentation.
// Use `create(PackageDocumentationDesc)` to create a new PackageDocumentation.
export const PackageDocumentationDesc: GenDescMessage<PackageDocumentation> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 13);

/**
 * Location provides the location information for the source code.
 *
 * This does not provide the leading or trailing comments as these will
 * be parsed into descriptions or dropped respectively.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Location
 */
export type Location = Message$1<"buf.alpha.registry.v1alpha1.Location"> & {
  /**
   * @generated from field: int32 start_line = 1;
   */
  startLine: number;

  /**
   * @generated from field: int32 start_column = 2;
   */
  startColumn: number;

  /**
   * @generated from field: int32 end_line = 3;
   */
  endLine: number;

  /**
   * @generated from field: int32 end_column = 4;
   */
  endColumn: number;
};

// Describes the message buf.alpha.registry.v1alpha1.Location.
// Use `create(LocationDesc)` to create a new Location.
export const LocationDesc: GenDescMessage<Location> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 14);

/**
 * Service provides information for the documentation for a given service type in a file.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Service
 */
export type Service = Message$1<"buf.alpha.registry.v1alpha1.Service"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * nested_name includes the nested types for a given type definition.
   *
   * @generated from field: string nested_name = 2;
   */
  nestedName: string;

  /**
   * full_name includes the package name and nested types for a given type definition.
   *
   * @generated from field: string full_name = 3;
   */
  fullName: string;

  /**
   * description is derived from the leading comments of a given service.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * file_path is the normalized path of the file containing the service.
   * This is used for navigating to the source code for the service.
   *
   * @generated from field: string file_path = 5;
   */
  filePath: string;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Location location = 6;
   */
  location?: Location;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Method methods = 7;
   */
  methods: Method[];
};

// Describes the message buf.alpha.registry.v1alpha1.Service.
// Use `create(ServiceDesc)` to create a new Service.
export const ServiceDesc: GenDescMessage<Service> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 15);

/**
 * Method provides information for the documentation for a method of a given service.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Method
 */
export type Method = Message$1<"buf.alpha.registry.v1alpha1.Method"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * description is derived from the leading comments of a given method.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.MethodRequestResponse request = 3;
   */
  request?: MethodRequestResponse;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.MethodRequestResponse response = 4;
   */
  response?: MethodRequestResponse;
};

// Describes the message buf.alpha.registry.v1alpha1.Method.
// Use `create(MethodDesc)` to create a new Method.
export const MethodDesc: GenDescMessage<Method> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 16);

/**
 * MethodRequestResponse provides information for the documentation of a Method request or response message.
 *
 * @generated from message buf.alpha.registry.v1alpha1.MethodRequestResponse
 */
export type MethodRequestResponse = Message$1<"buf.alpha.registry.v1alpha1.MethodRequestResponse"> & {
  /**
   * nested_type is the nested name of the message of the request or response. This includes nested definitions.
   *
   * @generated from field: string nested_type = 1;
   */
  nestedType: string;

  /**
   * full_type is the fully qualified name of the message of the request or response. This includes package and nested definitions.
   *
   * @generated from field: string full_type = 2;
   */
  fullType: string;

  /**
   * boolean flag for whether the streaming label is set on an method request or response.
   *
   * @generated from field: bool streaming = 3;
   */
  streaming: boolean;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Message message = 4;
   */
  message?: Message;

  /**
   * import_module_ref is included if the request or response is an imported type.
   * It contains all the metadata for the import.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.ImportModuleRef import_module_ref = 5;
   */
  importModuleRef?: ImportModuleRef;
};

// Describes the message buf.alpha.registry.v1alpha1.MethodRequestResponse.
// Use `create(MethodRequestResponseDesc)` to create a new MethodRequestResponse.
export const MethodRequestResponseDesc: GenDescMessage<MethodRequestResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 17);

/**
 * Enum provides information for the documentation of an enum.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Enum
 */
export type Enum = Message$1<"buf.alpha.registry.v1alpha1.Enum"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * nested_name includes the nested types for a given type definition.
   *
   * @generated from field: string nested_name = 2;
   */
  nestedName: string;

  /**
   * full_name includes the package name and nested types for a given type definition.
   *
   * @generated from field: string full_name = 3;
   */
  fullName: string;

  /**
   * description is derived from the leading comments of a given Enum.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * file_path is the normalized path of the file containing the enum.
   *
   * @generated from field: string file_path = 5;
   */
  filePath: string;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Location location = 6;
   */
  location?: Location;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.EnumValue values = 7;
   */
  values: EnumValue[];
};

// Describes the message buf.alpha.registry.v1alpha1.Enum.
// Use `create(EnumDesc)` to create a new Enum.
export const EnumDesc: GenDescMessage<Enum> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 18);

/**
 * EnumValue provides information for the documentation of an enum value.
 *
 * @generated from message buf.alpha.registry.v1alpha1.EnumValue
 */
export type EnumValue = Message$1<"buf.alpha.registry.v1alpha1.EnumValue"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: int32 number = 2;
   */
  number: number;

  /**
   * description is derived from the leading comments of a given enum value.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 3;
   */
  description: string;
};

// Describes the message buf.alpha.registry.v1alpha1.EnumValue.
// Use `create(EnumValueDesc)` to create a new EnumValue.
export const EnumValueDesc: GenDescMessage<EnumValue> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 19);

/**
 * ImportRef provides the import metadata if a type is imported.
 *
 * @generated from message buf.alpha.registry.v1alpha1.ImportModuleRef
 */
export type ImportModuleRef = Message$1<"buf.alpha.registry.v1alpha1.ImportModuleRef"> & {
  /**
   * @generated from field: string remote = 1;
   */
  remote: string;

  /**
   * @generated from field: string owner = 2;
   */
  owner: string;

  /**
   * @generated from field: string repository = 3;
   */
  repository: string;

  /**
   * the commit is based on the module commit of the imported type provided
   * by the image.
   *
   * @generated from field: string commit = 4;
   */
  commit: string;

  /**
   * @generated from field: string package_name = 5;
   */
  packageName: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ImportModuleRef.
// Use `create(ImportModuleRefDesc)` to create a new ImportModuleRef.
export const ImportModuleRefDesc: GenDescMessage<ImportModuleRef> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 20);

/**
 * Message provides information for the documentation of a protobuf message.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Message
 */
export type Message = Message$1<"buf.alpha.registry.v1alpha1.Message"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * nested_name includes the nested types for a given type definition.
   *
   * @generated from field: string nested_name = 2;
   */
  nestedName: string;

  /**
   * full_name includes the package name and nested types for a given type definition.
   *
   * @generated from field: string full_name = 3;
   */
  fullName: string;

  /**
   * description is derived from the leading comments of a given message.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * file_path is the normalized path of the file containing the message.
   *
   * @generated from field: string file_path = 5;
   */
  filePath: string;

  /**
   * @generated from field: bool is_map_entry = 6;
   */
  isMapEntry: boolean;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.MessageField fields = 7;
   */
  fields: MessageField[];

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Location location = 8;
   */
  location?: Location;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Field message_extensions = 9;
   */
  messageExtensions: Field[];
};

// Describes the message buf.alpha.registry.v1alpha1.Message.
// Use `create(MessageDesc)` to create a new Message.
export const MessageDesc: GenDescMessage<Message> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 21);

/**
 * MessageField can be either a single field or a oneof set of fields.
 *
 * @generated from message buf.alpha.registry.v1alpha1.MessageField
 */
export type MessageField = Message$1<"buf.alpha.registry.v1alpha1.MessageField"> & {
  /**
   * @generated from oneof buf.alpha.registry.v1alpha1.MessageField.message_field
   */
  messageField: {
    /**
     * @generated from field: buf.alpha.registry.v1alpha1.Field field = 1;
     */
    value: Field;
    case: "field";
  } | {
    /**
     * @generated from field: buf.alpha.registry.v1alpha1.Oneof oneof = 2;
     */
    value: Oneof;
    case: "oneof";
  } | { case: undefined; value?: undefined };
};

// Describes the message buf.alpha.registry.v1alpha1.MessageField.
// Use `create(MessageFieldDesc)` to create a new MessageField.
export const MessageFieldDesc: GenDescMessage<MessageField> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 22);

/**
 * Oneof represents a oneof set of fields.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Oneof
 */
export type Oneof = Message$1<"buf.alpha.registry.v1alpha1.Oneof"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Field fields = 2;
   */
  fields: Field[];
};

// Describes the message buf.alpha.registry.v1alpha1.Oneof.
// Use `create(OneofDesc)` to create a new Oneof.
export const OneofDesc: GenDescMessage<Oneof> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 23);

/**
 * Field provides information for the documentation of a message field.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Field
 */
export type Field = Message$1<"buf.alpha.registry.v1alpha1.Field"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * description is derived from the leading comments of a given message field.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string label = 3;
   */
  label: string;

  /**
   * string representation of the nested name of the field type, which includes nested definitions.
   *
   * @generated from field: string nested_type = 4;
   */
  nestedType: string;

  /**
   * string representation of the full name of the field type, which includes package name
   * and nested definitions.
   *
   * @generated from field: string full_type = 5;
   */
  fullType: string;

  /**
   * @generated from field: uint32 tag = 6;
   */
  tag: number;

  /**
   * MapEntry is present if the field is a map type.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.MapEntry map_entry = 7;
   */
  mapEntry?: MapEntry;

  /**
   * import_module_ref is included if the field is an imported type.
   * It contains all the metadata for the import.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.ImportModuleRef import_module_ref = 8;
   */
  importModuleRef?: ImportModuleRef;

  /**
   * Extendee is the name of the type that is being extended if the field is an extension.
   * This is an empty string for fields that are not extenions.
   *
   * @generated from field: string extendee = 9;
   */
  extendee: string;
};

// Describes the message buf.alpha.registry.v1alpha1.Field.
// Use `create(FieldDesc)` to create a new Field.
export const FieldDesc: GenDescMessage<Field> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 24);

/**
 * MapEntry provides the key and value types for the MapEntry type for a map field.
 *
 * @generated from message buf.alpha.registry.v1alpha1.MapEntry
 */
export type MapEntry = Message$1<"buf.alpha.registry.v1alpha1.MapEntry"> & {
  /**
   * string representation of the full name of the type for the map key. keys can only be
   * scalar types: https://developers.google.com/protocol-buffers/docs/overview#maps
   *
   * @generated from field: string key_full_type = 1;
   */
  keyFullType: string;

  /**
   * string representation of the nested name of the type for the map value.
   *
   * @generated from field: string value_nested_type = 2;
   */
  valueNestedType: string;

  /**
   * string representation of the full name of the type for the map value.
   *
   * @generated from field: string value_full_type = 3;
   */
  valueFullType: string;

  /**
   * if the value is an imported type, this is the import module ref
   *
   * @generated from field: buf.alpha.registry.v1alpha1.ImportModuleRef value_import_module_ref = 4;
   */
  valueImportModuleRef?: ImportModuleRef;
};

// Describes the message buf.alpha.registry.v1alpha1.MapEntry.
// Use `create(MapEntryDesc)` to create a new MapEntry.
export const MapEntryDesc: GenDescMessage<MapEntry> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 25);

/**
 * FileExtension provides the information for the documentation of a file extension.
 *
 * @generated from message buf.alpha.registry.v1alpha1.FileExtension
 */
export type FileExtension = Message$1<"buf.alpha.registry.v1alpha1.FileExtension"> & {
  /**
   * extension_type is the string representation of the type being extended.
   *
   * @generated from field: string extension_type = 1;
   */
  extensionType: string;

  /**
   * description is derived from the leading comments of a given message field.
   *
   * Paragraph newlines (double new lines) are respected, however single newlines are not.
   * Note that any leading and trailing `//` or spaces within a `/* *\/` block will be stripped.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * file_path is the normalized path of the file containing the message.
   *
   * @generated from field: string file_path = 3;
   */
  filePath: string;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Location location = 4;
   */
  location?: Location;

  /**
   * fields are all the fields that are associated with the extension.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Field fields = 5;
   */
  fields: Field[];
};

// Describes the message buf.alpha.registry.v1alpha1.FileExtension.
// Use `create(FileExtensionDesc)` to create a new FileExtension.
export const FileExtensionDesc: GenDescMessage<FileExtension> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 26);

/**
 * DocService defines a set of APIs that are intended for use by bufwebd only.
 * This is not intended for general use; changes and use cases are subject to executive approval.
 *
 * @generated from service buf.alpha.registry.v1alpha1.DocService
 */
export const DocService: GenDescService<{
  /**
   * GetSourceDirectoryInfo retrieves the directory and file structure for the
   * given owner, repository and reference.
   *
   * The purpose of this is to get a representation of the file tree for a given
   * module to enable exploring the module by navigating through its contents.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetSourceDirectoryInfo
   */
  getSourceDirectoryInfo: {
    kind: "unary";
    I: GetSourceDirectoryInfoRequest;
    O: GetSourceDirectoryInfoResponse;
  },
  /**
   * GetSourceFile retrieves the source contents for the given owner, repository,
   * reference, and path.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetSourceFile
   */
  getSourceFile: {
    kind: "unary";
    I: GetSourceFileRequest;
    O: GetSourceFileResponse;
  },
  /**
   * GetModulePackages retrieves the list of packages for the module based on the given
   * owner, repository, and reference.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetModulePackages
   */
  getModulePackages: {
    kind: "unary";
    I: GetModulePackagesRequest;
    O: GetModulePackagesResponse;
  },
  /**
   * GetModuleDocumentation retrieves the documentation for module based on the given
   * owner, repository, and reference.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetModuleDocumentation
   */
  getModuleDocumentation: {
    kind: "unary";
    I: GetModuleDocumentationRequest;
    O: GetModuleDocumentationResponse;
  },
  /**
   * GetPackageDocumentation retrieves a a slice of documentation structures
   * for the given owner, repository, reference, and package name.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetPackageDocumentation
   */
  getPackageDocumentation: {
    kind: "unary";
    I: GetPackageDocumentationRequest;
    O: GetPackageDocumentationResponse;
  },
}
> = /*@__PURE__*/
  serviceDesc(fileDesc_buf_alpha_registry_v1alpha1_doc, 0);

