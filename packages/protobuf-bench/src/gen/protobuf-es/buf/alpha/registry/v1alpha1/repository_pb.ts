// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.0.0-alpha.1 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/repository.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenDescEnum, GenDescFile, GenDescMessage, GenDescService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { RepositoryRole } from "./role_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_role } from "./role_pb.js";
import type { User } from "./user_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_user } from "./user_pb.js";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { fileDesc_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file buf/alpha/registry/v1alpha1/repository.proto.
 */
export const fileDesc_buf_alpha_registry_v1alpha1_repository: GenDescFile = /*@__PURE__*/
  fileDesc("CixidWYvYWxwaGEvcmVnaXN0cnkvdjFhbHBoYTEvcmVwb3NpdG9yeS5wcm90bxIbYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExIq0CCgpSZXBvc2l0b3J5EgoKAmlkGAEgASgJEi8KC2NyZWF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDAoEbmFtZRgEIAEoCRIRCgd1c2VyX2lkGAUgASgJSAASGQoPb3JnYW5pemF0aW9uX2lkGAYgASgJSAASOwoKdmlzaWJpbGl0eRgHIAEoDjInLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5WaXNpYmlsaXR5EhIKCmRlcHJlY2F0ZWQYCCABKAgSGwoTZGVwcmVjYXRpb25fbWVzc2FnZRgJIAEoCUIHCgVvd25lciLnAQoVUmVwb3NpdG9yeUNvbnRyaWJ1dG9yEi8KBHVzZXIYASABKAsyIS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuVXNlchIVCg1yZXBvc2l0b3J5X2lkGAIgASgJEkIKDWV4cGxpY2l0X3JvbGUYAyABKA4yKy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeVJvbGUSQgoNaW1wbGljaXRfcm9sZRgEIAEoDjIrLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5SZXBvc2l0b3J5Um9sZSI2CiBHZXRSZXBvc2l0b3JpZXNCeUZ1bGxOYW1lUmVxdWVzdBISCgpmdWxsX25hbWVzGAEgAygJImIKIUdldFJlcG9zaXRvcmllc0J5RnVsbE5hbWVSZXNwb25zZRI9CgxyZXBvc2l0b3JpZXMYASADKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeSIiChRHZXRSZXBvc2l0b3J5UmVxdWVzdBIKCgJpZBgBIAEoCSJUChVHZXRSZXBvc2l0b3J5UmVzcG9uc2USOwoKcmVwb3NpdG9yeRgBIAEoCzInLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5SZXBvc2l0b3J5IjMKHkdldFJlcG9zaXRvcnlCeUZ1bGxOYW1lUmVxdWVzdBIRCglmdWxsX25hbWUYASABKAkiXgofR2V0UmVwb3NpdG9yeUJ5RnVsbE5hbWVSZXNwb25zZRI7CgpyZXBvc2l0b3J5GAEgASgLMicuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlJlcG9zaXRvcnkiUQoXTGlzdFJlcG9zaXRvcmllc1JlcXVlc3QSEQoJcGFnZV9zaXplGAEgASgNEhIKCnBhZ2VfdG9rZW4YAiABKAkSDwoHcmV2ZXJzZRgDIAEoCCJyChhMaXN0UmVwb3NpdG9yaWVzUmVzcG9uc2USPQoMcmVwb3NpdG9yaWVzGAEgAygLMicuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlJlcG9zaXRvcnkSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImYKG0xpc3RVc2VyUmVwb3NpdG9yaWVzUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEoDRISCgpwYWdlX3Rva2VuGAMgASgJEg8KB3JldmVyc2UYBCABKAgidgocTGlzdFVzZXJSZXBvc2l0b3JpZXNSZXNwb25zZRI9CgxyZXBvc2l0b3JpZXMYASADKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiXgokTGlzdFJlcG9zaXRvcmllc1VzZXJDYW5BY2Nlc3NSZXF1ZXN0EhEKCXBhZ2Vfc2l6ZRgBIAEoDRISCgpwYWdlX3Rva2VuGAIgASgJEg8KB3JldmVyc2UYAyABKAgifwolTGlzdFJlcG9zaXRvcmllc1VzZXJDYW5BY2Nlc3NSZXNwb25zZRI9CgxyZXBvc2l0b3JpZXMYASADKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkidgojTGlzdE9yZ2FuaXphdGlvblJlcG9zaXRvcmllc1JlcXVlc3QSFwoPb3JnYW5pemF0aW9uX2lkGAEgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEoDRISCgpwYWdlX3Rva2VuGAMgASgJEg8KB3JldmVyc2UYBCABKAgifgokTGlzdE9yZ2FuaXphdGlvblJlcG9zaXRvcmllc1Jlc3BvbnNlEj0KDHJlcG9zaXRvcmllcxgBIAMoCzInLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5SZXBvc2l0b3J5EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJzCiFDcmVhdGVSZXBvc2l0b3J5QnlGdWxsTmFtZVJlcXVlc3QSEQoJZnVsbF9uYW1lGAEgASgJEjsKCnZpc2liaWxpdHkYAiABKA4yJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuVmlzaWJpbGl0eSJhCiJDcmVhdGVSZXBvc2l0b3J5QnlGdWxsTmFtZVJlc3BvbnNlEjsKCnJlcG9zaXRvcnkYASABKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeSIlChdEZWxldGVSZXBvc2l0b3J5UmVxdWVzdBIKCgJpZBgBIAEoCSIaChhEZWxldGVSZXBvc2l0b3J5UmVzcG9uc2UiNgohRGVsZXRlUmVwb3NpdG9yeUJ5RnVsbE5hbWVSZXF1ZXN0EhEKCWZ1bGxfbmFtZRgBIAEoCSIkCiJEZWxldGVSZXBvc2l0b3J5QnlGdWxsTmFtZVJlc3BvbnNlImwKIERlcHJlY2F0ZVJlcG9zaXRvcnlCeU5hbWVSZXF1ZXN0EhIKCm93bmVyX25hbWUYASABKAkSFwoPcmVwb3NpdG9yeV9uYW1lGAIgASgJEhsKE2RlcHJlY2F0aW9uX21lc3NhZ2UYAyABKAkiYAohRGVwcmVjYXRlUmVwb3NpdG9yeUJ5TmFtZVJlc3BvbnNlEjsKCnJlcG9zaXRvcnkYASABKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeSJRCiJVbmRlcHJlY2F0ZVJlcG9zaXRvcnlCeU5hbWVSZXF1ZXN0EhIKCm93bmVyX25hbWUYASABKAkSFwoPcmVwb3NpdG9yeV9uYW1lGAIgASgJImIKI1VuZGVwcmVjYXRlUmVwb3NpdG9yeUJ5TmFtZVJlc3BvbnNlEjsKCnJlcG9zaXRvcnkYASABKAsyJy5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeSKPAQofU2V0UmVwb3NpdG9yeUNvbnRyaWJ1dG9yUmVxdWVzdBIVCg1yZXBvc2l0b3J5X2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSRAoPcmVwb3NpdG9yeV9yb2xlGAMgASgOMisuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlJlcG9zaXRvcnlSb2xlIiIKIFNldFJlcG9zaXRvcnlDb250cmlidXRvclJlc3BvbnNlInIKIUxpc3RSZXBvc2l0b3J5Q29udHJpYnV0b3JzUmVxdWVzdBIVCg1yZXBvc2l0b3J5X2lkGAEgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEoDRISCgpwYWdlX3Rva2VuGAMgASgJEg8KB3JldmVyc2UYBCABKAgigAEKIkxpc3RSZXBvc2l0b3J5Q29udHJpYnV0b3JzUmVzcG9uc2USQQoFdXNlcnMYASADKAsyMi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuUmVwb3NpdG9yeUNvbnRyaWJ1dG9yEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSI1ChxHZXRSZXBvc2l0b3J5U2V0dGluZ3NSZXF1ZXN0EhUKDXJlcG9zaXRvcnlfaWQYASABKAkiOwodR2V0UmVwb3NpdG9yeVNldHRpbmdzUmVzcG9uc2USGgoSY29udHJpYnV0b3JzX2NvdW50GAEgASgNKlcKClZpc2liaWxpdHkSGgoWVklTSUJJTElUWV9VTlNQRUNJRklFRBAAEhUKEVZJU0lCSUxJVFlfUFVCTElDEAESFgoSVklTSUJJTElUWV9QUklWQVRFEAIy6REKEVJlcG9zaXRvcnlTZXJ2aWNlEnYKDUdldFJlcG9zaXRvcnkSMS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UmVwb3NpdG9yeVJlcXVlc3QaMi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UmVwb3NpdG9yeVJlc3BvbnNlEpQBChdHZXRSZXBvc2l0b3J5QnlGdWxsTmFtZRI7LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5HZXRSZXBvc2l0b3J5QnlGdWxsTmFtZVJlcXVlc3QaPC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UmVwb3NpdG9yeUJ5RnVsbE5hbWVSZXNwb25zZRJ/ChBMaXN0UmVwb3NpdG9yaWVzEjQuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RSZXBvc2l0b3JpZXNSZXF1ZXN0GjUuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RSZXBvc2l0b3JpZXNSZXNwb25zZRKLAQoUTGlzdFVzZXJSZXBvc2l0b3JpZXMSOC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTGlzdFVzZXJSZXBvc2l0b3JpZXNSZXF1ZXN0GjkuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RVc2VyUmVwb3NpdG9yaWVzUmVzcG9uc2USpgEKHUxpc3RSZXBvc2l0b3JpZXNVc2VyQ2FuQWNjZXNzEkEuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RSZXBvc2l0b3JpZXNVc2VyQ2FuQWNjZXNzUmVxdWVzdBpCLmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5MaXN0UmVwb3NpdG9yaWVzVXNlckNhbkFjY2Vzc1Jlc3BvbnNlEqMBChxMaXN0T3JnYW5pemF0aW9uUmVwb3NpdG9yaWVzEkAuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RPcmdhbml6YXRpb25SZXBvc2l0b3JpZXNSZXF1ZXN0GkEuYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RPcmdhbml6YXRpb25SZXBvc2l0b3JpZXNSZXNwb25zZRKdAQoaQ3JlYXRlUmVwb3NpdG9yeUJ5RnVsbE5hbWUSPi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuQ3JlYXRlUmVwb3NpdG9yeUJ5RnVsbE5hbWVSZXF1ZXN0Gj8uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkNyZWF0ZVJlcG9zaXRvcnlCeUZ1bGxOYW1lUmVzcG9uc2USfwoQRGVsZXRlUmVwb3NpdG9yeRI0LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5EZWxldGVSZXBvc2l0b3J5UmVxdWVzdBo1LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5EZWxldGVSZXBvc2l0b3J5UmVzcG9uc2USnQEKGkRlbGV0ZVJlcG9zaXRvcnlCeUZ1bGxOYW1lEj4uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkRlbGV0ZVJlcG9zaXRvcnlCeUZ1bGxOYW1lUmVxdWVzdBo/LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5EZWxldGVSZXBvc2l0b3J5QnlGdWxsTmFtZVJlc3BvbnNlEpoBChlEZXByZWNhdGVSZXBvc2l0b3J5QnlOYW1lEj0uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkRlcHJlY2F0ZVJlcG9zaXRvcnlCeU5hbWVSZXF1ZXN0Gj4uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkRlcHJlY2F0ZVJlcG9zaXRvcnlCeU5hbWVSZXNwb25zZRKgAQobVW5kZXByZWNhdGVSZXBvc2l0b3J5QnlOYW1lEj8uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLlVuZGVwcmVjYXRlUmVwb3NpdG9yeUJ5TmFtZVJlcXVlc3QaQC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuVW5kZXByZWNhdGVSZXBvc2l0b3J5QnlOYW1lUmVzcG9uc2USmgEKGUdldFJlcG9zaXRvcmllc0J5RnVsbE5hbWUSPS5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UmVwb3NpdG9yaWVzQnlGdWxsTmFtZVJlcXVlc3QaPi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuR2V0UmVwb3NpdG9yaWVzQnlGdWxsTmFtZVJlc3BvbnNlEpcBChhTZXRSZXBvc2l0b3J5Q29udHJpYnV0b3ISPC5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuU2V0UmVwb3NpdG9yeUNvbnRyaWJ1dG9yUmVxdWVzdBo9LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5TZXRSZXBvc2l0b3J5Q29udHJpYnV0b3JSZXNwb25zZRKdAQoaTGlzdFJlcG9zaXRvcnlDb250cmlidXRvcnMSPi5idWYuYWxwaGEucmVnaXN0cnkudjFhbHBoYTEuTGlzdFJlcG9zaXRvcnlDb250cmlidXRvcnNSZXF1ZXN0Gj8uYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkxpc3RSZXBvc2l0b3J5Q29udHJpYnV0b3JzUmVzcG9uc2USjgEKFUdldFJlcG9zaXRvcnlTZXR0aW5ncxI5LmJ1Zi5hbHBoYS5yZWdpc3RyeS52MWFscGhhMS5HZXRSZXBvc2l0b3J5U2V0dGluZ3NSZXF1ZXN0GjouYnVmLmFscGhhLnJlZ2lzdHJ5LnYxYWxwaGExLkdldFJlcG9zaXRvcnlTZXR0aW5nc1Jlc3BvbnNlYgZwcm90bzM", [fileDesc_buf_alpha_registry_v1alpha1_role, fileDesc_buf_alpha_registry_v1alpha1_user, fileDesc_google_protobuf_timestamp]);

/**
 * @generated from message buf.alpha.registry.v1alpha1.Repository
 */
export type Repository = Message<"buf.alpha.registry.v1alpha1.Repository"> & {
  /**
   * primary key, unique, immutable
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * immutable
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * mutable
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * unique, mutable
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from oneof buf.alpha.registry.v1alpha1.Repository.owner
   */
  owner: {
    /**
     * foreign key, mutable
     *
     * @generated from field: string user_id = 5;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * foreign key, mutable
     *
     * @generated from field: string organization_id = 6;
     */
    value: string;
    case: "organizationId";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Visibility visibility = 7;
   */
  visibility: Visibility;

  /**
   * deprecated means this repository is deprecated.
   *
   * @generated from field: bool deprecated = 8;
   */
  deprecated: boolean;

  /**
   * deprecation_message is the message shown if the repository is deprecated.
   *
   * @generated from field: string deprecation_message = 9;
   */
  deprecationMessage: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.Repository.
 * Use `create(RepositoryDesc)` to create a new message.
 */
export const RepositoryDesc: GenDescMessage<Repository> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 0);

/**
 * @generated from message buf.alpha.registry.v1alpha1.RepositoryContributor
 */
export type RepositoryContributor = Message<"buf.alpha.registry.v1alpha1.RepositoryContributor"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.User user = 1;
   */
  user?: User;

  /**
   * The ID of the for which the role belongs to.
   *
   * @generated from field: string repository_id = 2;
   */
  repositoryId: string;

  /**
   * The role that the user has been explicitly assigned against the repository.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.RepositoryRole explicit_role = 3;
   */
  explicitRole: RepositoryRole;

  /**
   * Optionally defines the role that the user has implicitly against the repository through the owning organization.
   * If the repository does not belong to an organization or the user is not part of the owning organization, this is unset.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.RepositoryRole implicit_role = 4;
   */
  implicitRole: RepositoryRole;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.RepositoryContributor.
 * Use `create(RepositoryContributorDesc)` to create a new message.
 */
export const RepositoryContributorDesc: GenDescMessage<RepositoryContributor> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 1);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameRequest
 */
export type GetRepositoriesByFullNameRequest = Message<"buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameRequest"> & {
  /**
   * minimum length is 1
   * maximum length is 250
   *
   * @generated from field: repeated string full_names = 1;
   */
  fullNames: string[];
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameRequest.
 * Use `create(GetRepositoriesByFullNameRequestDesc)` to create a new message.
 */
export const GetRepositoriesByFullNameRequestDesc: GenDescMessage<GetRepositoriesByFullNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 2);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameResponse
 */
export type GetRepositoriesByFullNameResponse = Message<"buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Repository repositories = 1;
   */
  repositories: Repository[];
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoriesByFullNameResponse.
 * Use `create(GetRepositoriesByFullNameResponseDesc)` to create a new message.
 */
export const GetRepositoriesByFullNameResponseDesc: GenDescMessage<GetRepositoriesByFullNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 3);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoryRequest
 */
export type GetRepositoryRequest = Message<"buf.alpha.registry.v1alpha1.GetRepositoryRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoryRequest.
 * Use `create(GetRepositoryRequestDesc)` to create a new message.
 */
export const GetRepositoryRequestDesc: GenDescMessage<GetRepositoryRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 4);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoryResponse
 */
export type GetRepositoryResponse = Message<"buf.alpha.registry.v1alpha1.GetRepositoryResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Repository repository = 1;
   */
  repository?: Repository;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoryResponse.
 * Use `create(GetRepositoryResponseDesc)` to create a new message.
 */
export const GetRepositoryResponseDesc: GenDescMessage<GetRepositoryResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 5);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoryByFullNameRequest
 */
export type GetRepositoryByFullNameRequest = Message<"buf.alpha.registry.v1alpha1.GetRepositoryByFullNameRequest"> & {
  /**
   * @generated from field: string full_name = 1;
   */
  fullName: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoryByFullNameRequest.
 * Use `create(GetRepositoryByFullNameRequestDesc)` to create a new message.
 */
export const GetRepositoryByFullNameRequestDesc: GenDescMessage<GetRepositoryByFullNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 6);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositoryByFullNameResponse
 */
export type GetRepositoryByFullNameResponse = Message<"buf.alpha.registry.v1alpha1.GetRepositoryByFullNameResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Repository repository = 1;
   */
  repository?: Repository;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositoryByFullNameResponse.
 * Use `create(GetRepositoryByFullNameResponseDesc)` to create a new message.
 */
export const GetRepositoryByFullNameResponseDesc: GenDescMessage<GetRepositoryByFullNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 7);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoriesRequest
 */
export type ListRepositoriesRequest = Message<"buf.alpha.registry.v1alpha1.ListRepositoriesRequest"> & {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 3;
   */
  reverse: boolean;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoriesRequest.
 * Use `create(ListRepositoriesRequestDesc)` to create a new message.
 */
export const ListRepositoriesRequestDesc: GenDescMessage<ListRepositoriesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 8);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoriesResponse
 */
export type ListRepositoriesResponse = Message<"buf.alpha.registry.v1alpha1.ListRepositoriesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoriesResponse.
 * Use `create(ListRepositoriesResponseDesc)` to create a new message.
 */
export const ListRepositoriesResponseDesc: GenDescMessage<ListRepositoriesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 9);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserRepositoriesRequest
 */
export type ListUserRepositoriesRequest = Message<"buf.alpha.registry.v1alpha1.ListUserRepositoriesRequest"> & {
  /**
   * The ID of the user whose repositories should be listed.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListUserRepositoriesRequest.
 * Use `create(ListUserRepositoriesRequestDesc)` to create a new message.
 */
export const ListUserRepositoriesRequestDesc: GenDescMessage<ListUserRepositoriesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 10);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserRepositoriesResponse
 */
export type ListUserRepositoriesResponse = Message<"buf.alpha.registry.v1alpha1.ListUserRepositoriesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListUserRepositoriesResponse.
 * Use `create(ListUserRepositoriesResponseDesc)` to create a new message.
 */
export const ListUserRepositoriesResponseDesc: GenDescMessage<ListUserRepositoriesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 11);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessRequest
 */
export type ListRepositoriesUserCanAccessRequest = Message<"buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessRequest"> & {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 3;
   */
  reverse: boolean;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessRequest.
 * Use `create(ListRepositoriesUserCanAccessRequestDesc)` to create a new message.
 */
export const ListRepositoriesUserCanAccessRequestDesc: GenDescMessage<ListRepositoriesUserCanAccessRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 12);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessResponse
 */
export type ListRepositoriesUserCanAccessResponse = Message<"buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoriesUserCanAccessResponse.
 * Use `create(ListRepositoriesUserCanAccessResponseDesc)` to create a new message.
 */
export const ListRepositoriesUserCanAccessResponseDesc: GenDescMessage<ListRepositoriesUserCanAccessResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 13);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesRequest
 */
export type ListOrganizationRepositoriesRequest = Message<"buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesRequest"> & {
  /**
   * The ID of the organization whose repositories should be listed.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesRequest.
 * Use `create(ListOrganizationRepositoriesRequestDesc)` to create a new message.
 */
export const ListOrganizationRepositoriesRequestDesc: GenDescMessage<ListOrganizationRepositoriesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 14);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesResponse
 */
export type ListOrganizationRepositoriesResponse = Message<"buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Repository repositories = 1;
   */
  repositories: Repository[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListOrganizationRepositoriesResponse.
 * Use `create(ListOrganizationRepositoriesResponseDesc)` to create a new message.
 */
export const ListOrganizationRepositoriesResponseDesc: GenDescMessage<ListOrganizationRepositoriesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 15);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameRequest
 */
export type CreateRepositoryByFullNameRequest = Message<"buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameRequest"> & {
  /**
   * Must be unique across repositories.
   *
   * @generated from field: string full_name = 1;
   */
  fullName: string;

  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Visibility visibility = 2;
   */
  visibility: Visibility;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameRequest.
 * Use `create(CreateRepositoryByFullNameRequestDesc)` to create a new message.
 */
export const CreateRepositoryByFullNameRequestDesc: GenDescMessage<CreateRepositoryByFullNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 16);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameResponse
 */
export type CreateRepositoryByFullNameResponse = Message<"buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Repository repository = 1;
   */
  repository?: Repository;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.CreateRepositoryByFullNameResponse.
 * Use `create(CreateRepositoryByFullNameResponseDesc)` to create a new message.
 */
export const CreateRepositoryByFullNameResponseDesc: GenDescMessage<CreateRepositoryByFullNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 17);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteRepositoryRequest
 */
export type DeleteRepositoryRequest = Message<"buf.alpha.registry.v1alpha1.DeleteRepositoryRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeleteRepositoryRequest.
 * Use `create(DeleteRepositoryRequestDesc)` to create a new message.
 */
export const DeleteRepositoryRequestDesc: GenDescMessage<DeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 18);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteRepositoryResponse
 */
export type DeleteRepositoryResponse = Message<"buf.alpha.registry.v1alpha1.DeleteRepositoryResponse"> & {
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeleteRepositoryResponse.
 * Use `create(DeleteRepositoryResponseDesc)` to create a new message.
 */
export const DeleteRepositoryResponseDesc: GenDescMessage<DeleteRepositoryResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 19);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameRequest
 */
export type DeleteRepositoryByFullNameRequest = Message<"buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameRequest"> & {
  /**
   * @generated from field: string full_name = 1;
   */
  fullName: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameRequest.
 * Use `create(DeleteRepositoryByFullNameRequestDesc)` to create a new message.
 */
export const DeleteRepositoryByFullNameRequestDesc: GenDescMessage<DeleteRepositoryByFullNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 20);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameResponse
 */
export type DeleteRepositoryByFullNameResponse = Message<"buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameResponse"> & {
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeleteRepositoryByFullNameResponse.
 * Use `create(DeleteRepositoryByFullNameResponseDesc)` to create a new message.
 */
export const DeleteRepositoryByFullNameResponseDesc: GenDescMessage<DeleteRepositoryByFullNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 21);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameRequest
 */
export type DeprecateRepositoryByNameRequest = Message<"buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameRequest"> & {
  /**
   * @generated from field: string owner_name = 1;
   */
  ownerName: string;

  /**
   * @generated from field: string repository_name = 2;
   */
  repositoryName: string;

  /**
   * A message shown along with the deprecation warning for this repository.
   * It must be a utf8 encoded string containing 256 or fewer characters.
   *
   * @generated from field: string deprecation_message = 3;
   */
  deprecationMessage: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameRequest.
 * Use `create(DeprecateRepositoryByNameRequestDesc)` to create a new message.
 */
export const DeprecateRepositoryByNameRequestDesc: GenDescMessage<DeprecateRepositoryByNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 22);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameResponse
 */
export type DeprecateRepositoryByNameResponse = Message<"buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Repository repository = 1;
   */
  repository?: Repository;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.DeprecateRepositoryByNameResponse.
 * Use `create(DeprecateRepositoryByNameResponseDesc)` to create a new message.
 */
export const DeprecateRepositoryByNameResponseDesc: GenDescMessage<DeprecateRepositoryByNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 23);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameRequest
 */
export type UndeprecateRepositoryByNameRequest = Message<"buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameRequest"> & {
  /**
   * @generated from field: string owner_name = 1;
   */
  ownerName: string;

  /**
   * @generated from field: string repository_name = 2;
   */
  repositoryName: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameRequest.
 * Use `create(UndeprecateRepositoryByNameRequestDesc)` to create a new message.
 */
export const UndeprecateRepositoryByNameRequestDesc: GenDescMessage<UndeprecateRepositoryByNameRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 24);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameResponse
 */
export type UndeprecateRepositoryByNameResponse = Message<"buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Repository repository = 1;
   */
  repository?: Repository;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.UndeprecateRepositoryByNameResponse.
 * Use `create(UndeprecateRepositoryByNameResponseDesc)` to create a new message.
 */
export const UndeprecateRepositoryByNameResponseDesc: GenDescMessage<UndeprecateRepositoryByNameResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 25);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetRepositoryContributorRequest
 */
export type SetRepositoryContributorRequest = Message<"buf.alpha.registry.v1alpha1.SetRepositoryContributorRequest"> & {
  /**
   * The ID of the repository for which the user's role will be set.
   *
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * The ID of the user whose role will be set.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * The role to assign to the user.
   * Setting UNSPECIFIED means removing the user's role.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.RepositoryRole repository_role = 3;
   */
  repositoryRole: RepositoryRole;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.SetRepositoryContributorRequest.
 * Use `create(SetRepositoryContributorRequestDesc)` to create a new message.
 */
export const SetRepositoryContributorRequestDesc: GenDescMessage<SetRepositoryContributorRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 26);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetRepositoryContributorResponse
 */
export type SetRepositoryContributorResponse = Message<"buf.alpha.registry.v1alpha1.SetRepositoryContributorResponse"> & {
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.SetRepositoryContributorResponse.
 * Use `create(SetRepositoryContributorResponseDesc)` to create a new message.
 */
export const SetRepositoryContributorResponseDesc: GenDescMessage<SetRepositoryContributorResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 27);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoryContributorsRequest
 */
export type ListRepositoryContributorsRequest = Message<"buf.alpha.registry.v1alpha1.ListRepositoryContributorsRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoryContributorsRequest.
 * Use `create(ListRepositoryContributorsRequestDesc)` to create a new message.
 */
export const ListRepositoryContributorsRequestDesc: GenDescMessage<ListRepositoryContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 28);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListRepositoryContributorsResponse
 */
export type ListRepositoryContributorsResponse = Message<"buf.alpha.registry.v1alpha1.ListRepositoryContributorsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.RepositoryContributor users = 1;
   */
  users: RepositoryContributor[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.ListRepositoryContributorsResponse.
 * Use `create(ListRepositoryContributorsResponseDesc)` to create a new message.
 */
export const ListRepositoryContributorsResponseDesc: GenDescMessage<ListRepositoryContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 29);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositorySettingsRequest
 */
export type GetRepositorySettingsRequest = Message<"buf.alpha.registry.v1alpha1.GetRepositorySettingsRequest"> & {
  /**
   * The ID of the repository for which to get the settings.
   *
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositorySettingsRequest.
 * Use `create(GetRepositorySettingsRequestDesc)` to create a new message.
 */
export const GetRepositorySettingsRequestDesc: GenDescMessage<GetRepositorySettingsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 30);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetRepositorySettingsResponse
 */
export type GetRepositorySettingsResponse = Message<"buf.alpha.registry.v1alpha1.GetRepositorySettingsResponse"> & {
  /**
   * The number of outside contributors in the repository,
   * excluding owning-organization's members that have an explicit role.
   *
   * @generated from field: uint32 contributors_count = 1;
   */
  contributorsCount: number;
};

/**
 * Describes the message buf.alpha.registry.v1alpha1.GetRepositorySettingsResponse.
 * Use `create(GetRepositorySettingsResponseDesc)` to create a new message.
 */
export const GetRepositorySettingsResponseDesc: GenDescMessage<GetRepositorySettingsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 31);

/**
 * @generated from enum buf.alpha.registry.v1alpha1.Visibility
 */
export enum Visibility {
  /**
   * @generated from enum value: VISIBILITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VISIBILITY_PUBLIC = 1;
   */
  PUBLIC = 1,

  /**
   * @generated from enum value: VISIBILITY_PRIVATE = 2;
   */
  PRIVATE = 2,
}

/**
 * Describes the enum buf.alpha.registry.v1alpha1.Visibility.
 */
export const VisibilityDesc: GenDescEnum<Visibility> = /*@__PURE__*/
  enumDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 0);

/**
 * RepositoryService is the Repository service.
 *
 * @generated from service buf.alpha.registry.v1alpha1.RepositoryService
 */
export const RepositoryService: GenDescService<{
  /**
   * GetRepository gets a repository by ID.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.GetRepository
   */
  getRepository: {
    kind: "unary";
    I: GetRepositoryRequest;
    O: GetRepositoryResponse;
  },
  /**
   * GetRepositoryByFullName gets a repository by full name.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.GetRepositoryByFullName
   */
  getRepositoryByFullName: {
    kind: "unary";
    I: GetRepositoryByFullNameRequest;
    O: GetRepositoryByFullNameResponse;
  },
  /**
   * ListRepositories lists all repositories.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.ListRepositories
   */
  listRepositories: {
    kind: "unary";
    I: ListRepositoriesRequest;
    O: ListRepositoriesResponse;
  },
  /**
   * ListUserRepositories lists all repositories belonging to a user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.ListUserRepositories
   */
  listUserRepositories: {
    kind: "unary";
    I: ListUserRepositoriesRequest;
    O: ListUserRepositoriesResponse;
  },
  /**
   * ListUserRepositories lists all repositories a user can access.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.ListRepositoriesUserCanAccess
   */
  listRepositoriesUserCanAccess: {
    kind: "unary";
    I: ListRepositoriesUserCanAccessRequest;
    O: ListRepositoriesUserCanAccessResponse;
  },
  /**
   * ListOrganizationRepositories lists all repositories for an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.ListOrganizationRepositories
   */
  listOrganizationRepositories: {
    kind: "unary";
    I: ListOrganizationRepositoriesRequest;
    O: ListOrganizationRepositoriesResponse;
  },
  /**
   * CreateRepositoryByFullName creates a new repository by full name.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.CreateRepositoryByFullName
   */
  createRepositoryByFullName: {
    kind: "unary";
    I: CreateRepositoryByFullNameRequest;
    O: CreateRepositoryByFullNameResponse;
  },
  /**
   * DeleteRepository deletes a repository.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.DeleteRepository
   */
  deleteRepository: {
    kind: "unary";
    I: DeleteRepositoryRequest;
    O: DeleteRepositoryResponse;
  },
  /**
   * DeleteRepositoryByFullName deletes a repository by full name.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.DeleteRepositoryByFullName
   */
  deleteRepositoryByFullName: {
    kind: "unary";
    I: DeleteRepositoryByFullNameRequest;
    O: DeleteRepositoryByFullNameResponse;
  },
  /**
   * DeprecateRepositoryByName deprecates the repository.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.DeprecateRepositoryByName
   */
  deprecateRepositoryByName: {
    kind: "unary";
    I: DeprecateRepositoryByNameRequest;
    O: DeprecateRepositoryByNameResponse;
  },
  /**
   * UndeprecateRepositoryByName makes the repository not deprecated and removes any deprecation_message.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.UndeprecateRepositoryByName
   */
  undeprecateRepositoryByName: {
    kind: "unary";
    I: UndeprecateRepositoryByNameRequest;
    O: UndeprecateRepositoryByNameResponse;
  },
  /**
   * GetRepositoriesByFullName gets repositories by full name. Response order is unspecified.
   * Errors if any of the repositories don't exist or the caller does not have access to any of the repositories.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.GetRepositoriesByFullName
   */
  getRepositoriesByFullName: {
    kind: "unary";
    I: GetRepositoriesByFullNameRequest;
    O: GetRepositoriesByFullNameResponse;
  },
  /**
   * SetRepositoryContributor sets the role of a user in the repository.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.SetRepositoryContributor
   */
  setRepositoryContributor: {
    kind: "unary";
    I: SetRepositoryContributorRequest;
    O: SetRepositoryContributorResponse;
  },
  /**
   * ListRepositoryContributors returns the list of contributors that has an explicit role against the repository.
   * This does not include users who have implicit roles against the repository, unless they have also been
   * assigned a role explicitly.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.ListRepositoryContributors
   */
  listRepositoryContributors: {
    kind: "unary";
    I: ListRepositoryContributorsRequest;
    O: ListRepositoryContributorsResponse;
  },
  /**
   * GetRepositorySettings gets the settings of a repository.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryService.GetRepositorySettings
   */
  getRepositorySettings: {
    kind: "unary";
    I: GetRepositorySettingsRequest;
    O: GetRepositorySettingsResponse;
  },
}
> = /*@__PURE__*/
  serviceDesc(fileDesc_buf_alpha_registry_v1alpha1_repository, 0);

