// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.0.0-alpha.1 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/plugin.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenDescEnum, GenDescFile, GenDescMessage, GenDescService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PluginRole, TemplateRole } from "./role_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_role } from "./role_pb.js";
import type { User } from "./user_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_user } from "./user_pb.js";
import type { RuntimeLibrary } from "./generate_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_generate } from "./generate_pb.js";
import type { Message } from "@bufbuild/protobuf";

export const fileDesc_buf_alpha_registry_v1alpha1_plugin: GenDescFile = /*@__PURE__*/
  fileDesc("", [fileDesc_buf_alpha_registry_v1alpha1_role, fileDesc_buf_alpha_registry_v1alpha1_user, fileDesc_buf_alpha_registry_v1alpha1_generate]);

/**
 * Plugin represents a protoc plugin, such as protoc-gen-go.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Plugin
 */
export type Plugin = Message<"buf.alpha.registry.v1alpha1.Plugin"> & {
  /**
   * The ID of the plugin, which uniquely identifies the plugin.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the plugin, i.e. "protoc-gen-go".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The name of the owner of the plugin. Either a username or
   * organization name.
   *
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * The visibility of the plugin.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginVisibility visibility = 4;
   */
  visibility: PluginVisibility;

  /**
   * deprecated means this plugin is deprecated.
   *
   * @generated from field: bool deprecated = 5;
   */
  deprecated: boolean;

  /**
   * deprecation_message is the message shown if the plugin is deprecated.
   *
   * @generated from field: string deprecation_message = 6;
   */
  deprecationMessage: string;
};

// Describes the message buf.alpha.registry.v1alpha1.Plugin.
// Use `create(PluginDesc)` to create a new Plugin.
export const PluginDesc: GenDescMessage<Plugin> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 0);

/**
 * PluginVersion represents a specific build of a plugin,
 * such as protoc-gen-go v1.4.0.
 *
 * @generated from message buf.alpha.registry.v1alpha1.PluginVersion
 */
export type PluginVersion = Message<"buf.alpha.registry.v1alpha1.PluginVersion"> & {
  /**
   * The ID of the plugin version, which uniquely identifies the plugin version.
   * Mostly used for pagination.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the version, i.e. "v1.4.0".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The name of the plugin to which this version relates.
   *
   * @generated from field: string plugin_name = 3;
   */
  pluginName: string;

  /**
   * The owner of the plugin to which this version relates.
   *
   * @generated from field: string plugin_owner = 4;
   */
  pluginOwner: string;

  /**
   * The full container image digest associated with this plugin version including
   * the algorithm.
   * Ref: https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests
   *
   * @generated from field: string container_image_digest = 5;
   */
  containerImageDigest: string;

  /**
   * Optionally define the runtime libraries.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.RuntimeLibrary runtime_libraries = 6;
   */
  runtimeLibraries: RuntimeLibrary[];
};

// Describes the message buf.alpha.registry.v1alpha1.PluginVersion.
// Use `create(PluginVersionDesc)` to create a new PluginVersion.
export const PluginVersionDesc: GenDescMessage<PluginVersion> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 1);

/**
 * Template defines a set of plugins that should be used together
 * i.e. "go-grpc" would include protoc-gen-go and protoc-gen-go-grpc.
 *
 * @generated from message buf.alpha.registry.v1alpha1.Template
 */
export type Template = Message<"buf.alpha.registry.v1alpha1.Template"> & {
  /**
   * The ID of the template, which uniquely identifies the template.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the template, i.e. "grpc-go".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The name of the owner of the template. Either a
   * username or organization name.
   *
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * Must not contain duplicate plugins. Order of plugin configs
   * dictates insertion point order. Note that we're
   * intentionally putting most of the plugin configuration
   * in the template, so that template versions are
   * less likely to cause breakages for users.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginConfig plugin_configs = 4;
   */
  pluginConfigs: PluginConfig[];

  /**
   * The visibility of the template.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginVisibility visibility = 5;
   */
  visibility: PluginVisibility;

  /**
   * deprecated means this template is deprecated.
   *
   * @generated from field: bool deprecated = 8;
   */
  deprecated: boolean;

  /**
   * deprecation_message is the message shown if the template is deprecated.
   *
   * @generated from field: string deprecation_message = 9;
   */
  deprecationMessage: string;
};

// Describes the message buf.alpha.registry.v1alpha1.Template.
// Use `create(TemplateDesc)` to create a new Template.
export const TemplateDesc: GenDescMessage<Template> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 2);

/**
 * PluginConfig defines a runtime configuration for a plugin.
 *
 * @generated from message buf.alpha.registry.v1alpha1.PluginConfig
 */
export type PluginConfig = Message<"buf.alpha.registry.v1alpha1.PluginConfig"> & {
  /**
   * The owner of the plugin to which this config relates.
   *
   * @generated from field: string plugin_owner = 1;
   */
  pluginOwner: string;

  /**
   * The name of the plugin to which this config relates.
   *
   * @generated from field: string plugin_name = 2;
   */
  pluginName: string;

  /**
   * Parameters that should be provided to the plugin. These are
   * joined with a "," before being provided to the plugin at runtime.
   *
   * @generated from field: repeated string parameters = 3;
   */
  parameters: string[];

  /**
   * True if the source plugin is inaccessible by the user.
   *
   * @generated from field: bool inaccessible = 5;
   */
  inaccessible: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.PluginConfig.
// Use `create(PluginConfigDesc)` to create a new PluginConfig.
export const PluginConfigDesc: GenDescMessage<PluginConfig> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 3);

/**
 * TemplateVersion defines a template at a
 * specific set of versions for the contained plugins.
 *
 * @generated from message buf.alpha.registry.v1alpha1.TemplateVersion
 */
export type TemplateVersion = Message<"buf.alpha.registry.v1alpha1.TemplateVersion"> & {
  /**
   * The ID of the template version, which uniquely identifies the template version.
   * Mostly used for pagination.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the template version, i.e. "v1".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The owner of the template to which this version relates.
   *
   * @generated from field: string template_owner = 3;
   */
  templateOwner: string;

  /**
   * The name of the template to which this version relates.
   *
   * @generated from field: string template_name = 4;
   */
  templateName: string;

  /**
   * A map from plugin owner and name to version for the plugins
   * defined in the template. Every plugin in the template
   * must have a corresponding version in this array.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginVersionMapping plugin_versions = 5;
   */
  pluginVersions: PluginVersionMapping[];
};

// Describes the message buf.alpha.registry.v1alpha1.TemplateVersion.
// Use `create(TemplateVersionDesc)` to create a new TemplateVersion.
export const TemplateVersionDesc: GenDescMessage<TemplateVersion> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 4);

/**
 * PluginVersionMapping maps a plugin_id to a version.
 *
 * @generated from message buf.alpha.registry.v1alpha1.PluginVersionMapping
 */
export type PluginVersionMapping = Message<"buf.alpha.registry.v1alpha1.PluginVersionMapping"> & {
  /**
   * The owner of the plugin to which this mapping relates.
   *
   * @generated from field: string plugin_owner = 1;
   */
  pluginOwner: string;

  /**
   * The name of the plugin to which this mapping relates.
   *
   * @generated from field: string plugin_name = 2;
   */
  pluginName: string;

  /**
   * The version of the plugin to use, i.e. "v1.4.0".
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * True if the source plugin is inaccessible by the user.
   *
   * @generated from field: bool inaccessible = 5;
   */
  inaccessible: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.PluginVersionMapping.
// Use `create(PluginVersionMappingDesc)` to create a new PluginVersionMapping.
export const PluginVersionMappingDesc: GenDescMessage<PluginVersionMapping> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 5);

/**
 * @generated from message buf.alpha.registry.v1alpha1.PluginContributor
 */
export type PluginContributor = Message<"buf.alpha.registry.v1alpha1.PluginContributor"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.User user = 1;
   */
  user?: User;

  /**
   * The ID of the plugin which the role belongs to.
   *
   * @generated from field: string plugin_id = 2;
   */
  pluginId: string;

  /**
   * The role that the user has been explicitly assigned against the plugin.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginRole explicit_role = 3;
   */
  explicitRole: PluginRole;

  /**
   * Optionally defines the role that the user has implicitly against the plugin through the owning organization.
   * If the plugin does not belong to an organization or the user is not part of the owning organization, this is unset.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginRole implicit_role = 4;
   */
  implicitRole: PluginRole;
};

// Describes the message buf.alpha.registry.v1alpha1.PluginContributor.
// Use `create(PluginContributorDesc)` to create a new PluginContributor.
export const PluginContributorDesc: GenDescMessage<PluginContributor> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 6);

/**
 * @generated from message buf.alpha.registry.v1alpha1.TemplateContributor
 */
export type TemplateContributor = Message<"buf.alpha.registry.v1alpha1.TemplateContributor"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.User user = 1;
   */
  user?: User;

  /**
   * The ID of the template which the role belongs to.
   *
   * @generated from field: string template_id = 2;
   */
  templateId: string;

  /**
   * The role that the user has been explicitly assigned against the template.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.TemplateRole explicit_role = 3;
   */
  explicitRole: TemplateRole;

  /**
   * Optionally defines the role that the user has implicitly against the template through the owning organization.
   * If the template does not belong to an organization or the user is not part of the owning organization, this is unset.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.TemplateRole implicit_role = 4;
   */
  implicitRole: TemplateRole;
};

// Describes the message buf.alpha.registry.v1alpha1.TemplateContributor.
// Use `create(TemplateContributorDesc)` to create a new TemplateContributor.
export const TemplateContributorDesc: GenDescMessage<TemplateContributor> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 7);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginsRequest
 */
export type ListPluginsRequest = Message<"buf.alpha.registry.v1alpha1.ListPluginsRequest"> & {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 3;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginsRequest.
// Use `create(ListPluginsRequestDesc)` to create a new ListPluginsRequest.
export const ListPluginsRequestDesc: GenDescMessage<ListPluginsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 8);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginsResponse
 */
export type ListPluginsResponse = Message<"buf.alpha.registry.v1alpha1.ListPluginsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Plugin plugins = 1;
   */
  plugins: Plugin[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginsResponse.
// Use `create(ListPluginsResponseDesc)` to create a new ListPluginsResponse.
export const ListPluginsResponseDesc: GenDescMessage<ListPluginsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 9);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserPluginsRequest
 */
export type ListUserPluginsRequest = Message<"buf.alpha.registry.v1alpha1.ListUserPluginsRequest"> & {
  /**
   * The owner to list plugins for.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListUserPluginsRequest.
// Use `create(ListUserPluginsRequestDesc)` to create a new ListUserPluginsRequest.
export const ListUserPluginsRequestDesc: GenDescMessage<ListUserPluginsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 10);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserPluginsResponse
 */
export type ListUserPluginsResponse = Message<"buf.alpha.registry.v1alpha1.ListUserPluginsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Plugin plugins = 1;
   */
  plugins: Plugin[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListUserPluginsResponse.
// Use `create(ListUserPluginsResponseDesc)` to create a new ListUserPluginsResponse.
export const ListUserPluginsResponseDesc: GenDescMessage<ListUserPluginsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 11);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationPluginsRequest
 */
export type ListOrganizationPluginsRequest = Message<"buf.alpha.registry.v1alpha1.ListOrganizationPluginsRequest"> & {
  /**
   * The organization to list plugins for.
   *
   * @generated from field: string organization = 1;
   */
  organization: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListOrganizationPluginsRequest.
// Use `create(ListOrganizationPluginsRequestDesc)` to create a new ListOrganizationPluginsRequest.
export const ListOrganizationPluginsRequestDesc: GenDescMessage<ListOrganizationPluginsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 12);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationPluginsResponse
 */
export type ListOrganizationPluginsResponse = Message<"buf.alpha.registry.v1alpha1.ListOrganizationPluginsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Plugin plugins = 1;
   */
  plugins: Plugin[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListOrganizationPluginsResponse.
// Use `create(ListOrganizationPluginsResponseDesc)` to create a new ListOrganizationPluginsResponse.
export const ListOrganizationPluginsResponseDesc: GenDescMessage<ListOrganizationPluginsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 13);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetPluginVersionRequest
 */
export type GetPluginVersionRequest = Message<"buf.alpha.registry.v1alpha1.GetPluginVersionRequest"> & {
  /**
   * The owner of the plugin the version belongs to.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin the version belongs to.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The name of the version.
   *
   * @generated from field: string version = 3;
   */
  version: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPluginVersionRequest.
// Use `create(GetPluginVersionRequestDesc)` to create a new GetPluginVersionRequest.
export const GetPluginVersionRequestDesc: GenDescMessage<GetPluginVersionRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 14);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetPluginVersionResponse
 */
export type GetPluginVersionResponse = Message<"buf.alpha.registry.v1alpha1.GetPluginVersionResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.PluginVersion plugin_version = 1;
   */
  pluginVersion?: PluginVersion;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPluginVersionResponse.
// Use `create(GetPluginVersionResponseDesc)` to create a new GetPluginVersionResponse.
export const GetPluginVersionResponseDesc: GenDescMessage<GetPluginVersionResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 15);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginVersionsRequest
 */
export type ListPluginVersionsRequest = Message<"buf.alpha.registry.v1alpha1.ListPluginVersionsRequest"> & {
  /**
   * The owner of the plugin to list versions for.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin to list versions for.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The number of items to return.
   *
   * @generated from field: uint32 page_size = 3;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 5;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginVersionsRequest.
// Use `create(ListPluginVersionsRequestDesc)` to create a new ListPluginVersionsRequest.
export const ListPluginVersionsRequestDesc: GenDescMessage<ListPluginVersionsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 16);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginVersionsResponse
 */
export type ListPluginVersionsResponse = Message<"buf.alpha.registry.v1alpha1.ListPluginVersionsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginVersion plugin_versions = 1;
   */
  pluginVersions: PluginVersion[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginVersionsResponse.
// Use `create(ListPluginVersionsResponseDesc)` to create a new ListPluginVersionsResponse.
export const ListPluginVersionsResponseDesc: GenDescMessage<ListPluginVersionsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 17);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreatePluginRequest
 */
export type CreatePluginRequest = Message<"buf.alpha.registry.v1alpha1.CreatePluginRequest"> & {
  /**
   * The owner of the plugin. This must be either the name
   * of the authenticated user or an organization the user is
   * authorized to create plugins in.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin, i.e. "protoc-gen-go".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Whether the created plugin should be available to any user
   * or only those authorized through organization membership
   * or being the creator.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginVisibility visibility = 3;
   */
  visibility: PluginVisibility;
};

// Describes the message buf.alpha.registry.v1alpha1.CreatePluginRequest.
// Use `create(CreatePluginRequestDesc)` to create a new CreatePluginRequest.
export const CreatePluginRequestDesc: GenDescMessage<CreatePluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 18);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreatePluginResponse
 */
export type CreatePluginResponse = Message<"buf.alpha.registry.v1alpha1.CreatePluginResponse"> & {
  /**
   * The created plugin.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.Plugin plugin = 1;
   */
  plugin?: Plugin;
};

// Describes the message buf.alpha.registry.v1alpha1.CreatePluginResponse.
// Use `create(CreatePluginResponseDesc)` to create a new CreatePluginResponse.
export const CreatePluginResponseDesc: GenDescMessage<CreatePluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 19);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetPluginRequest
 */
export type GetPluginRequest = Message<"buf.alpha.registry.v1alpha1.GetPluginRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPluginRequest.
// Use `create(GetPluginRequestDesc)` to create a new GetPluginRequest.
export const GetPluginRequestDesc: GenDescMessage<GetPluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 20);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetPluginResponse
 */
export type GetPluginResponse = Message<"buf.alpha.registry.v1alpha1.GetPluginResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Plugin plugin = 1;
   */
  plugin?: Plugin;
};

// Describes the message buf.alpha.registry.v1alpha1.GetPluginResponse.
// Use `create(GetPluginResponseDesc)` to create a new GetPluginResponse.
export const GetPluginResponseDesc: GenDescMessage<GetPluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 21);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeletePluginRequest
 */
export type DeletePluginRequest = Message<"buf.alpha.registry.v1alpha1.DeletePluginRequest"> & {
  /**
   * The owner of the plugin to delete.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin to delete.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.DeletePluginRequest.
// Use `create(DeletePluginRequestDesc)` to create a new DeletePluginRequest.
export const DeletePluginRequestDesc: GenDescMessage<DeletePluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 22);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeletePluginResponse
 */
export type DeletePluginResponse = Message<"buf.alpha.registry.v1alpha1.DeletePluginResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.DeletePluginResponse.
// Use `create(DeletePluginResponseDesc)` to create a new DeletePluginResponse.
export const DeletePluginResponseDesc: GenDescMessage<DeletePluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 23);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetPluginContributorRequest
 */
export type SetPluginContributorRequest = Message<"buf.alpha.registry.v1alpha1.SetPluginContributorRequest"> & {
  /**
   * The ID of the plugin for which the user's role will be set.
   *
   * @generated from field: string plugin_id = 1;
   */
  pluginId: string;

  /**
   * The ID of the user whose role will be set.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * The role to assign to the user.
   * Setting UNSPECIFIED means removing the user's role.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginRole plugin_role = 3;
   */
  pluginRole: PluginRole;
};

// Describes the message buf.alpha.registry.v1alpha1.SetPluginContributorRequest.
// Use `create(SetPluginContributorRequestDesc)` to create a new SetPluginContributorRequest.
export const SetPluginContributorRequestDesc: GenDescMessage<SetPluginContributorRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 24);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetPluginContributorResponse
 */
export type SetPluginContributorResponse = Message<"buf.alpha.registry.v1alpha1.SetPluginContributorResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.SetPluginContributorResponse.
// Use `create(SetPluginContributorResponseDesc)` to create a new SetPluginContributorResponse.
export const SetPluginContributorResponseDesc: GenDescMessage<SetPluginContributorResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 25);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginContributorsRequest
 */
export type ListPluginContributorsRequest = Message<"buf.alpha.registry.v1alpha1.ListPluginContributorsRequest"> & {
  /**
   * @generated from field: string plugin_id = 1;
   */
  pluginId: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginContributorsRequest.
// Use `create(ListPluginContributorsRequestDesc)` to create a new ListPluginContributorsRequest.
export const ListPluginContributorsRequestDesc: GenDescMessage<ListPluginContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 26);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListPluginContributorsResponse
 */
export type ListPluginContributorsResponse = Message<"buf.alpha.registry.v1alpha1.ListPluginContributorsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginContributor users = 1;
   */
  users: PluginContributor[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListPluginContributorsResponse.
// Use `create(ListPluginContributorsResponseDesc)` to create a new ListPluginContributorsResponse.
export const ListPluginContributorsResponseDesc: GenDescMessage<ListPluginContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 27);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecatePluginRequest
 */
export type DeprecatePluginRequest = Message<"buf.alpha.registry.v1alpha1.DeprecatePluginRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * A message shown along with the deprecation warning for this plugin.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

// Describes the message buf.alpha.registry.v1alpha1.DeprecatePluginRequest.
// Use `create(DeprecatePluginRequestDesc)` to create a new DeprecatePluginRequest.
export const DeprecatePluginRequestDesc: GenDescMessage<DeprecatePluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 28);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecatePluginResponse
 */
export type DeprecatePluginResponse = Message<"buf.alpha.registry.v1alpha1.DeprecatePluginResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.DeprecatePluginResponse.
// Use `create(DeprecatePluginResponseDesc)` to create a new DeprecatePluginResponse.
export const DeprecatePluginResponseDesc: GenDescMessage<DeprecatePluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 29);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecatePluginRequest
 */
export type UndeprecatePluginRequest = Message<"buf.alpha.registry.v1alpha1.UndeprecatePluginRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UndeprecatePluginRequest.
// Use `create(UndeprecatePluginRequestDesc)` to create a new UndeprecatePluginRequest.
export const UndeprecatePluginRequestDesc: GenDescMessage<UndeprecatePluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 30);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecatePluginResponse
 */
export type UndeprecatePluginResponse = Message<"buf.alpha.registry.v1alpha1.UndeprecatePluginResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.UndeprecatePluginResponse.
// Use `create(UndeprecatePluginResponseDesc)` to create a new UndeprecatePluginResponse.
export const UndeprecatePluginResponseDesc: GenDescMessage<UndeprecatePluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 31);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetTemplateRequest
 */
export type GetTemplateRequest = Message<"buf.alpha.registry.v1alpha1.GetTemplateRequest"> & {
  /**
   * The owner of the template.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetTemplateRequest.
// Use `create(GetTemplateRequestDesc)` to create a new GetTemplateRequest.
export const GetTemplateRequestDesc: GenDescMessage<GetTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 32);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetTemplateResponse
 */
export type GetTemplateResponse = Message<"buf.alpha.registry.v1alpha1.GetTemplateResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.Template template = 1;
   */
  template?: Template;
};

// Describes the message buf.alpha.registry.v1alpha1.GetTemplateResponse.
// Use `create(GetTemplateResponseDesc)` to create a new GetTemplateResponse.
export const GetTemplateResponseDesc: GenDescMessage<GetTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 33);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplatesRequest
 */
export type ListTemplatesRequest = Message<"buf.alpha.registry.v1alpha1.ListTemplatesRequest"> & {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 3;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplatesRequest.
// Use `create(ListTemplatesRequestDesc)` to create a new ListTemplatesRequest.
export const ListTemplatesRequestDesc: GenDescMessage<ListTemplatesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 34);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplatesResponse
 */
export type ListTemplatesResponse = Message<"buf.alpha.registry.v1alpha1.ListTemplatesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Template templates = 1;
   */
  templates: Template[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplatesResponse.
// Use `create(ListTemplatesResponseDesc)` to create a new ListTemplatesResponse.
export const ListTemplatesResponseDesc: GenDescMessage<ListTemplatesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 35);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserTemplatesRequest
 */
export type ListUserTemplatesRequest = Message<"buf.alpha.registry.v1alpha1.ListUserTemplatesRequest"> & {
  /**
   * The owner of the templates to list for.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListUserTemplatesRequest.
// Use `create(ListUserTemplatesRequestDesc)` to create a new ListUserTemplatesRequest.
export const ListUserTemplatesRequestDesc: GenDescMessage<ListUserTemplatesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 36);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListUserTemplatesResponse
 */
export type ListUserTemplatesResponse = Message<"buf.alpha.registry.v1alpha1.ListUserTemplatesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Template templates = 1;
   */
  templates: Template[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListUserTemplatesResponse.
// Use `create(ListUserTemplatesResponseDesc)` to create a new ListUserTemplatesResponse.
export const ListUserTemplatesResponseDesc: GenDescMessage<ListUserTemplatesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 37);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetTemplateVersionRequest
 */
export type GetTemplateVersionRequest = Message<"buf.alpha.registry.v1alpha1.GetTemplateVersionRequest"> & {
  /**
   * The owner of the template the version belongs to.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template the version belongs to.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The name of the version.
   *
   * @generated from field: string version = 3;
   */
  version: string;
};

// Describes the message buf.alpha.registry.v1alpha1.GetTemplateVersionRequest.
// Use `create(GetTemplateVersionRequestDesc)` to create a new GetTemplateVersionRequest.
export const GetTemplateVersionRequestDesc: GenDescMessage<GetTemplateVersionRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 38);

/**
 * @generated from message buf.alpha.registry.v1alpha1.GetTemplateVersionResponse
 */
export type GetTemplateVersionResponse = Message<"buf.alpha.registry.v1alpha1.GetTemplateVersionResponse"> & {
  /**
   * @generated from field: buf.alpha.registry.v1alpha1.TemplateVersion template_version = 1;
   */
  templateVersion?: TemplateVersion;
};

// Describes the message buf.alpha.registry.v1alpha1.GetTemplateVersionResponse.
// Use `create(GetTemplateVersionResponseDesc)` to create a new GetTemplateVersionResponse.
export const GetTemplateVersionResponseDesc: GenDescMessage<GetTemplateVersionResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 39);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationTemplatesRequest
 */
export type ListOrganizationTemplatesRequest = Message<"buf.alpha.registry.v1alpha1.ListOrganizationTemplatesRequest"> & {
  /**
   * The organization of the templates to list for.
   *
   * @generated from field: string organization = 1;
   */
  organization: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListOrganizationTemplatesRequest.
// Use `create(ListOrganizationTemplatesRequestDesc)` to create a new ListOrganizationTemplatesRequest.
export const ListOrganizationTemplatesRequestDesc: GenDescMessage<ListOrganizationTemplatesRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 40);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListOrganizationTemplatesResponse
 */
export type ListOrganizationTemplatesResponse = Message<"buf.alpha.registry.v1alpha1.ListOrganizationTemplatesResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.Template templates = 1;
   */
  templates: Template[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListOrganizationTemplatesResponse.
// Use `create(ListOrganizationTemplatesResponseDesc)` to create a new ListOrganizationTemplatesResponse.
export const ListOrganizationTemplatesResponseDesc: GenDescMessage<ListOrganizationTemplatesResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 41);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplateVersionsRequest
 */
export type ListTemplateVersionsRequest = Message<"buf.alpha.registry.v1alpha1.ListTemplateVersionsRequest"> & {
  /**
   * The owner of the template to list versions for.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template to list versions for.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The number of items to return.
   *
   * @generated from field: uint32 page_size = 3;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 5;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplateVersionsRequest.
// Use `create(ListTemplateVersionsRequestDesc)` to create a new ListTemplateVersionsRequest.
export const ListTemplateVersionsRequestDesc: GenDescMessage<ListTemplateVersionsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 42);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplateVersionsResponse
 */
export type ListTemplateVersionsResponse = Message<"buf.alpha.registry.v1alpha1.ListTemplateVersionsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.TemplateVersion template_versions = 1;
   */
  templateVersions: TemplateVersion[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplateVersionsResponse.
// Use `create(ListTemplateVersionsResponseDesc)` to create a new ListTemplateVersionsResponse.
export const ListTemplateVersionsResponseDesc: GenDescMessage<ListTemplateVersionsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 43);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateTemplateRequest
 */
export type CreateTemplateRequest = Message<"buf.alpha.registry.v1alpha1.CreateTemplateRequest"> & {
  /**
   * The owner of the template. This will be either a username
   * or organization name.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template version, i.e. "grpc-go".
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Whether the created template should be available to any user
   * or only those authorized through organization membership
   * or being the creator.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.PluginVisibility visibility = 3;
   */
  visibility: PluginVisibility;

  /**
   * The plugins and associated runtime configuration that make
   * up this template.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginConfig plugin_configs = 4;
   */
  pluginConfigs: PluginConfig[];
};

// Describes the message buf.alpha.registry.v1alpha1.CreateTemplateRequest.
// Use `create(CreateTemplateRequestDesc)` to create a new CreateTemplateRequest.
export const CreateTemplateRequestDesc: GenDescMessage<CreateTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 44);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateTemplateResponse
 */
export type CreateTemplateResponse = Message<"buf.alpha.registry.v1alpha1.CreateTemplateResponse"> & {
  /**
   * The created template.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.Template template = 1;
   */
  template?: Template;
};

// Describes the message buf.alpha.registry.v1alpha1.CreateTemplateResponse.
// Use `create(CreateTemplateResponseDesc)` to create a new CreateTemplateResponse.
export const CreateTemplateResponseDesc: GenDescMessage<CreateTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 45);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteTemplateRequest
 */
export type DeleteTemplateRequest = Message<"buf.alpha.registry.v1alpha1.DeleteTemplateRequest"> & {
  /**
   * The owner of the template to delete.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template to delete.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.DeleteTemplateRequest.
// Use `create(DeleteTemplateRequestDesc)` to create a new DeleteTemplateRequest.
export const DeleteTemplateRequestDesc: GenDescMessage<DeleteTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 46);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeleteTemplateResponse
 */
export type DeleteTemplateResponse = Message<"buf.alpha.registry.v1alpha1.DeleteTemplateResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.DeleteTemplateResponse.
// Use `create(DeleteTemplateResponseDesc)` to create a new DeleteTemplateResponse.
export const DeleteTemplateResponseDesc: GenDescMessage<DeleteTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 47);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateTemplateVersionRequest
 */
export type CreateTemplateVersionRequest = Message<"buf.alpha.registry.v1alpha1.CreateTemplateVersionRequest"> & {
  /**
   * The name of the template version, i.e. "v1".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The owner of the template.
   *
   * @generated from field: string template_owner = 2;
   */
  templateOwner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string template_name = 3;
   */
  templateName: string;

  /**
   * A map from plugin owner and name to version for the plugins
   * defined in the template. Every plugin in the template
   * must have a corresponding version in this array.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginVersionMapping plugin_versions = 4;
   */
  pluginVersions: PluginVersionMapping[];
};

// Describes the message buf.alpha.registry.v1alpha1.CreateTemplateVersionRequest.
// Use `create(CreateTemplateVersionRequestDesc)` to create a new CreateTemplateVersionRequest.
export const CreateTemplateVersionRequestDesc: GenDescMessage<CreateTemplateVersionRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 48);

/**
 * @generated from message buf.alpha.registry.v1alpha1.CreateTemplateVersionResponse
 */
export type CreateTemplateVersionResponse = Message<"buf.alpha.registry.v1alpha1.CreateTemplateVersionResponse"> & {
  /**
   * The created template version.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.TemplateVersion template_version = 1;
   */
  templateVersion?: TemplateVersion;
};

// Describes the message buf.alpha.registry.v1alpha1.CreateTemplateVersionResponse.
// Use `create(CreateTemplateVersionResponseDesc)` to create a new CreateTemplateVersionResponse.
export const CreateTemplateVersionResponseDesc: GenDescMessage<CreateTemplateVersionResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 49);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetTemplateContributorRequest
 */
export type SetTemplateContributorRequest = Message<"buf.alpha.registry.v1alpha1.SetTemplateContributorRequest"> & {
  /**
   * The ID of the template for which the user's role will be set.
   *
   * @generated from field: string template_id = 1;
   */
  templateId: string;

  /**
   * The ID of the user whose role will be set.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * The role to assign to the user.
   * Setting UNSPECIFIED means removing the user's role.
   *
   * @generated from field: buf.alpha.registry.v1alpha1.TemplateRole template_role = 3;
   */
  templateRole: TemplateRole;
};

// Describes the message buf.alpha.registry.v1alpha1.SetTemplateContributorRequest.
// Use `create(SetTemplateContributorRequestDesc)` to create a new SetTemplateContributorRequest.
export const SetTemplateContributorRequestDesc: GenDescMessage<SetTemplateContributorRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 50);

/**
 * @generated from message buf.alpha.registry.v1alpha1.SetTemplateContributorResponse
 */
export type SetTemplateContributorResponse = Message<"buf.alpha.registry.v1alpha1.SetTemplateContributorResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.SetTemplateContributorResponse.
// Use `create(SetTemplateContributorResponseDesc)` to create a new SetTemplateContributorResponse.
export const SetTemplateContributorResponseDesc: GenDescMessage<SetTemplateContributorResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 51);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplateContributorsRequest
 */
export type ListTemplateContributorsRequest = Message<"buf.alpha.registry.v1alpha1.ListTemplateContributorsRequest"> & {
  /**
   * @generated from field: string template_id = 1;
   */
  templateId: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * The first page is returned if this is empty.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: bool reverse = 4;
   */
  reverse: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplateContributorsRequest.
// Use `create(ListTemplateContributorsRequestDesc)` to create a new ListTemplateContributorsRequest.
export const ListTemplateContributorsRequestDesc: GenDescMessage<ListTemplateContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 52);

/**
 * @generated from message buf.alpha.registry.v1alpha1.ListTemplateContributorsResponse
 */
export type ListTemplateContributorsResponse = Message<"buf.alpha.registry.v1alpha1.ListTemplateContributorsResponse"> & {
  /**
   * @generated from field: repeated buf.alpha.registry.v1alpha1.TemplateContributor users = 1;
   */
  users: TemplateContributor[];

  /**
   * There are no more pages if this is empty.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

// Describes the message buf.alpha.registry.v1alpha1.ListTemplateContributorsResponse.
// Use `create(ListTemplateContributorsResponseDesc)` to create a new ListTemplateContributorsResponse.
export const ListTemplateContributorsResponseDesc: GenDescMessage<ListTemplateContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 53);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecateTemplateRequest
 */
export type DeprecateTemplateRequest = Message<"buf.alpha.registry.v1alpha1.DeprecateTemplateRequest"> & {
  /**
   * The owner of the template.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * A message shown along with the deprecation warning for this template.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

// Describes the message buf.alpha.registry.v1alpha1.DeprecateTemplateRequest.
// Use `create(DeprecateTemplateRequestDesc)` to create a new DeprecateTemplateRequest.
export const DeprecateTemplateRequestDesc: GenDescMessage<DeprecateTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 54);

/**
 * @generated from message buf.alpha.registry.v1alpha1.DeprecateTemplateResponse
 */
export type DeprecateTemplateResponse = Message<"buf.alpha.registry.v1alpha1.DeprecateTemplateResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.DeprecateTemplateResponse.
// Use `create(DeprecateTemplateResponseDesc)` to create a new DeprecateTemplateResponse.
export const DeprecateTemplateResponseDesc: GenDescMessage<DeprecateTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 55);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecateTemplateRequest
 */
export type UndeprecateTemplateRequest = Message<"buf.alpha.registry.v1alpha1.UndeprecateTemplateRequest"> & {
  /**
   * The owner of the template.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UndeprecateTemplateRequest.
// Use `create(UndeprecateTemplateRequestDesc)` to create a new UndeprecateTemplateRequest.
export const UndeprecateTemplateRequestDesc: GenDescMessage<UndeprecateTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 56);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UndeprecateTemplateResponse
 */
export type UndeprecateTemplateResponse = Message<"buf.alpha.registry.v1alpha1.UndeprecateTemplateResponse"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.UndeprecateTemplateResponse.
// Use `create(UndeprecateTemplateResponseDesc)` to create a new UndeprecateTemplateResponse.
export const UndeprecateTemplateResponseDesc: GenDescMessage<UndeprecateTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 57);

/**
 * PluginVisibility defines the visibility options available
 * for Plugins and Templates.
 *
 * @generated from enum buf.alpha.registry.v1alpha1.PluginVisibility
 */
export enum PluginVisibility {
  /**
   * @generated from enum value: PLUGIN_VISIBILITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PLUGIN_VISIBILITY_PUBLIC = 1;
   */
  PUBLIC = 1,

  /**
   * @generated from enum value: PLUGIN_VISIBILITY_PRIVATE = 2;
   */
  PRIVATE = 2,
}

// Describes the enum buf.alpha.registry.v1alpha1.PluginVisibility.
export const PluginVisibilityDesc: GenDescEnum<PluginVisibility> = /*@__PURE__*/
  enumDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 0);

/**
 * PluginService manages plugins.
 *
 * @generated from service buf.alpha.registry.v1alpha1.PluginService
 */
export const PluginService: GenDescService<{
  /**
   * ListPlugins returns all the plugins available to the user. This includes
   * public plugins, those uploaded to organizations the user is part of,
   * and any plugins uploaded directly by the user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListPlugins
   */
  listPlugins: {
    kind: "unary";
    I: ListPluginsRequest;
    O: ListPluginsResponse;
  },
  /**
   * ListUserPlugins lists all plugins belonging to a user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListUserPlugins
   */
  listUserPlugins: {
    kind: "unary";
    I: ListUserPluginsRequest;
    O: ListUserPluginsResponse;
  },
  /**
   * ListOrganizationPlugins lists all plugins for an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListOrganizationPlugins
   */
  listOrganizationPlugins: {
    kind: "unary";
    I: ListOrganizationPluginsRequest;
    O: ListOrganizationPluginsResponse;
  },
  /**
   * GetPluginVersion returns the plugin version, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.GetPluginVersion
   */
  getPluginVersion: {
    kind: "unary";
    I: GetPluginVersionRequest;
    O: GetPluginVersionResponse;
  },
  /**
   * ListPluginVersions lists all the versions available for the specified plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListPluginVersions
   */
  listPluginVersions: {
    kind: "unary";
    I: ListPluginVersionsRequest;
    O: ListPluginVersionsResponse;
  },
  /**
   * CreatePlugin creates a new plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.CreatePlugin
   */
  createPlugin: {
    kind: "unary";
    I: CreatePluginRequest;
    O: CreatePluginResponse;
  },
  /**
   * GetPlugin returns the plugin, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.GetPlugin
   */
  getPlugin: {
    kind: "unary";
    I: GetPluginRequest;
    O: GetPluginResponse;
  },
  /**
   * DeletePlugin deletes the plugin, if it exists. Note that deleting
   * a plugin may cause breaking changes for templates using that plugin,
   * and should be done with extreme care.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.DeletePlugin
   */
  deletePlugin: {
    kind: "unary";
    I: DeletePluginRequest;
    O: DeletePluginResponse;
  },
  /**
   * SetPluginContributor sets the role of a user in the plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.SetPluginContributor
   */
  setPluginContributor: {
    kind: "unary";
    I: SetPluginContributorRequest;
    O: SetPluginContributorResponse;
  },
  /**
   * ListPluginContributors returns the list of contributors that has an explicit role against the plugin.
   * This does not include users who have implicit roles against the plugin, unless they have also been
   * assigned a role explicitly.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListPluginContributors
   */
  listPluginContributors: {
    kind: "unary";
    I: ListPluginContributorsRequest;
    O: ListPluginContributorsResponse;
  },
  /**
   * DeprecatePlugin deprecates the plugin, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.DeprecatePlugin
   */
  deprecatePlugin: {
    kind: "unary";
    I: DeprecatePluginRequest;
    O: DeprecatePluginResponse;
  },
  /**
   * UndeprecatePlugin makes the plugin not deprecated and removes any deprecation_message.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.UndeprecatePlugin
   */
  undeprecatePlugin: {
    kind: "unary";
    I: UndeprecatePluginRequest;
    O: UndeprecatePluginResponse;
  },
  /**
   * GetTemplate returns the template, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.GetTemplate
   */
  getTemplate: {
    kind: "unary";
    I: GetTemplateRequest;
    O: GetTemplateResponse;
  },
  /**
   * ListTemplates returns all the templates available to the user. This includes
   * public templates, those owned by organizations the user is part of,
   * and any created directly by the user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListTemplates
   */
  listTemplates: {
    kind: "unary";
    I: ListTemplatesRequest;
    O: ListTemplatesResponse;
  },
  /**
   * ListUserPlugins lists all templates belonging to a user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListUserTemplates
   */
  listUserTemplates: {
    kind: "unary";
    I: ListUserTemplatesRequest;
    O: ListUserTemplatesResponse;
  },
  /**
   * ListOrganizationTemplates lists all templates for an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListOrganizationTemplates
   */
  listOrganizationTemplates: {
    kind: "unary";
    I: ListOrganizationTemplatesRequest;
    O: ListOrganizationTemplatesResponse;
  },
  /**
   * GetTemplateVersion returns the template version, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.GetTemplateVersion
   */
  getTemplateVersion: {
    kind: "unary";
    I: GetTemplateVersionRequest;
    O: GetTemplateVersionResponse;
  },
  /**
   * ListTemplateVersions lists all the template versions available for the specified template.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListTemplateVersions
   */
  listTemplateVersions: {
    kind: "unary";
    I: ListTemplateVersionsRequest;
    O: ListTemplateVersionsResponse;
  },
  /**
   * CreateTemplate creates a new template.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.CreateTemplate
   */
  createTemplate: {
    kind: "unary";
    I: CreateTemplateRequest;
    O: CreateTemplateResponse;
  },
  /**
   * DeleteTemplate deletes the template, if it exists.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.DeleteTemplate
   */
  deleteTemplate: {
    kind: "unary";
    I: DeleteTemplateRequest;
    O: DeleteTemplateResponse;
  },
  /**
   * CreateTemplateVersion creates a new template version.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.CreateTemplateVersion
   */
  createTemplateVersion: {
    kind: "unary";
    I: CreateTemplateVersionRequest;
    O: CreateTemplateVersionResponse;
  },
  /**
   * SetTemplateContributor sets the role of a user in the template.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.SetTemplateContributor
   */
  setTemplateContributor: {
    kind: "unary";
    I: SetTemplateContributorRequest;
    O: SetTemplateContributorResponse;
  },
  /**
   * ListTemplateContributors returns the list of contributors that has an explicit role against the template.
   * This does not include users who have implicit roles against the template, unless they have also been
   * assigned a role explicitly.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.ListTemplateContributors
   */
  listTemplateContributors: {
    kind: "unary";
    I: ListTemplateContributorsRequest;
    O: ListTemplateContributorsResponse;
  },
  /**
   * DeprecateTemplate deprecates the template, if found.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.DeprecateTemplate
   */
  deprecateTemplate: {
    kind: "unary";
    I: DeprecateTemplateRequest;
    O: DeprecateTemplateResponse;
  },
  /**
   * UndeprecateTemplate makes the template not deprecated and removes any deprecation_message.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.PluginService.UndeprecateTemplate
   */
  undeprecateTemplate: {
    kind: "unary";
    I: UndeprecateTemplateRequest;
    O: UndeprecateTemplateResponse;
  },
}
> = /*@__PURE__*/
  serviceDesc(fileDesc_buf_alpha_registry_v1alpha1_plugin, 0);

