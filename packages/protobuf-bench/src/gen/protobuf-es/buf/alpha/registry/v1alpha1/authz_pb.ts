// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.0.0-alpha.1 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/authz.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenDescFile, GenDescMessage, GenDescService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { OrganizationRole, PluginRole, RepositoryRole, TemplateRole } from "./role_pb.js";
import { fileDesc_buf_alpha_registry_v1alpha1_role } from "./role_pb.js";
import type { Message } from "@bufbuild/protobuf";

export const fileDesc_buf_alpha_registry_v1alpha1_authz: GenDescFile = /*@__PURE__*/
  fileDesc("", [fileDesc_buf_alpha_registry_v1alpha1_role]);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryRequest
 */
export type UserCanCreateOrganizationRepositoryRequest = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryRequest.
// Use `create(UserCanCreateOrganizationRepositoryRequestDesc)` to create a new UserCanCreateOrganizationRepositoryRequest.
export const UserCanCreateOrganizationRepositoryRequestDesc: GenDescMessage<UserCanCreateOrganizationRepositoryRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 0);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryResponse
 */
export type UserCanCreateOrganizationRepositoryResponse = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationRepositoryResponse.
// Use `create(UserCanCreateOrganizationRepositoryResponseDesc)` to create a new UserCanCreateOrganizationRepositoryResponse.
export const UserCanCreateOrganizationRepositoryResponseDesc: GenDescMessage<UserCanCreateOrganizationRepositoryResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 1);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsRequest
 */
export type UserCanSeeRepositorySettingsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsRequest"> & {
  /**
   * The ID of the repository for which to check
   * whether the user is authorized.
   *
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsRequest.
// Use `create(UserCanSeeRepositorySettingsRequestDesc)` to create a new UserCanSeeRepositorySettingsRequest.
export const UserCanSeeRepositorySettingsRequestDesc: GenDescMessage<UserCanSeeRepositorySettingsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 2);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsResponse
 */
export type UserCanSeeRepositorySettingsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeRepositorySettingsResponse.
// Use `create(UserCanSeeRepositorySettingsResponseDesc)` to create a new UserCanSeeRepositorySettingsResponse.
export const UserCanSeeRepositorySettingsResponseDesc: GenDescMessage<UserCanSeeRepositorySettingsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 3);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsRequest
 */
export type UserCanSeeOrganizationSettingsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsRequest.
// Use `create(UserCanSeeOrganizationSettingsRequestDesc)` to create a new UserCanSeeOrganizationSettingsRequest.
export const UserCanSeeOrganizationSettingsRequestDesc: GenDescMessage<UserCanSeeOrganizationSettingsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 4);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsResponse
 */
export type UserCanSeeOrganizationSettingsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeOrganizationSettingsResponse.
// Use `create(UserCanSeeOrganizationSettingsResponseDesc)` to create a new UserCanSeeOrganizationSettingsResponse.
export const UserCanSeeOrganizationSettingsResponseDesc: GenDescMessage<UserCanSeeOrganizationSettingsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 5);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanReadPluginRequest
 */
export type UserCanReadPluginRequest = Message<"buf.alpha.registry.v1alpha1.UserCanReadPluginRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanReadPluginRequest.
// Use `create(UserCanReadPluginRequestDesc)` to create a new UserCanReadPluginRequest.
export const UserCanReadPluginRequestDesc: GenDescMessage<UserCanReadPluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 6);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanReadPluginResponse
 */
export type UserCanReadPluginResponse = Message<"buf.alpha.registry.v1alpha1.UserCanReadPluginResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanReadPluginResponse.
// Use `create(UserCanReadPluginResponseDesc)` to create a new UserCanReadPluginResponse.
export const UserCanReadPluginResponseDesc: GenDescMessage<UserCanReadPluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 7);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionRequest
 */
export type UserCanCreatePluginVersionRequest = Message<"buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionRequest.
// Use `create(UserCanCreatePluginVersionRequestDesc)` to create a new UserCanCreatePluginVersionRequest.
export const UserCanCreatePluginVersionRequestDesc: GenDescMessage<UserCanCreatePluginVersionRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 8);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionResponse
 */
export type UserCanCreatePluginVersionResponse = Message<"buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreatePluginVersionResponse.
// Use `create(UserCanCreatePluginVersionResponseDesc)` to create a new UserCanCreatePluginVersionResponse.
export const UserCanCreatePluginVersionResponseDesc: GenDescMessage<UserCanCreatePluginVersionResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 9);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionRequest
 */
export type UserCanCreateTemplateVersionRequest = Message<"buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionRequest"> & {
  /**
   * The owner of the template.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionRequest.
// Use `create(UserCanCreateTemplateVersionRequestDesc)` to create a new UserCanCreateTemplateVersionRequest.
export const UserCanCreateTemplateVersionRequestDesc: GenDescMessage<UserCanCreateTemplateVersionRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 10);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionResponse
 */
export type UserCanCreateTemplateVersionResponse = Message<"buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateTemplateVersionResponse.
// Use `create(UserCanCreateTemplateVersionResponseDesc)` to create a new UserCanCreateTemplateVersionResponse.
export const UserCanCreateTemplateVersionResponseDesc: GenDescMessage<UserCanCreateTemplateVersionResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 11);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginRequest
 */
export type UserCanCreateOrganizationPluginRequest = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginRequest.
// Use `create(UserCanCreateOrganizationPluginRequestDesc)` to create a new UserCanCreateOrganizationPluginRequest.
export const UserCanCreateOrganizationPluginRequestDesc: GenDescMessage<UserCanCreateOrganizationPluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 12);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginResponse
 */
export type UserCanCreateOrganizationPluginResponse = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationPluginResponse.
// Use `create(UserCanCreateOrganizationPluginResponseDesc)` to create a new UserCanCreateOrganizationPluginResponse.
export const UserCanCreateOrganizationPluginResponseDesc: GenDescMessage<UserCanCreateOrganizationPluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 13);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateRequest
 */
export type UserCanCreateOrganizationTemplateRequest = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateRequest.
// Use `create(UserCanCreateOrganizationTemplateRequestDesc)` to create a new UserCanCreateOrganizationTemplateRequest.
export const UserCanCreateOrganizationTemplateRequestDesc: GenDescMessage<UserCanCreateOrganizationTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 14);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateResponse
 */
export type UserCanCreateOrganizationTemplateResponse = Message<"buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanCreateOrganizationTemplateResponse.
// Use `create(UserCanCreateOrganizationTemplateResponseDesc)` to create a new UserCanCreateOrganizationTemplateResponse.
export const UserCanCreateOrganizationTemplateResponseDesc: GenDescMessage<UserCanCreateOrganizationTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 15);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsRequest
 */
export type UserCanSeePluginSettingsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsRequest"> & {
  /**
   * The owner of the plugin.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the plugin.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsRequest.
// Use `create(UserCanSeePluginSettingsRequestDesc)` to create a new UserCanSeePluginSettingsRequest.
export const UserCanSeePluginSettingsRequestDesc: GenDescMessage<UserCanSeePluginSettingsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 16);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsResponse
 */
export type UserCanSeePluginSettingsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeePluginSettingsResponse.
// Use `create(UserCanSeePluginSettingsResponseDesc)` to create a new UserCanSeePluginSettingsResponse.
export const UserCanSeePluginSettingsResponseDesc: GenDescMessage<UserCanSeePluginSettingsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 17);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsRequest
 */
export type UserCanSeeTemplateSettingsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsRequest"> & {
  /**
   * The owner of the template.
   *
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * The name of the template.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsRequest.
// Use `create(UserCanSeeTemplateSettingsRequestDesc)` to create a new UserCanSeeTemplateSettingsRequest.
export const UserCanSeeTemplateSettingsRequestDesc: GenDescMessage<UserCanSeeTemplateSettingsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 18);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsResponse
 */
export type UserCanSeeTemplateSettingsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeTemplateSettingsResponse.
// Use `create(UserCanSeeTemplateSettingsResponseDesc)` to create a new UserCanSeeTemplateSettingsResponse.
export const UserCanSeeTemplateSettingsResponseDesc: GenDescMessage<UserCanSeeTemplateSettingsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 19);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberRequest
 */
export type UserCanAddOrganizationMemberRequest = Message<"buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberRequest.
// Use `create(UserCanAddOrganizationMemberRequestDesc)` to create a new UserCanAddOrganizationMemberRequest.
export const UserCanAddOrganizationMemberRequestDesc: GenDescMessage<UserCanAddOrganizationMemberRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 20);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberResponse
 */
export type UserCanAddOrganizationMemberResponse = Message<"buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberResponse"> & {
  /**
   * The list of roles that the user is authorized to add, empty list means the user is
   * not authorized to add any members.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.OrganizationRole authorized_roles = 1;
   */
  authorizedRoles: OrganizationRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanAddOrganizationMemberResponse.
// Use `create(UserCanAddOrganizationMemberResponseDesc)` to create a new UserCanAddOrganizationMemberResponse.
export const UserCanAddOrganizationMemberResponseDesc: GenDescMessage<UserCanAddOrganizationMemberResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 21);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberRequest
 */
export type UserCanUpdateOrganizationMemberRequest = Message<"buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberRequest.
// Use `create(UserCanUpdateOrganizationMemberRequestDesc)` to create a new UserCanUpdateOrganizationMemberRequest.
export const UserCanUpdateOrganizationMemberRequestDesc: GenDescMessage<UserCanUpdateOrganizationMemberRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 22);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberResponse
 */
export type UserCanUpdateOrganizationMemberResponse = Message<"buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberResponse"> & {
  /**
   * The list of roles that the user is authorized to update (from and to), empty list means the user is
   * not authorized to update any members' role.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.OrganizationRole authorized_roles = 1;
   */
  authorizedRoles: OrganizationRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanUpdateOrganizationMemberResponse.
// Use `create(UserCanUpdateOrganizationMemberResponseDesc)` to create a new UserCanUpdateOrganizationMemberResponse.
export const UserCanUpdateOrganizationMemberResponseDesc: GenDescMessage<UserCanUpdateOrganizationMemberResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 23);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberRequest
 */
export type UserCanRemoveOrganizationMemberRequest = Message<"buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberRequest.
// Use `create(UserCanRemoveOrganizationMemberRequestDesc)` to create a new UserCanRemoveOrganizationMemberRequest.
export const UserCanRemoveOrganizationMemberRequestDesc: GenDescMessage<UserCanRemoveOrganizationMemberRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 24);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberResponse
 */
export type UserCanRemoveOrganizationMemberResponse = Message<"buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberResponse"> & {
  /**
   * The list of roles that the user is authorized to remove, empty list means the user is
   * not authorized to remove any members.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.OrganizationRole authorized_roles = 1;
   */
  authorizedRoles: OrganizationRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanRemoveOrganizationMemberResponse.
// Use `create(UserCanRemoveOrganizationMemberResponseDesc)` to create a new UserCanRemoveOrganizationMemberResponse.
export const UserCanRemoveOrganizationMemberResponseDesc: GenDescMessage<UserCanRemoveOrganizationMemberResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 25);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationRequest
 */
export type UserCanDeleteOrganizationRequest = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationRequest"> & {
  /**
   * The ID of the organization for which to check
   * whether the user is authorized.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationRequest.
// Use `create(UserCanDeleteOrganizationRequestDesc)` to create a new UserCanDeleteOrganizationRequest.
export const UserCanDeleteOrganizationRequestDesc: GenDescMessage<UserCanDeleteOrganizationRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 26);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationResponse
 */
export type UserCanDeleteOrganizationResponse = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteOrganizationResponse.
// Use `create(UserCanDeleteOrganizationResponseDesc)` to create a new UserCanDeleteOrganizationResponse.
export const UserCanDeleteOrganizationResponseDesc: GenDescMessage<UserCanDeleteOrganizationResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 27);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryRequest
 */
export type UserCanDeleteRepositoryRequest = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryRequest"> & {
  /**
   * The ID of the repository for which to check
   * whether the user is authorized.
   *
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryRequest.
// Use `create(UserCanDeleteRepositoryRequestDesc)` to create a new UserCanDeleteRepositoryRequest.
export const UserCanDeleteRepositoryRequestDesc: GenDescMessage<UserCanDeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 28);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryResponse
 */
export type UserCanDeleteRepositoryResponse = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteRepositoryResponse.
// Use `create(UserCanDeleteRepositoryResponseDesc)` to create a new UserCanDeleteRepositoryResponse.
export const UserCanDeleteRepositoryResponseDesc: GenDescMessage<UserCanDeleteRepositoryResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 29);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteTemplateRequest
 */
export type UserCanDeleteTemplateRequest = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteTemplateRequest"> & {
  /**
   * The ID of the template for which to check
   * whether the user is authorized.
   *
   * @generated from field: string template_id = 1;
   */
  templateId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteTemplateRequest.
// Use `create(UserCanDeleteTemplateRequestDesc)` to create a new UserCanDeleteTemplateRequest.
export const UserCanDeleteTemplateRequestDesc: GenDescMessage<UserCanDeleteTemplateRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 30);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteTemplateResponse
 */
export type UserCanDeleteTemplateResponse = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteTemplateResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteTemplateResponse.
// Use `create(UserCanDeleteTemplateResponseDesc)` to create a new UserCanDeleteTemplateResponse.
export const UserCanDeleteTemplateResponseDesc: GenDescMessage<UserCanDeleteTemplateResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 31);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeletePluginRequest
 */
export type UserCanDeletePluginRequest = Message<"buf.alpha.registry.v1alpha1.UserCanDeletePluginRequest"> & {
  /**
   * The ID of the plugin for which to check
   * whether the user is authorized.
   *
   * @generated from field: string plugin_id = 1;
   */
  pluginId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeletePluginRequest.
// Use `create(UserCanDeletePluginRequestDesc)` to create a new UserCanDeletePluginRequest.
export const UserCanDeletePluginRequestDesc: GenDescMessage<UserCanDeletePluginRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 32);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeletePluginResponse
 */
export type UserCanDeletePluginResponse = Message<"buf.alpha.registry.v1alpha1.UserCanDeletePluginResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeletePluginResponse.
// Use `create(UserCanDeletePluginResponseDesc)` to create a new UserCanDeletePluginResponse.
export const UserCanDeletePluginResponseDesc: GenDescMessage<UserCanDeletePluginResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 33);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteUserRequest
 */
export type UserCanDeleteUserRequest = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteUserRequest"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteUserRequest.
// Use `create(UserCanDeleteUserRequestDesc)` to create a new UserCanDeleteUserRequest.
export const UserCanDeleteUserRequestDesc: GenDescMessage<UserCanDeleteUserRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 34);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanDeleteUserResponse
 */
export type UserCanDeleteUserResponse = Message<"buf.alpha.registry.v1alpha1.UserCanDeleteUserResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanDeleteUserResponse.
// Use `create(UserCanDeleteUserResponseDesc)` to create a new UserCanDeleteUserResponse.
export const UserCanDeleteUserResponseDesc: GenDescMessage<UserCanDeleteUserResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 35);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelRequest
 */
export type UserCanSeeServerAdminPanelRequest = Message<"buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelRequest"> & {
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelRequest.
// Use `create(UserCanSeeServerAdminPanelRequestDesc)` to create a new UserCanSeeServerAdminPanelRequest.
export const UserCanSeeServerAdminPanelRequestDesc: GenDescMessage<UserCanSeeServerAdminPanelRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 36);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelResponse
 */
export type UserCanSeeServerAdminPanelResponse = Message<"buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelResponse"> & {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanSeeServerAdminPanelResponse.
// Use `create(UserCanSeeServerAdminPanelResponseDesc)` to create a new UserCanSeeServerAdminPanelResponse.
export const UserCanSeeServerAdminPanelResponseDesc: GenDescMessage<UserCanSeeServerAdminPanelResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 37);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsRequest
 */
export type UserCanManageRepositoryContributorsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsRequest"> & {
  /**
   * The ID of the repository for which to check
   * whether the user is authorized.
   *
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsRequest.
// Use `create(UserCanManageRepositoryContributorsRequestDesc)` to create a new UserCanManageRepositoryContributorsRequest.
export const UserCanManageRepositoryContributorsRequestDesc: GenDescMessage<UserCanManageRepositoryContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 38);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsResponse
 */
export type UserCanManageRepositoryContributorsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsResponse"> & {
  /**
   * The list of roles that the user is authorized to manage, empty list means the user is
   * not authorized to manage any contributors.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.RepositoryRole authorized_roles = 1;
   */
  authorizedRoles: RepositoryRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManageRepositoryContributorsResponse.
// Use `create(UserCanManageRepositoryContributorsResponseDesc)` to create a new UserCanManageRepositoryContributorsResponse.
export const UserCanManageRepositoryContributorsResponseDesc: GenDescMessage<UserCanManageRepositoryContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 39);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsRequest
 */
export type UserCanManagePluginContributorsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsRequest"> & {
  /**
   * The ID of the plugin for which to check
   * whether the user is authorized.
   *
   * @generated from field: string plugin_id = 1;
   */
  pluginId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsRequest.
// Use `create(UserCanManagePluginContributorsRequestDesc)` to create a new UserCanManagePluginContributorsRequest.
export const UserCanManagePluginContributorsRequestDesc: GenDescMessage<UserCanManagePluginContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 40);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsResponse
 */
export type UserCanManagePluginContributorsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsResponse"> & {
  /**
   * The list of roles that the user is authorized to manage, empty list means the user is
   * not authorized to manage any contributors.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.PluginRole authorized_roles = 1;
   */
  authorizedRoles: PluginRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManagePluginContributorsResponse.
// Use `create(UserCanManagePluginContributorsResponseDesc)` to create a new UserCanManagePluginContributorsResponse.
export const UserCanManagePluginContributorsResponseDesc: GenDescMessage<UserCanManagePluginContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 41);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsRequest
 */
export type UserCanManageTemplateContributorsRequest = Message<"buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsRequest"> & {
  /**
   * The ID of the template for which to check
   * whether the user is authorized.
   *
   * @generated from field: string template_id = 1;
   */
  templateId: string;
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsRequest.
// Use `create(UserCanManageTemplateContributorsRequestDesc)` to create a new UserCanManageTemplateContributorsRequest.
export const UserCanManageTemplateContributorsRequestDesc: GenDescMessage<UserCanManageTemplateContributorsRequest> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 42);

/**
 * @generated from message buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsResponse
 */
export type UserCanManageTemplateContributorsResponse = Message<"buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsResponse"> & {
  /**
   * The list of roles that the user is authorized to manage, empty list means the user is
   * not authorized to manage any contributors.
   *
   * @generated from field: repeated buf.alpha.registry.v1alpha1.TemplateRole authorized_roles = 1;
   */
  authorizedRoles: TemplateRole[];
};

// Describes the message buf.alpha.registry.v1alpha1.UserCanManageTemplateContributorsResponse.
// Use `create(UserCanManageTemplateContributorsResponseDesc)` to create a new UserCanManageTemplateContributorsResponse.
export const UserCanManageTemplateContributorsResponseDesc: GenDescMessage<UserCanManageTemplateContributorsResponse> = /*@__PURE__*/
  messageDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 43);

/**
 * AuthzService supplies authorization helpers.
 *
 * @generated from service buf.alpha.registry.v1alpha1.AuthzService
 */
export const AuthzService: GenDescService<{
  /**
   * UserCanCreateOrganizationRepository returns whether the user is authorized
   * to create repositories in an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanCreateOrganizationRepository
   */
  userCanCreateOrganizationRepository: {
    kind: "unary";
    I: UserCanCreateOrganizationRepositoryRequest;
    O: UserCanCreateOrganizationRepositoryResponse;
  },
  /**
   * UserCanSeeRepositorySettings returns whether the user is authorized
   * to see repository settings.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanSeeRepositorySettings
   */
  userCanSeeRepositorySettings: {
    kind: "unary";
    I: UserCanSeeRepositorySettingsRequest;
    O: UserCanSeeRepositorySettingsResponse;
  },
  /**
   * UserCanSeeOrganizationSettings returns whether the user is authorized
   * to see organization settings.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanSeeOrganizationSettings
   */
  userCanSeeOrganizationSettings: {
    kind: "unary";
    I: UserCanSeeOrganizationSettingsRequest;
    O: UserCanSeeOrganizationSettingsResponse;
  },
  /**
   * UserCanReadPlugin returns whether the user has read access to the specified plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanReadPlugin
   */
  userCanReadPlugin: {
    kind: "unary";
    I: UserCanReadPluginRequest;
    O: UserCanReadPluginResponse;
  },
  /**
   * UserCanCreatePluginVersion returns whether the user is authorized
   * to create a plugin version under the specified plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanCreatePluginVersion
   */
  userCanCreatePluginVersion: {
    kind: "unary";
    I: UserCanCreatePluginVersionRequest;
    O: UserCanCreatePluginVersionResponse;
  },
  /**
   * UserCanCreateTemplateVersion returns whether the user is authorized
   * to create a template version under the specified template.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanCreateTemplateVersion
   */
  userCanCreateTemplateVersion: {
    kind: "unary";
    I: UserCanCreateTemplateVersionRequest;
    O: UserCanCreateTemplateVersionResponse;
  },
  /**
   * UserCanCreateOrganizationPlugin returns whether the user is authorized to create
   * a plugin in an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanCreateOrganizationPlugin
   */
  userCanCreateOrganizationPlugin: {
    kind: "unary";
    I: UserCanCreateOrganizationPluginRequest;
    O: UserCanCreateOrganizationPluginResponse;
  },
  /**
   * UserCanCreateOrganizationPlugin returns whether the user is authorized to create
   * a template in an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanCreateOrganizationTemplate
   */
  userCanCreateOrganizationTemplate: {
    kind: "unary";
    I: UserCanCreateOrganizationTemplateRequest;
    O: UserCanCreateOrganizationTemplateResponse;
  },
  /**
   * UserCanSeePluginSettings returns whether the user is authorized
   * to see plugin settings.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanSeePluginSettings
   */
  userCanSeePluginSettings: {
    kind: "unary";
    I: UserCanSeePluginSettingsRequest;
    O: UserCanSeePluginSettingsResponse;
  },
  /**
   * UserCanSeeTemplateSettings returns whether the user is authorized
   * to see template settings.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanSeeTemplateSettings
   */
  userCanSeeTemplateSettings: {
    kind: "unary";
    I: UserCanSeeTemplateSettingsRequest;
    O: UserCanSeeTemplateSettingsResponse;
  },
  /**
   * UserCanAddOrganizationMember returns whether the user is authorized to add
   * any members to the organization and the list of roles they can add.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanAddOrganizationMember
   */
  userCanAddOrganizationMember: {
    kind: "unary";
    I: UserCanAddOrganizationMemberRequest;
    O: UserCanAddOrganizationMemberResponse;
  },
  /**
   * UserCanUpdateOrganizationMember returns whether the user is authorized to update
   * any members' membership information in the organization and the list of roles they can update.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanUpdateOrganizationMember
   */
  userCanUpdateOrganizationMember: {
    kind: "unary";
    I: UserCanUpdateOrganizationMemberRequest;
    O: UserCanUpdateOrganizationMemberResponse;
  },
  /**
   * UserCanRemoveOrganizationMember returns whether the user is authorized to remove
   * any members from the organization and the list of roles they can remove.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanRemoveOrganizationMember
   */
  userCanRemoveOrganizationMember: {
    kind: "unary";
    I: UserCanRemoveOrganizationMemberRequest;
    O: UserCanRemoveOrganizationMemberResponse;
  },
  /**
   * UserCanDeleteOrganization returns whether the user is authorized
   * to delete an organization.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanDeleteOrganization
   */
  userCanDeleteOrganization: {
    kind: "unary";
    I: UserCanDeleteOrganizationRequest;
    O: UserCanDeleteOrganizationResponse;
  },
  /**
   * UserCanDeleteRepository returns whether the user is authorized
   * to delete a repository.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanDeleteRepository
   */
  userCanDeleteRepository: {
    kind: "unary";
    I: UserCanDeleteRepositoryRequest;
    O: UserCanDeleteRepositoryResponse;
  },
  /**
   * UserCanDeleteTemplate returns whether the user is authorized
   * to delete a template.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanDeleteTemplate
   */
  userCanDeleteTemplate: {
    kind: "unary";
    I: UserCanDeleteTemplateRequest;
    O: UserCanDeleteTemplateResponse;
  },
  /**
   * UserCanDeletePlugin returns whether the user is authorized
   * to delete a plugin.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanDeletePlugin
   */
  userCanDeletePlugin: {
    kind: "unary";
    I: UserCanDeletePluginRequest;
    O: UserCanDeletePluginResponse;
  },
  /**
   * UserCanDeleteUser returns whether the user is authorized
   * to delete a user.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanDeleteUser
   */
  userCanDeleteUser: {
    kind: "unary";
    I: UserCanDeleteUserRequest;
    O: UserCanDeleteUserResponse;
  },
  /**
   * UserCanSeeServerAdminPanel returns whether the user is authorized
   * to see server admin panel.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanSeeServerAdminPanel
   */
  userCanSeeServerAdminPanel: {
    kind: "unary";
    I: UserCanSeeServerAdminPanelRequest;
    O: UserCanSeeServerAdminPanelResponse;
  },
  /**
   * UserCanManageRepositoryContributors returns whether the user is authorized to manage
   * any contributors to the repository and the list of roles they can manage.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanManageRepositoryContributors
   */
  userCanManageRepositoryContributors: {
    kind: "unary";
    I: UserCanManageRepositoryContributorsRequest;
    O: UserCanManageRepositoryContributorsResponse;
  },
  /**
   * UserCanManagePluginContributors returns whether the user is authorized to manage
   * any contributors to the plugin and the list of roles they can manage.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanManagePluginContributors
   */
  userCanManagePluginContributors: {
    kind: "unary";
    I: UserCanManagePluginContributorsRequest;
    O: UserCanManagePluginContributorsResponse;
  },
  /**
   * UserCanManageTemplateContributors returns whether the user is authorized to manage
   * any contributors to the template and the list of roles they can manage.
   *
   * @generated from rpc buf.alpha.registry.v1alpha1.AuthzService.UserCanManageTemplateContributors
   */
  userCanManageTemplateContributors: {
    kind: "unary";
    I: UserCanManageTemplateContributorsRequest;
    O: UserCanManageTemplateContributorsResponse;
  },
}
> = /*@__PURE__*/
  serviceDesc(fileDesc_buf_alpha_registry_v1alpha1_authz, 0);

