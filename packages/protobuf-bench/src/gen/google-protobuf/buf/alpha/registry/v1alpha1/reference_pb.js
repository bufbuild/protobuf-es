// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// source: buf/alpha/registry/v1alpha1/reference.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var buf_alpha_registry_v1alpha1_repository_branch_pb = require('../../../../buf/alpha/registry/v1alpha1/repository_branch_pb.js');
goog.object.extend(proto, buf_alpha_registry_v1alpha1_repository_branch_pb);
var buf_alpha_registry_v1alpha1_repository_commit_pb = require('../../../../buf/alpha/registry/v1alpha1/repository_commit_pb.js');
goog.object.extend(proto, buf_alpha_registry_v1alpha1_repository_commit_pb);
var buf_alpha_registry_v1alpha1_repository_tag_pb = require('../../../../buf/alpha/registry/v1alpha1/repository_tag_pb.js');
goog.object.extend(proto, buf_alpha_registry_v1alpha1_repository_tag_pb);
var buf_alpha_registry_v1alpha1_repository_track_pb = require('../../../../buf/alpha/registry/v1alpha1/repository_track_pb.js');
goog.object.extend(proto, buf_alpha_registry_v1alpha1_repository_track_pb);
goog.exportSymbol('proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest', null, global);
goog.exportSymbol('proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse', null, global);
goog.exportSymbol('proto.buf.alpha.registry.v1alpha1.Reference', null, global);
goog.exportSymbol('proto.buf.alpha.registry.v1alpha1.Reference.ReferenceCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.buf.alpha.registry.v1alpha1.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_);
};
goog.inherits(proto.buf.alpha.registry.v1alpha1.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.buf.alpha.registry.v1alpha1.Reference.displayName = 'proto.buf.alpha.registry.v1alpha1.Reference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.displayName = 'proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.displayName = 'proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.buf.alpha.registry.v1alpha1.Reference.ReferenceCase = {
  REFERENCE_NOT_SET: 0,
  BRANCH: 1,
  TAG: 2,
  COMMIT: 3,
  TRACK: 4
};

/**
 * @return {proto.buf.alpha.registry.v1alpha1.Reference.ReferenceCase}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.getReferenceCase = function() {
  return /** @type {proto.buf.alpha.registry.v1alpha1.Reference.ReferenceCase} */(jspb.Message.computeOneofCase(this, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.buf.alpha.registry.v1alpha1.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.buf.alpha.registry.v1alpha1.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    branch: (f = msg.getBranch()) && buf_alpha_registry_v1alpha1_repository_branch_pb.RepositoryBranch.toObject(includeInstance, f),
    tag: (f = msg.getTag()) && buf_alpha_registry_v1alpha1_repository_tag_pb.RepositoryTag.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && buf_alpha_registry_v1alpha1_repository_commit_pb.RepositoryCommit.toObject(includeInstance, f),
    track: (f = msg.getTrack()) && buf_alpha_registry_v1alpha1_repository_track_pb.RepositoryTrack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference}
 */
proto.buf.alpha.registry.v1alpha1.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.buf.alpha.registry.v1alpha1.Reference;
  return proto.buf.alpha.registry.v1alpha1.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.buf.alpha.registry.v1alpha1.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference}
 */
proto.buf.alpha.registry.v1alpha1.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new buf_alpha_registry_v1alpha1_repository_branch_pb.RepositoryBranch;
      reader.readMessage(value,buf_alpha_registry_v1alpha1_repository_branch_pb.RepositoryBranch.deserializeBinaryFromReader);
      msg.setBranch(value);
      break;
    case 2:
      var value = new buf_alpha_registry_v1alpha1_repository_tag_pb.RepositoryTag;
      reader.readMessage(value,buf_alpha_registry_v1alpha1_repository_tag_pb.RepositoryTag.deserializeBinaryFromReader);
      msg.setTag(value);
      break;
    case 3:
      var value = new buf_alpha_registry_v1alpha1_repository_commit_pb.RepositoryCommit;
      reader.readMessage(value,buf_alpha_registry_v1alpha1_repository_commit_pb.RepositoryCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 4:
      var value = new buf_alpha_registry_v1alpha1_repository_track_pb.RepositoryTrack;
      reader.readMessage(value,buf_alpha_registry_v1alpha1_repository_track_pb.RepositoryTrack.deserializeBinaryFromReader);
      msg.setTrack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.buf.alpha.registry.v1alpha1.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.buf.alpha.registry.v1alpha1.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      buf_alpha_registry_v1alpha1_repository_branch_pb.RepositoryBranch.serializeBinaryToWriter
    );
  }
  f = message.getTag();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      buf_alpha_registry_v1alpha1_repository_tag_pb.RepositoryTag.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      buf_alpha_registry_v1alpha1_repository_commit_pb.RepositoryCommit.serializeBinaryToWriter
    );
  }
  f = message.getTrack();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      buf_alpha_registry_v1alpha1_repository_track_pb.RepositoryTrack.serializeBinaryToWriter
    );
  }
};


/**
 * optional RepositoryBranch branch = 1;
 * @return {?proto.buf.alpha.registry.v1alpha1.RepositoryBranch}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.getBranch = function() {
  return /** @type{?proto.buf.alpha.registry.v1alpha1.RepositoryBranch} */ (
    jspb.Message.getWrapperField(this, buf_alpha_registry_v1alpha1_repository_branch_pb.RepositoryBranch, 1));
};


/**
 * @param {?proto.buf.alpha.registry.v1alpha1.RepositoryBranch|undefined} value
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
*/
proto.buf.alpha.registry.v1alpha1.Reference.prototype.setBranch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.clearBranch = function() {
  return this.setBranch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.hasBranch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RepositoryTag tag = 2;
 * @return {?proto.buf.alpha.registry.v1alpha1.RepositoryTag}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.getTag = function() {
  return /** @type{?proto.buf.alpha.registry.v1alpha1.RepositoryTag} */ (
    jspb.Message.getWrapperField(this, buf_alpha_registry_v1alpha1_repository_tag_pb.RepositoryTag, 2));
};


/**
 * @param {?proto.buf.alpha.registry.v1alpha1.RepositoryTag|undefined} value
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
*/
proto.buf.alpha.registry.v1alpha1.Reference.prototype.setTag = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.clearTag = function() {
  return this.setTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.hasTag = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RepositoryCommit commit = 3;
 * @return {?proto.buf.alpha.registry.v1alpha1.RepositoryCommit}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.getCommit = function() {
  return /** @type{?proto.buf.alpha.registry.v1alpha1.RepositoryCommit} */ (
    jspb.Message.getWrapperField(this, buf_alpha_registry_v1alpha1_repository_commit_pb.RepositoryCommit, 3));
};


/**
 * @param {?proto.buf.alpha.registry.v1alpha1.RepositoryCommit|undefined} value
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
*/
proto.buf.alpha.registry.v1alpha1.Reference.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RepositoryTrack track = 4;
 * @return {?proto.buf.alpha.registry.v1alpha1.RepositoryTrack}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.getTrack = function() {
  return /** @type{?proto.buf.alpha.registry.v1alpha1.RepositoryTrack} */ (
    jspb.Message.getWrapperField(this, buf_alpha_registry_v1alpha1_repository_track_pb.RepositoryTrack, 4));
};


/**
 * @param {?proto.buf.alpha.registry.v1alpha1.RepositoryTrack|undefined} value
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
*/
proto.buf.alpha.registry.v1alpha1.Reference.prototype.setTrack = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.buf.alpha.registry.v1alpha1.Reference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.buf.alpha.registry.v1alpha1.Reference} returns this
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.clearTrack = function() {
  return this.setTrack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.buf.alpha.registry.v1alpha1.Reference.prototype.hasTrack = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    repositoryName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest;
  return proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRepositoryName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} returns this
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} returns this
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string repository_name = 3;
 * @return {string}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.getRepositoryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest} returns this
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameRequest.prototype.setRepositoryName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reference: (f = msg.getReference()) && proto.buf.alpha.registry.v1alpha1.Reference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse;
  return proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.buf.alpha.registry.v1alpha1.Reference;
      reader.readMessage(value,proto.buf.alpha.registry.v1alpha1.Reference.deserializeBinaryFromReader);
      msg.setReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReference();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.buf.alpha.registry.v1alpha1.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional Reference reference = 1;
 * @return {?proto.buf.alpha.registry.v1alpha1.Reference}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.getReference = function() {
  return /** @type{?proto.buf.alpha.registry.v1alpha1.Reference} */ (
    jspb.Message.getWrapperField(this, proto.buf.alpha.registry.v1alpha1.Reference, 1));
};


/**
 * @param {?proto.buf.alpha.registry.v1alpha1.Reference|undefined} value
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse} returns this
*/
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.setReference = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse} returns this
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.clearReference = function() {
  return this.setReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.buf.alpha.registry.v1alpha1.GetReferenceByNameResponse.prototype.hasReference = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.buf.alpha.registry.v1alpha1);
