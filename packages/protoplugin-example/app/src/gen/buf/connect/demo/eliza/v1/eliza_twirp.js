// Copyright 2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-twirp-es v0.1.0 with parameter "target=ts+js+dts"
// @generated from file buf/connect/demo/eliza/v1/eliza.proto (package buf.connect.demo.eliza.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import { ConverseResponse, IntroduceResponse, SayResponse } from "./eliza_pb.js";
import { TwirpClient } from 'protoc-gen-twirp-es/src/client.js';
export function createElizaServiceClient(opts) {
    return new ElizaServiceClient(opts);
}
export class ElizaServiceClient extends TwirpClient {
    constructor(opts) {
        super(opts);
    }
    async Say(request) {
        const promise = this.request("buf.connect.demo.eliza.v1.ElizaService", "Say", "application/json", request);
        return promise.then((data) => SayResponse.fromJson(data, { ignoreUnknownFields: true }));
    }
    ;
    async Converse(request) {
        const promise = this.request("buf.connect.demo.eliza.v1.ElizaService", "Converse", "application/json", request);
        return promise.then((data) => ConverseResponse.fromJson(data, { ignoreUnknownFields: true }));
    }
    ;
    async Introduce(request) {
        const promise = this.request("buf.connect.demo.eliza.v1.ElizaService", "Introduce", "application/json", request);
        return promise.then((data) => IntroduceResponse.fromJson(data, { ignoreUnknownFields: true }));
    }
    ;
}
