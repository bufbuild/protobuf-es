// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "proto/custom_options.proto";

package example;

option (example_file_option) = "Hello";

message MessageWithOptions {
  option (example_message_option) = 1234;

  int32 foo = 1 [(example_field_option) = 1.23];
  string bar = 2;
  oneof qux {
    option (example_oneof_option) = 42;

    string quux = 3;
  }
  repeated string many = 4;
  map<string, string> mapping = 5;
  string unused = 6;
}

enum EnumWithOptions {
  option (example_enum_option) = true;

  UNSET = 0;
  ACTIVE = 1 [(example_enum_value_option) = 321];
  INACTIVE = 2;
}

message GetRequest {}
message GetResponse {}

service ServiceWithOptions {
  option (example_service_option) = EXPERIMENTAL;

  rpc Get(GetRequest) returns (GetResponse) {
    option deprecated = true;
    option (example_method_option) = { 
        foo: 567, 
        bar: "Some string", 
        quux: "Oneof string",
        many: ["a", "b", "c"],
        mapping: [{key: "testKey", value: "testVal"}]
    };
  }
}

