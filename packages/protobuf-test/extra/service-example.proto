// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package spec;


service ExampleService {
    rpc Unary (ExampleRequest) returns (ExampleResponse);
    rpc ServerStream (ExampleRequest) returns (stream ExampleResponse);
    rpc ClientStream (stream ExampleRequest) returns (ExampleResponse);
    rpc Bidi (stream ExampleRequest) returns (stream ExampleResponse);
}

message ExampleRequest {
    
    // any text
    string question = 1;
    
    // the server should simulate an error in the requested way 
    FailRequest please_fail = 2;
    
    // the server should delay it's response for this amount of milliseconds
    int32 please_delay_response_ms = 3;
    
    // by default, the server always writes some custom response headers
    bool disable_sending_example_response_headers = 4;
}

message ExampleResponse {
    // any text
    string answer = 1;
    
    // contains the request headers that the server received
    map<string, string> your_request_headers = 2;
    
    // contains the deadline that the server received 
    string your_deadline = 3;
    
    // the failure requested 
    FailRequest your_fail_request = 4;
}

enum FailRequest {
    // don't fail
    FAIL_REQUEST_NONE = 0;
    
    // send an error status trailer after sending a message
    MESSAGE_THEN_ERROR_STATUS = 1;
    
    // send an error status, don't send any message
    ERROR_STATUS_ONLY = 2;
}
