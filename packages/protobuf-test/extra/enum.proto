// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package spec;

import "google/protobuf/descriptor.proto";


extend google.protobuf.EnumOptions {
    bool enum_opt_bool = 2001;
}

extend google.protobuf.EnumValueOptions {
    bool enum_value_opt_bool = 3001;
}

enum AnnotatedEnum {
    option (spec.enum_opt_bool) = true;
    UNSPECIFIED = 0;
    FOO = 1 [(spec.enum_value_opt_bool) = true];
}

message EnumMessage {
    enum NestedEnum {
        NESTED_ZERO = 0;
        NESTED_ONE = 1;
    }
}

enum SimpleEnum {
    SIMPLE_ZERO = 0;
    SIMPLE_ONE = 1;
}

enum AliasEnum {
    option allow_alias = true;
    ALIAS_ZERO = 0;
    ALIAS_ONE = 1;
    ALIAS_ONE_ALIASED = 1;
}

// The generated enum values should drop the "PREFIX_"
// part at the top if the target language allows
// (basically every language except C++).
enum PrefixEnum {
    PREFIX_ENUM_ZERO = 0;
    PREFIX_ENUM_ONE = 1;
}
