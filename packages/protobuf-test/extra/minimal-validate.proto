// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

// This file is a reduced copy of https://github.com/bufbuild/protovalidate/blob/main/proto/protovalidate/buf/validate/validate.proto
// It only contains the definitions necessary to resolve `required` rule, ignores,
// and disabled.
package buf.validate;

import "google/protobuf/descriptor.proto";

extend google.protobuf.MessageOptions {
  optional MessageRules message = 1159;
}

extend google.protobuf.OneofOptions {
  optional OneofRules oneof = 1159;
}

extend google.protobuf.FieldOptions {
  optional FieldRules field = 1159;
}

message MessageRules {
  optional bool disabled = 1;
}

message OneofRules {
  optional bool required = 1;
}

message FieldRules {
  optional bool required = 25;
  optional Ignore ignore = 27;
  oneof type {
    RepeatedRules repeated = 18;
    MapRules map = 19;
  }
}

enum Ignore {
  // Validation is only skipped if it's an unpopulated nullable fields.
  //
  // ```proto
  // syntax="proto3";
  //
  // message Request {
  //   // The uri rule applies to any value, including the empty string.
  //   string foo = 1 [
  //     (buf.validate.field).string.uri = true
  //   ];
  //
  //   // The uri rule only applies if the field is set, including if it's
  //   // set to the empty string.
  //   optional string bar = 2 [
  //     (buf.validate.field).string.uri = true
  //   ];
  //
  //   // The min_items rule always applies, even if the list is empty.
  //   repeated string baz = 3 [
  //     (buf.validate.field).repeated.min_items = 3
  //   ];
  //
  //   // The custom CEL rule applies only if the field is set, including if
  //   // it's the "zero" value of that message.
  //   SomeMessage quux = 4 [
  //     (buf.validate.field).cel = {/* ... */}
  //   ];
  // }
  // ```
  IGNORE_UNSPECIFIED = 0;

  // Validation is skipped if the field is unpopulated. This rule is redundant
  // if the field is already nullable.
  //
  // ```proto
  // syntax="proto3
  //
  // message Request {
  //   // The uri rule applies only if the value is not the empty string.
  //   string foo = 1 [
  //     (buf.validate.field).string.uri = true,
  //     (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  //   ];
  //
  //   // IGNORE_IF_UNPOPULATED is equivalent to IGNORE_UNSPECIFIED in this
  //   // case: the uri rule only applies if the field is set, including if
  //   // it's set to the empty string.
  //   optional string bar = 2 [
  //     (buf.validate.field).string.uri = true,
  //     (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  //   ];
  //
  //   // The min_items rule only applies if the list has at least one item.
  //   repeated string baz = 3 [
  //     (buf.validate.field).repeated.min_items = 3,
  //     (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  //   ];
  //
  //   // IGNORE_IF_UNPOPULATED is equivalent to IGNORE_UNSPECIFIED in this
  //   // case: the custom CEL rule applies only if the field is set, including
  //   // if it's the "zero" value of that message.
  //   SomeMessage quux = 4 [
  //     (buf.validate.field).cel = {/* ... */},
  //     (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  //   ];
  // }
  // ```
  IGNORE_IF_UNPOPULATED = 1;

  // Validation is skipped if the field is unpopulated or if it is a nullable
  // field populated with its default value. This is typically the zero or
  // empty value, but proto2 scalars support custom defaults. For messages, the
  // default is a non-null message with all its fields unpopulated.
  //
  // ```proto
  // syntax="proto3
  //
  // message Request {
  //   // IGNORE_IF_DEFAULT_VALUE is equivalent to IGNORE_IF_UNPOPULATED in
  //   // this case; the uri rule applies only if the value is not the empty
  //   // string.
  //   string foo = 1 [
  //     (buf.validate.field).string.uri = true,
  //     (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE
  //   ];
  //
  //   // The uri rule only applies if the field is set to a value other than
  //   // the empty string.
  //   optional string bar = 2 [
  //     (buf.validate.field).string.uri = true,
  //     (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE
  //   ];
  //
  //   // IGNORE_IF_DEFAULT_VALUE is equivalent to IGNORE_IF_UNPOPULATED in
  //   // this case; the min_items rule only applies if the list has at least
  //   // one item.
  //   repeated string baz = 3 [
  //     (buf.validate.field).repeated.min_items = 3,
  //     (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE
  //   ];
  //
  //   // The custom CEL rule only applies if the field is set to a value other
  //   // than an empty message (i.e., fields are unpopulated).
  //   SomeMessage quux = 4 [
  //     (buf.validate.field).cel = {/* ... */},
  //     (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE
  //   ];
  // }
  // ```
  //
  // This rule is affected by proto2 custom default values:
  //
  // ```proto
  // syntax="proto2";
  //
  // message Request {
  //   // The gt rule only applies if the field is set and it's value is not
  //   the default (i.e., not -42). The rule even applies if the field is set
  //   to zero since the default value differs.
  //   optional int32 value = 1 [
  //     default = -42,
  //     (buf.validate.field).int32.gt = 0,
  //     (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE
  //   ];
  // }
  IGNORE_IF_DEFAULT_VALUE = 2;

  // The validation rules of this field will be skipped and not evaluated. This
  // is useful for situations that necessitate turning off the rules of a field
  // containing a message that may not make sense in the current context, or to
  // temporarily disable rules during development.
  //
  // ```proto
  // message MyMessage {
  //   // The field's rules will always be ignored, including any validation's
  //   // on value's fields.
  //   MyOtherMessage value = 1 [
  //     (buf.validate.field).ignore = IGNORE_ALWAYS];
  // }
  // ```
  IGNORE_ALWAYS = 3;

  reserved
      "IGNORE_EMPTY"
          "IGNORE_DEFAULT"
  ;
}

message RepeatedRules {
  optional FieldRules items = 4;
}

message MapRules {
  //optional FieldRules keys = 4;
  optional FieldRules values = 5;
}
