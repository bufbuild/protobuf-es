// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file we will use for unit testing.
//
// LINT: ALLOW_GROUPS, LEGACY_NAMES

// @generated by protoc-gen-es v1.8.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file google/protobuf/unittest.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In test_util.h we do "using namespace unittest = protobuf_unittest".

import type { GenDescEnum, GenDescExtension, GenDescFile, GenDescMessage, GenDescService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, extDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { ImportEnum, ImportMessage } from "./unittest_import_pb.js";
import { fileDesc_google_protobuf_unittest_import } from "./unittest_import_pb.js";
import type { Message } from "@bufbuild/protobuf";
import type { PublicImportMessage } from "./unittest_import_public_pb.js";

export const fileDesc_google_protobuf_unittest: GenDescFile = /*@__PURE__*/
  fileDesc("Ch5nb29nbGUvcHJvdG9idWYvdW5pdHRlc3QucHJvdG8SEXByb3RvYnVmX3VuaXR0ZXN0It4aCgxUZXN0QWxsVHlwZXMSFgoOb3B0aW9uYWxfaW50MzIYASABKAUSFgoOb3B0aW9uYWxfaW50NjQYAiABKAMSFwoPb3B0aW9uYWxfdWludDMyGAMgASgNEhcKD29wdGlvbmFsX3VpbnQ2NBgEIAEoBBIXCg9vcHRpb25hbF9zaW50MzIYBSABKBESFwoPb3B0aW9uYWxfc2ludDY0GAYgASgSEhgKEG9wdGlvbmFsX2ZpeGVkMzIYByABKAcSGAoQb3B0aW9uYWxfZml4ZWQ2NBgIIAEoBhIZChFvcHRpb25hbF9zZml4ZWQzMhgJIAEoDxIZChFvcHRpb25hbF9zZml4ZWQ2NBgKIAEoEBIWCg5vcHRpb25hbF9mbG9hdBgLIAEoAhIXCg9vcHRpb25hbF9kb3VibGUYDCABKAESFQoNb3B0aW9uYWxfYm9vbBgNIAEoCBIXCg9vcHRpb25hbF9zdHJpbmcYDiABKAkSFgoOb3B0aW9uYWxfYnl0ZXMYDyABKAwSRAoNb3B0aW9uYWxncm91cBgQIAEoCjItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5PcHRpb25hbEdyb3VwEk4KF29wdGlvbmFsX25lc3RlZF9tZXNzYWdlGBIgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2USQwoYb3B0aW9uYWxfZm9yZWlnbl9tZXNzYWdlGBMgASgLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2USSAoXb3B0aW9uYWxfaW1wb3J0X21lc3NhZ2UYFCABKAsyJy5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuSW1wb3J0TWVzc2FnZRJIChRvcHRpb25hbF9uZXN0ZWRfZW51bRgVIAEoDjIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRFbnVtEj0KFW9wdGlvbmFsX2ZvcmVpZ25fZW51bRgWIAEoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtEkIKFG9wdGlvbmFsX2ltcG9ydF9lbnVtGBcgASgOMiQucHJvdG9idWZfdW5pdHRlc3RfaW1wb3J0LkltcG9ydEVudW0SIQoVb3B0aW9uYWxfc3RyaW5nX3BpZWNlGBggASgJQgIIAhIZCg1vcHRpb25hbF9jb3JkGBkgASgJQgIIARJVCh5vcHRpb25hbF9wdWJsaWNfaW1wb3J0X21lc3NhZ2UYGiABKAsyLS5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuUHVibGljSW1wb3J0TWVzc2FnZRJQChVvcHRpb25hbF9sYXp5X21lc3NhZ2UYGyABKAsyLS5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkTWVzc2FnZUICKAESWwogb3B0aW9uYWxfdW52ZXJpZmllZF9sYXp5X21lc3NhZ2UYHCABKAsyLS5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkTWVzc2FnZUICeAESFgoOcmVwZWF0ZWRfaW50MzIYHyADKAUSFgoOcmVwZWF0ZWRfaW50NjQYICADKAMSFwoPcmVwZWF0ZWRfdWludDMyGCEgAygNEhcKD3JlcGVhdGVkX3VpbnQ2NBgiIAMoBBIXCg9yZXBlYXRlZF9zaW50MzIYIyADKBESFwoPcmVwZWF0ZWRfc2ludDY0GCQgAygSEhgKEHJlcGVhdGVkX2ZpeGVkMzIYJSADKAcSGAoQcmVwZWF0ZWRfZml4ZWQ2NBgmIAMoBhIZChFyZXBlYXRlZF9zZml4ZWQzMhgnIAMoDxIZChFyZXBlYXRlZF9zZml4ZWQ2NBgoIAMoEBIWCg5yZXBlYXRlZF9mbG9hdBgpIAMoAhIXCg9yZXBlYXRlZF9kb3VibGUYKiADKAESFQoNcmVwZWF0ZWRfYm9vbBgrIAMoCBIXCg9yZXBlYXRlZF9zdHJpbmcYLCADKAkSFgoOcmVwZWF0ZWRfYnl0ZXMYLSADKAwSRAoNcmVwZWF0ZWRncm91cBguIAMoCjItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5SZXBlYXRlZEdyb3VwEk4KF3JlcGVhdGVkX25lc3RlZF9tZXNzYWdlGDAgAygLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2USQwoYcmVwZWF0ZWRfZm9yZWlnbl9tZXNzYWdlGDEgAygLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2USSAoXcmVwZWF0ZWRfaW1wb3J0X21lc3NhZ2UYMiADKAsyJy5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuSW1wb3J0TWVzc2FnZRJIChRyZXBlYXRlZF9uZXN0ZWRfZW51bRgzIAMoDjIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRFbnVtEj0KFXJlcGVhdGVkX2ZvcmVpZ25fZW51bRg0IAMoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtEkIKFHJlcGVhdGVkX2ltcG9ydF9lbnVtGDUgAygOMiQucHJvdG9idWZfdW5pdHRlc3RfaW1wb3J0LkltcG9ydEVudW0SIQoVcmVwZWF0ZWRfc3RyaW5nX3BpZWNlGDYgAygJQgIIAhIZCg1yZXBlYXRlZF9jb3JkGDcgAygJQgIIARJQChVyZXBlYXRlZF9sYXp5X21lc3NhZ2UYOSADKAsyLS5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkTWVzc2FnZUICKAESGQoNZGVmYXVsdF9pbnQzMhg9IAEoBToCNDESGQoNZGVmYXVsdF9pbnQ2NBg+IAEoAzoCNDISGgoOZGVmYXVsdF91aW50MzIYPyABKA06AjQzEhoKDmRlZmF1bHRfdWludDY0GEAgASgEOgI0NBIbCg5kZWZhdWx0X3NpbnQzMhhBIAEoEToDLTQ1EhoKDmRlZmF1bHRfc2ludDY0GEIgASgSOgI0NhIbCg9kZWZhdWx0X2ZpeGVkMzIYQyABKAc6AjQ3EhsKD2RlZmF1bHRfZml4ZWQ2NBhEIAEoBjoCNDgSHAoQZGVmYXVsdF9zZml4ZWQzMhhFIAEoDzoCNDkSHQoQZGVmYXVsdF9zZml4ZWQ2NBhGIAEoEDoDLTUwEhsKDWRlZmF1bHRfZmxvYXQYRyABKAI6BDUxLjUSHQoOZGVmYXVsdF9kb3VibGUYSCABKAE6BTUyMDAwEhoKDGRlZmF1bHRfYm9vbBhJIAEoCDoEdHJ1ZRIdCg5kZWZhdWx0X3N0cmluZxhKIAEoCToFaGVsbG8SHAoNZGVmYXVsdF9ieXRlcxhLIAEoDDoFd29ybGQSTAoTZGVmYXVsdF9uZXN0ZWRfZW51bRhRIAEoDjIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRFbnVtOgNCQVISSQoUZGVmYXVsdF9mb3JlaWduX2VudW0YUiABKA4yHi5wcm90b2J1Zl91bml0dGVzdC5Gb3JlaWduRW51bToLRk9SRUlHTl9CQVISTQoTZGVmYXVsdF9pbXBvcnRfZW51bRhTIAEoDjIkLnByb3RvYnVmX3VuaXR0ZXN0X2ltcG9ydC5JbXBvcnRFbnVtOgpJTVBPUlRfQkFSEiUKFGRlZmF1bHRfc3RyaW5nX3BpZWNlGFQgASgJOgNhYmNCAggCEh0KDGRlZmF1bHRfY29yZBhVIAEoCToDMTIzQgIIARIWCgxvbmVvZl91aW50MzIYbyABKA1IABJNChRvbmVvZl9uZXN0ZWRfbWVzc2FnZRhwIAEoCzItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRNZXNzYWdlSAASFgoMb25lb2Zfc3RyaW5nGHEgASgJSAASFQoLb25lb2ZfYnl0ZXMYciABKAxIABIYCgpvbmVvZl9jb3JkGHMgASgJQgIIAUgAEiAKEm9uZW9mX3N0cmluZ19waWVjZRh0IAEoCUICCAJIABJWChlvbmVvZl9sYXp5X25lc3RlZF9tZXNzYWdlGHUgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2VCAigBSAAaGwoNTmVzdGVkTWVzc2FnZRIKCgJiYhgBIAEoBRoaCg1PcHRpb25hbEdyb3VwEgkKAWEYESABKAUaGgoNUmVwZWF0ZWRHcm91cBIJCgFhGC8gASgFIjkKCk5lc3RlZEVudW0SBwoDRk9PEAESBwoDQkFSEAISBwoDQkFaEAMSEAoDTkVHEP///////////wFCDQoLb25lb2ZfZmllbGQitAIKEk5lc3RlZFRlc3RBbGxUeXBlcxI0CgVjaGlsZBgBIAEoCzIlLnByb3RvYnVmX3VuaXR0ZXN0Lk5lc3RlZFRlc3RBbGxUeXBlcxIwCgdwYXlsb2FkGAIgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzEj0KDnJlcGVhdGVkX2NoaWxkGAMgAygLMiUucHJvdG9idWZfdW5pdHRlc3QuTmVzdGVkVGVzdEFsbFR5cGVzEj0KCmxhenlfY2hpbGQYBCABKAsyJS5wcm90b2J1Zl91bml0dGVzdC5OZXN0ZWRUZXN0QWxsVHlwZXNCAigBEjgKC2VhZ2VyX2NoaWxkGAUgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzQgIoACKdAgoUVGVzdERlcHJlY2F0ZWRGaWVsZHMSHAoQZGVwcmVjYXRlZF9pbnQzMhgBIAEoBUICGAESJgoaZGVwcmVjYXRlZF9yZXBlYXRlZF9zdHJpbmcYBCADKAlCAhgBEk0KEmRlcHJlY2F0ZWRfbWVzc2FnZRgDIAEoCzItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRNZXNzYWdlQgIYARInChlkZXByZWNhdGVkX2ludDMyX2luX29uZW9mGAIgASgFQgIYAUgAEjcKBm5lc3RlZBgFIAEoCzInLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3REZXByZWNhdGVkRmllbGRzQg4KDG9uZW9mX2ZpZWxkcyIbChVUZXN0RGVwcmVjYXRlZE1lc3NhZ2U6AhgBIiYKDkZvcmVpZ25NZXNzYWdlEgkKAWMYASABKAUSCQoBZBgCIAEoBSIwChJUZXN0UmVzZXJ2ZWRGaWVsZHNKBAgCEANKBAgPEBBKBAgJEAxSA2JhclIDYmF6Ih0KEVRlc3RBbGxFeHRlbnNpb25zKggIARCAgICAAiIkChdPcHRpb25hbEdyb3VwX2V4dGVuc2lvbhIJCgFhGBEgASgFIiQKF1JlcGVhdGVkR3JvdXBfZXh0ZW5zaW9uEgkKAWEYLyABKAUivgEKHFRlc3RNaXhlZEZpZWxkc0FuZEV4dGVuc2lvbnMSCQoBYRgBIAEoBRIJCgFiGAMgAygHKgQIAhADKgQIBBAFMj0KAWMSLy5wcm90b2J1Zl91bml0dGVzdC5UZXN0TWl4ZWRGaWVsZHNBbmRFeHRlbnNpb25zGAIgASgFUgFjMj0KAWQSLy5wcm90b2J1Zl91bml0dGVzdC5UZXN0TWl4ZWRGaWVsZHNBbmRFeHRlbnNpb25zGAQgAygHUgFkIrUBCglUZXN0R3JvdXASQQoNb3B0aW9uYWxncm91cBgQIAEoCjIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RHcm91cC5PcHRpb25hbEdyb3VwEj0KFW9wdGlvbmFsX2ZvcmVpZ25fZW51bRgWIAEoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtGiYKDU9wdGlvbmFsR3JvdXASCQoBYRgRIAEoBRIKCgJ6ehhZIAEoBSIeChJUZXN0R3JvdXBFeHRlbnNpb24qCAgBEICAgIACIosEChNUZXN0TmVzdGVkRXh0ZW5zaW9uGiQKF09wdGlvbmFsR3JvdXBfZXh0ZW5zaW9uEgkKAWEYESABKAUyPwoEdGVzdBIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGOoHIAEoCToEdGVzdFIEdGVzdDJdChduZXN0ZWRfc3RyaW5nX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGOsHIAEoCVIVbmVzdGVkU3RyaW5nRXh0ZW5zaW9uMp4BChdvcHRpb25hbGdyb3VwX2V4dGVuc2lvbhIlLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RHcm91cEV4dGVuc2lvbhgQIAEoCjI+LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3ROZXN0ZWRFeHRlbnNpb24uT3B0aW9uYWxHcm91cF9leHRlbnNpb25SFm9wdGlvbmFsZ3JvdXBFeHRlbnNpb24yjAEKH29wdGlvbmFsX2ZvcmVpZ25fZW51bV9leHRlbnNpb24SJS5wcm90b2J1Zl91bml0dGVzdC5UZXN0R3JvdXBFeHRlbnNpb24YFiABKA4yHi5wcm90b2J1Zl91bml0dGVzdC5Gb3JlaWduRW51bVIcb3B0aW9uYWxGb3JlaWduRW51bUV4dGVuc2lvbiJsChJUZXN0Q2hpbGRFeHRlbnNpb24SCQoBYRgBIAEoCRIJCgFiGAIgASgJEkAKEm9wdGlvbmFsX2V4dGVuc2lvbhgDIAEoCzIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zItYCChZUZXN0Q2hpbGRFeHRlbnNpb25EYXRhEgkKAWEYASABKAkSCQoBYhgCIAEoCRJhChJvcHRpb25hbF9leHRlbnNpb24YAyABKAsyRS5wcm90b2J1Zl91bml0dGVzdC5UZXN0Q2hpbGRFeHRlbnNpb25EYXRhLk5lc3RlZFRlc3RBbGxFeHRlbnNpb25zRGF0YRrCAQobTmVzdGVkVGVzdEFsbEV4dGVuc2lvbnNEYXRhEnIKB2R5bmFtaWMYgMSuwwEgASgLMl0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdENoaWxkRXh0ZW5zaW9uRGF0YS5OZXN0ZWRUZXN0QWxsRXh0ZW5zaW9uc0RhdGEuTmVzdGVkRHluYW1pY0V4dGVuc2lvbnMaLwoXTmVzdGVkRHluYW1pY0V4dGVuc2lvbnMSCQoBYRgBIAEoBRIJCgFiGAIgASgFIlsKGFRlc3ROZXN0ZWRDaGlsZEV4dGVuc2lvbhIJCgFhGAEgASgFEjQKBWNoaWxkGAIgASgLMiUucHJvdG9idWZfdW5pdHRlc3QuVGVzdENoaWxkRXh0ZW5zaW9uImMKHFRlc3ROZXN0ZWRDaGlsZEV4dGVuc2lvbkRhdGESCQoBYRgBIAEoBRI4CgVjaGlsZBgCIAEoCzIpLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RDaGlsZEV4dGVuc2lvbkRhdGEiVAoQVGVzdFJlcXVpcmVkRW51bRI1Cg1yZXF1aXJlZF9lbnVtGAEgAigOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW0SCQoBYRgCIAEoBSKzAQoWVGVzdFJlcXVpcmVkRW51bU5vTWFzaxJLCg1yZXF1aXJlZF9lbnVtGAEgAigOMjQucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkRW51bU5vTWFzay5OZXN0ZWRFbnVtEgkKAWEYAiABKAUiQQoKTmVzdGVkRW51bRIPCgtVTlNQRUNJRklFRBAAEgcKA0ZPTxACEgcKA0JBUhBkEhAKA0JBWhD///////////8BIrMCChVUZXN0UmVxdWlyZWRFbnVtTXVsdGkSTAoPcmVxdWlyZWRfZW51bV80GAQgAigOMjMucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkRW51bU11bHRpLk5lc3RlZEVudW0SCwoDYV8zGAMgASgFEkwKD3JlcXVpcmVkX2VudW1fMhgCIAIoDjIzLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZEVudW1NdWx0aS5OZXN0ZWRFbnVtEjcKD3JlcXVpcmVkX2VudW1fMRgBIAIoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtIjgKCk5lc3RlZEVudW0SDwoLVU5TUEVDSUZJRUQQABIHCgNGT08QARIHCgNCQVIQAhIHCgNCQVoQZCLEAwoXVGVzdFJlcXVpcmVkTm9NYXNrTXVsdGkSGwoTcmVxdWlyZWRfZml4ZWQzMl84MBhQIAIoBxIbChNyZXF1aXJlZF9maXhlZDMyXzcwGEYgAigHEk8KEHJlcXVpcmVkX2VudW1fNjQYQCACKA4yNS5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWROb01hc2tNdWx0aS5OZXN0ZWRFbnVtEk4KD3JlcXVpcmVkX2VudW1fNBgEIAIoDjI1LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZE5vTWFza011bHRpLk5lc3RlZEVudW0SCwoDYV8zGAMgASgFEk4KD3JlcXVpcmVkX2VudW1fMhgCIAIoDjI1LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZE5vTWFza011bHRpLk5lc3RlZEVudW0SNwoPcmVxdWlyZWRfZW51bV8xGAEgAigOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW0iOAoKTmVzdGVkRW51bRIPCgtVTlNQRUNJRklFRBAAEgcKA0ZPTxABEgcKA0JBUhACEgcKA0JBWhBkIqEGCgxUZXN0UmVxdWlyZWQSCQoBYRgBIAIoBRIOCgZkdW1teTIYAiABKAUSCQoBYhgDIAIoBRIOCgZkdW1teTQYBCABKAUSDgoGZHVtbXk1GAUgASgFEg4KBmR1bW15NhgGIAEoBRIOCgZkdW1teTcYByABKAUSDgoGZHVtbXk4GAggASgFEg4KBmR1bW15ORgJIAEoBRIPCgdkdW1teTEwGAogASgFEg8KB2R1bW15MTEYCyABKAUSDwoHZHVtbXkxMhgMIAEoBRIPCgdkdW1teTEzGA0gASgFEg8KB2R1bW15MTQYDiABKAUSDwoHZHVtbXkxNRgPIAEoBRIPCgdkdW1teTE2GBAgASgFEg8KB2R1bW15MTcYESABKAUSDwoHZHVtbXkxOBgSIAEoBRIPCgdkdW1teTE5GBMgASgFEg8KB2R1bW15MjAYFCABKAUSDwoHZHVtbXkyMRgVIAEoBRIPCgdkdW1teTIyGBYgASgFEg8KB2R1bW15MjMYFyABKAUSDwoHZHVtbXkyNBgYIAEoBRIPCgdkdW1teTI1GBkgASgFEg8KB2R1bW15MjYYGiABKAUSDwoHZHVtbXkyNxgbIAEoBRIPCgdkdW1teTI4GBwgASgFEg8KB2R1bW15MjkYHSABKAUSDwoHZHVtbXkzMBgeIAEoBRIPCgdkdW1teTMxGB8gASgFEg8KB2R1bW15MzIYICABKAUSCQoBYxghIAIoBRI7ChBvcHRpb25hbF9mb3JlaWduGCIgASgLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2UyXgoGc2luZ2xlEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMY6AcgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkUgZzaW5nbGUyXAoFbXVsdGkSJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxjpByADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWRSBW11bHRpIuQBChNUZXN0UmVxdWlyZWRGb3JlaWduEjkKEG9wdGlvbmFsX21lc3NhZ2UYASABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWQSOQoQcmVwZWF0ZWRfbWVzc2FnZRgCIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZBINCgVkdW1teRgDIAEoBRJIChVvcHRpb25hbF9sYXp5X21lc3NhZ2UYBCABKAsyJS5wcm90b2J1Zl91bml0dGVzdC5OZXN0ZWRUZXN0QWxsVHlwZXNCAigBIsYBChNUZXN0UmVxdWlyZWRNZXNzYWdlEjkKEG9wdGlvbmFsX21lc3NhZ2UYASABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWQSOQoQcmVwZWF0ZWRfbWVzc2FnZRgCIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZBI5ChByZXF1aXJlZF9tZXNzYWdlGAMgAigLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkIrMDChlUZXN0TmVzdGVkUmVxdWlyZWRGb3JlaWduEjsKBWNoaWxkGAEgASgLMiwucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZFJlcXVpcmVkRm9yZWlnbhI3CgdwYXlsb2FkGAIgASgLMiYucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkRm9yZWlnbhINCgVkdW1teRgDIAEoBRI6Cg1yZXF1aXJlZF9lbnVtGAUgASgLMiMucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkRW51bRJIChVyZXF1aXJlZF9lbnVtX25vX21hc2sYBiABKAsyKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWRFbnVtTm9NYXNrEkUKE3JlcXVpcmVkX2VudW1fbXVsdGkYByABKAsyKC5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWRFbnVtTXVsdGkSRAoQcmVxdWlyZWRfbm9fbWFzaxgJIAEoCzIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RSZXF1aXJlZE5vTWFza011bHRpIloKEVRlc3RGb3JlaWduTmVzdGVkEkUKDmZvcmVpZ25fbmVzdGVkGAEgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2UiEgoQVGVzdEVtcHR5TWVzc2FnZSIqCh5UZXN0RW1wdHlNZXNzYWdlV2l0aEV4dGVuc2lvbnMqCAgBEICAgIACIlkKF1Rlc3RQaWNrbGVOZXN0ZWRNZXNzYWdlGj4KDU5lc3RlZE1lc3NhZ2USCgoCYmIYASABKAUaIQoTTmVzdGVkTmVzdGVkTWVzc2FnZRIKCgJjYxgBIAEoBSI3ChtUZXN0TXVsdGlwbGVFeHRlbnNpb25SYW5nZXMqBAgqECsqBgivIBCUISoKCICABBCAgICAAiI0ChhUZXN0UmVhbGx5TGFyZ2VUYWdOdW1iZXISCQoBYRgBIAEoBRINCgJiYhj///9/IAEoBSJVChRUZXN0UmVjdXJzaXZlTWVzc2FnZRIyCgFhGAEgASgLMicucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlY3Vyc2l2ZU1lc3NhZ2USCQoBaRgCIAEoBSLmAwoUVGVzdE11dHVhbFJlY3Vyc2lvbkESMwoCYmIYASABKAsyJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0TXV0dWFsUmVjdXJzaW9uQhJCCghzdWJncm91cBgCIAEoCjIwLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RNdXR1YWxSZWN1cnNpb25BLlN1Ykdyb3VwEkQKCXN1Ymdyb3VwchgFIAMoCjIxLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RNdXR1YWxSZWN1cnNpb25BLlN1Ykdyb3VwUhpACgpTdWJNZXNzYWdlEjIKAWIYASABKAsyJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0TXV0dWFsUmVjdXJzaW9uQhqNAQoIU3ViR3JvdXASRwoLc3ViX21lc3NhZ2UYAyABKAsyMi5wcm90b2J1Zl91bml0dGVzdC5UZXN0TXV0dWFsUmVjdXJzaW9uQS5TdWJNZXNzYWdlEjgKD25vdF9pbl90aGlzX3NjYxgEIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxo9CglTdWJHcm91cFISMAoHcGF5bG9hZBgGIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcyJiChRUZXN0TXV0dWFsUmVjdXJzaW9uQhIyCgFhGAEgASgLMicucHJvdG9idWZfdW5pdHRlc3QuVGVzdE11dHVhbFJlY3Vyc2lvbkESFgoOb3B0aW9uYWxfaW50MzIYAiABKAUiygEKEVRlc3RJc0luaXRpYWxpemVkEkQKC3N1Yl9tZXNzYWdlGAEgASgLMi8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdElzSW5pdGlhbGl6ZWQuU3ViTWVzc2FnZRpvCgpTdWJNZXNzYWdlEkoKCHN1Ymdyb3VwGAEgASgKMjgucHJvdG9idWZfdW5pdHRlc3QuVGVzdElzSW5pdGlhbGl6ZWQuU3ViTWVzc2FnZS5TdWJHcm91cBoVCghTdWJHcm91cBIJCgFpGAIgAigFIrMBChJUZXN0RHVwRmllbGROdW1iZXISCQoBYRgBIAEoBRI2CgNmb28YAiABKAoyKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0RHVwRmllbGROdW1iZXIuRm9vEjYKA2JhchgDIAEoCjIpLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3REdXBGaWVsZE51bWJlci5CYXIaEAoDRm9vEgkKAWEYASABKAUaEAoDQmFyEgkKAWEYASABKAUiTAoQVGVzdEVhZ2VyTWVzc2FnZRI4CgtzdWJfbWVzc2FnZRgBIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlc0ICKAAiSwoPVGVzdExhenlNZXNzYWdlEjgKC3N1Yl9tZXNzYWdlGAEgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzQgIoASJXChdUZXN0TGF6eU1lc3NhZ2VSZXBlYXRlZBI8ChByZXBlYXRlZF9tZXNzYWdlGAEgAygLMiIucHJvdG9idWZfdW5pdHRlc3QuVGVzdExhenlNZXNzYWdlIo8CChJUZXN0RWFnZXJNYXliZUxhenkSNAoLbWVzc2FnZV9mb28YASABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSNAoLbWVzc2FnZV9iYXIYAiABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSSAoLbWVzc2FnZV9iYXoYAyABKAsyMy5wcm90b2J1Zl91bml0dGVzdC5UZXN0RWFnZXJNYXliZUxhenkuTmVzdGVkTWVzc2FnZRpDCg1OZXN0ZWRNZXNzYWdlEjIKBnBhY2tlZBgBIAEoCzIiLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRUeXBlcyKAAgoYVGVzdE5lc3RlZE1lc3NhZ2VIYXNCaXRzEloKF29wdGlvbmFsX25lc3RlZF9tZXNzYWdlGAEgASgLMjkucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZE1lc3NhZ2VIYXNCaXRzLk5lc3RlZE1lc3NhZ2UahwEKDU5lc3RlZE1lc3NhZ2USJAocbmVzdGVkbWVzc2FnZV9yZXBlYXRlZF9pbnQzMhgBIAMoBRJQCiVuZXN0ZWRtZXNzYWdlX3JlcGVhdGVkX2ZvcmVpZ25tZXNzYWdlGAIgAygLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2Ui5QMKF1Rlc3RDYW1lbENhc2VGaWVsZE5hbWVzEhYKDlByaW1pdGl2ZUZpZWxkGAEgASgFEhMKC1N0cmluZ0ZpZWxkGAIgASgJEjEKCUVudW1GaWVsZBgDIAEoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtEjcKDE1lc3NhZ2VGaWVsZBgEIAEoCzIhLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25NZXNzYWdlEhwKEFN0cmluZ1BpZWNlRmllbGQYBSABKAlCAggCEhUKCUNvcmRGaWVsZBgGIAEoCUICCAESHgoWUmVwZWF0ZWRQcmltaXRpdmVGaWVsZBgHIAMoBRIbChNSZXBlYXRlZFN0cmluZ0ZpZWxkGAggAygJEjkKEVJlcGVhdGVkRW51bUZpZWxkGAkgAygOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW0SPwoUUmVwZWF0ZWRNZXNzYWdlRmllbGQYCiADKAsyIS5wcm90b2J1Zl91bml0dGVzdC5Gb3JlaWduTWVzc2FnZRIkChhSZXBlYXRlZFN0cmluZ1BpZWNlRmllbGQYCyADKAlCAggCEh0KEVJlcGVhdGVkQ29yZEZpZWxkGAwgAygJQgIIASLVAQoSVGVzdEZpZWxkT3JkZXJpbmdzEhEKCW15X3N0cmluZxgLIAEoCRIOCgZteV9pbnQYASABKAMSEAoIbXlfZmxvYXQYZSABKAISVQoXb3B0aW9uYWxfbmVzdGVkX21lc3NhZ2UYyAEgASgLMjMucHJvdG9idWZfdW5pdHRlc3QuVGVzdEZpZWxkT3JkZXJpbmdzLk5lc3RlZE1lc3NhZ2UaJwoNTmVzdGVkTWVzc2FnZRIKCgJvbxgCIAEoAxIKCgJiYhgBIAEoBSoECAIQCyoECAwQZSKwAQoXVGVzdEV4dGVuc2lvbk9yZGVyaW5nczESEQoJbXlfc3RyaW5nGAEgASgJMoEBChN0ZXN0X2V4dF9vcmRlcmluZ3MxEiUucHJvdG9idWZfdW5pdHRlc3QuVGVzdEZpZWxkT3JkZXJpbmdzGA0gASgLMioucHJvdG9idWZfdW5pdHRlc3QuVGVzdEV4dGVuc2lvbk9yZGVyaW5nczFSEXRlc3RFeHRPcmRlcmluZ3MxIvsCChdUZXN0RXh0ZW5zaW9uT3JkZXJpbmdzMhIRCglteV9zdHJpbmcYASABKAkayAEKF1Rlc3RFeHRlbnNpb25PcmRlcmluZ3MzEhEKCW15X3N0cmluZxgBIAEoCTKZAQoTdGVzdF9leHRfb3JkZXJpbmdzMxIlLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RGaWVsZE9yZGVyaW5ncxgOIAEoCzJCLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RFeHRlbnNpb25PcmRlcmluZ3MyLlRlc3RFeHRlbnNpb25PcmRlcmluZ3MzUhF0ZXN0RXh0T3JkZXJpbmdzMzKBAQoTdGVzdF9leHRfb3JkZXJpbmdzMhIlLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RGaWVsZE9yZGVyaW5ncxgMIAEoCzIqLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RFeHRlbnNpb25PcmRlcmluZ3MyUhF0ZXN0RXh0T3JkZXJpbmdzMiK2BwoYVGVzdEV4dHJlbWVEZWZhdWx0VmFsdWVzEj8KDWVzY2FwZWRfYnl0ZXMYASABKAw6KFwwMDBcMDAxXDAwN1wwMTBcMDE0XG5cclx0XDAxM1xcXCdcIlwzNzYSIAoMbGFyZ2VfdWludDMyGAIgASgNOgo0Mjk0OTY3Mjk1EioKDGxhcmdlX3VpbnQ2NBgDIAEoBDoUMTg0NDY3NDQwNzM3MDk1NTE2MTUSIAoLc21hbGxfaW50MzIYBCABKAU6Cy0yMTQ3NDgzNjQ3EikKC3NtYWxsX2ludDY0GAUgASgDOhQtOTIyMzM3MjAzNjg1NDc3NTgwNxInChJyZWFsbHlfc21hbGxfaW50MzIYFSABKAU6Cy0yMTQ3NDgzNjQ4EjAKEnJlYWxseV9zbWFsbF9pbnQ2NBgWIAEoAzoULTkyMjMzNzIwMzY4NTQ3NzU4MDgSGAoLdXRmOF9zdHJpbmcYBiABKAk6A+GItBIVCgp6ZXJvX2Zsb2F0GAcgASgCOgEwEhQKCW9uZV9mbG9hdBgIIAEoAjoBMRIYCgtzbWFsbF9mbG9hdBgJIAEoAjoDMS41Eh4KEm5lZ2F0aXZlX29uZV9mbG9hdBgKIAEoAjoCLTESHAoObmVnYXRpdmVfZmxvYXQYCyABKAI6BC0xLjUSGgoLbGFyZ2VfZmxvYXQYDCABKAI6BTJlKzA4EiQKFHNtYWxsX25lZ2F0aXZlX2Zsb2F0GA0gASgCOgYtOGUtMjgSFwoKaW5mX2RvdWJsZRgOIAEoAToDaW5mEhwKDm5lZ19pbmZfZG91YmxlGA8gASgBOgQtaW5mEhcKCm5hbl9kb3VibGUYECABKAE6A25hbhIWCglpbmZfZmxvYXQYESABKAI6A2luZhIbCg1uZWdfaW5mX2Zsb2F0GBIgASgCOgQtaW5mEhYKCW5hbl9mbG9hdBgTIAEoAjoDbmFuEisKDGNwcF90cmlncmFwaBgUIAEoCToVPyA/ID8/ID8/ID8/PyA/Py8gPz8tEiAKEHN0cmluZ193aXRoX3plcm8YFyABKAk6BmhlbABsbxIiCg9ieXRlc193aXRoX3plcm8YGCABKAw6CXdvclwwMDBsZBIoChZzdHJpbmdfcGllY2Vfd2l0aF96ZXJvGBkgASgJOgRhYgBjQgIIAhIgCg5jb3JkX3dpdGhfemVybxgaIAEoCToEMTIAM0ICCAESJgoScmVwbGFjZW1lbnRfc3RyaW5nGBsgASgJOgoke3Vua25vd259IksKEVNwYXJzZUVudW1NZXNzYWdlEjYKC3NwYXJzZV9lbnVtGAEgASgOMiEucHJvdG9idWZfdW5pdHRlc3QuVGVzdFNwYXJzZUVudW0iGQoJT25lU3RyaW5nEgwKBGRhdGEYASABKAkiGgoKTW9yZVN0cmluZxIMCgRkYXRhGAEgAygJIhgKCE9uZUJ5dGVzEgwKBGRhdGEYASABKAwiGQoJTW9yZUJ5dGVzEgwKBGRhdGEYASADKAwi6wMKEk1hbnlPcHRpb25hbFN0cmluZxIMCgRzdHIxGAEgASgJEgwKBHN0cjIYAiABKAkSDAoEc3RyMxgDIAEoCRIMCgRzdHI0GAQgASgJEgwKBHN0cjUYBSABKAkSDAoEc3RyNhgGIAEoCRIMCgRzdHI3GAcgASgJEgwKBHN0cjgYCCABKAkSDAoEc3RyORgJIAEoCRINCgVzdHIxMBgKIAEoCRINCgVzdHIxMRgLIAEoCRINCgVzdHIxMhgMIAEoCRINCgVzdHIxMxgNIAEoCRINCgVzdHIxNBgOIAEoCRINCgVzdHIxNRgPIAEoCRINCgVzdHIxNhgQIAEoCRINCgVzdHIxNxgRIAEoCRINCgVzdHIxOBgSIAEoCRINCgVzdHIxORgTIAEoCRINCgVzdHIyMBgUIAEoCRINCgVzdHIyMRgVIAEoCRINCgVzdHIyMhgWIAEoCRINCgVzdHIyMxgXIAEoCRINCgVzdHIyNBgYIAEoCRINCgVzdHIyNRgZIAEoCRINCgVzdHIyNhgaIAEoCRINCgVzdHIyNxgbIAEoCRINCgVzdHIyOBgcIAEoCRINCgVzdHIyORgdIAEoCRINCgVzdHIzMBgeIAEoCRINCgVzdHIzMRgfIAEoCRINCgVzdHIzMhggIAEoCSIcCgxJbnQzMk1lc3NhZ2USDAoEZGF0YRgBIAEoBSIdCg1VaW50MzJNZXNzYWdlEgwKBGRhdGEYASABKA0iHAoMSW50NjRNZXNzYWdlEgwKBGRhdGEYASABKAMiHQoNVWludDY0TWVzc2FnZRIMCgRkYXRhGAEgASgEIhsKC0Jvb2xNZXNzYWdlEgwKBGRhdGEYASABKAgi0AEKCVRlc3RPbmVvZhIRCgdmb29faW50GAEgASgFSAASFAoKZm9vX3N0cmluZxgCIAEoCUgAEjYKC2Zvb19tZXNzYWdlGAMgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzSAASOQoIZm9vZ3JvdXAYBCABKAoyJS5wcm90b2J1Zl91bml0dGVzdC5UZXN0T25lb2YuRm9vR3JvdXBIABogCghGb29Hcm91cBIJCgFhGAUgASgFEgkKAWIYBiABKAlCBQoDZm9vIucBChxUZXN0T25lb2ZCYWNrd2FyZHNDb21wYXRpYmxlEg8KB2Zvb19pbnQYASABKAUSEgoKZm9vX3N0cmluZxgCIAEoCRI0Cgtmb29fbWVzc2FnZRgDIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxJKCghmb29ncm91cBgEIAEoCjI4LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RPbmVvZkJhY2t3YXJkc0NvbXBhdGlibGUuRm9vR3JvdXAaIAoIRm9vR3JvdXASCQoBYRgFIAEoBRIJCgFiGAYgASgJIvMHCgpUZXN0T25lb2YyEhEKB2Zvb19pbnQYASABKAVIABIUCgpmb29fc3RyaW5nGAIgASgJSAASFgoIZm9vX2NvcmQYAyABKAlCAggBSAASHgoQZm9vX3N0cmluZ19waWVjZRgEIAEoCUICCAJIABITCglmb29fYnl0ZXMYBSABKAxIABI8Cghmb29fZW51bRgGIAEoDjIoLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RPbmVvZjIuTmVzdGVkRW51bUgAEkIKC2Zvb19tZXNzYWdlGAcgASgLMisucHJvdG9idWZfdW5pdHRlc3QuVGVzdE9uZW9mMi5OZXN0ZWRNZXNzYWdlSAASOgoIZm9vZ3JvdXAYCCABKAoyJi5wcm90b2J1Zl91bml0dGVzdC5UZXN0T25lb2YyLkZvb0dyb3VwSAASSwoQZm9vX2xhenlfbWVzc2FnZRgLIAEoCzIrLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RPbmVvZjIuTmVzdGVkTWVzc2FnZUICKAFIABIcCg5mb29fYnl0ZXNfY29yZBgeIAEoDEICCAFIABIUCgdiYXJfaW50GAwgASgFOgE1SAESHAoKYmFyX3N0cmluZxgNIAEoCToGU1RSSU5HSAESHAoIYmFyX2NvcmQYDiABKAk6BENPUkRCAggBSAESJgoQYmFyX3N0cmluZ19waWVjZRgPIAEoCToGU1BJRUNFQgIIAkgBEhoKCWJhcl9ieXRlcxgQIAEoDDoFQllURVNIARJBCghiYXJfZW51bRgRIAEoDjIoLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RPbmVvZjIuTmVzdGVkRW51bToDQkFSSAESKQodYmFyX3N0cmluZ193aXRoX2VtcHR5X2RlZmF1bHQYFCABKAk6AEgBEisKG2Jhcl9jb3JkX3dpdGhfZW1wdHlfZGVmYXVsdBgVIAEoCToAQgIIAUgBEjMKI2Jhcl9zdHJpbmdfcGllY2Vfd2l0aF9lbXB0eV9kZWZhdWx0GBYgASgJOgBCAggCSAESKAocYmFyX2J5dGVzX3dpdGhfZW1wdHlfZGVmYXVsdBgXIAEoDDoASAESDwoHYmF6X2ludBgSIAEoBRIXCgpiYXpfc3RyaW5nGBMgASgJOgNCQVoaIAoIRm9vR3JvdXASCQoBYRgJIAEoBRIJCgFiGAogASgJGjMKDU5lc3RlZE1lc3NhZ2USDwoHbW9vX2ludBgBIAEoAxIRCgljb3JnZV9pbnQYAiADKAUiJwoKTmVzdGVkRW51bRIHCgNGT08QARIHCgNCQVIQAhIHCgNCQVoQA0IFCgNmb29CBQoDYmFyIowCChFUZXN0UmVxdWlyZWRPbmVvZhIRCgdmb29faW50GAEgASgFSAASFAoKZm9vX3N0cmluZxgCIAEoCUgAEkkKC2Zvb19tZXNzYWdlGAMgASgLMjIucHJvdG9idWZfdW5pdHRlc3QuVGVzdFJlcXVpcmVkT25lb2YuTmVzdGVkTWVzc2FnZUgAElIKEGZvb19sYXp5X21lc3NhZ2UYBCABKAsyMi5wcm90b2J1Zl91bml0dGVzdC5UZXN0UmVxdWlyZWRPbmVvZi5OZXN0ZWRNZXNzYWdlQgIoAUgAGigKDU5lc3RlZE1lc3NhZ2USFwoPcmVxdWlyZWRfZG91YmxlGAEgAigBQgUKA2ZvbyKqAwoPVGVzdFBhY2tlZFR5cGVzEhgKDHBhY2tlZF9pbnQzMhhaIAMoBUICEAESGAoMcGFja2VkX2ludDY0GFsgAygDQgIQARIZCg1wYWNrZWRfdWludDMyGFwgAygNQgIQARIZCg1wYWNrZWRfdWludDY0GF0gAygEQgIQARIZCg1wYWNrZWRfc2ludDMyGF4gAygRQgIQARIZCg1wYWNrZWRfc2ludDY0GF8gAygSQgIQARIaCg5wYWNrZWRfZml4ZWQzMhhgIAMoB0ICEAESGgoOcGFja2VkX2ZpeGVkNjQYYSADKAZCAhABEhsKD3BhY2tlZF9zZml4ZWQzMhhiIAMoD0ICEAESGwoPcGFja2VkX3NmaXhlZDY0GGMgAygQQgIQARIYCgxwYWNrZWRfZmxvYXQYZCADKAJCAhABEhkKDXBhY2tlZF9kb3VibGUYZSADKAFCAhABEhcKC3BhY2tlZF9ib29sGGYgAygIQgIQARI3CgtwYWNrZWRfZW51bRhnIAMoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtQgIQASLIAwoRVGVzdFVucGFja2VkVHlwZXMSGgoOdW5wYWNrZWRfaW50MzIYWiADKAVCAhAAEhoKDnVucGFja2VkX2ludDY0GFsgAygDQgIQABIbCg91bnBhY2tlZF91aW50MzIYXCADKA1CAhAAEhsKD3VucGFja2VkX3VpbnQ2NBhdIAMoBEICEAASGwoPdW5wYWNrZWRfc2ludDMyGF4gAygRQgIQABIbCg91bnBhY2tlZF9zaW50NjQYXyADKBJCAhAAEhwKEHVucGFja2VkX2ZpeGVkMzIYYCADKAdCAhAAEhwKEHVucGFja2VkX2ZpeGVkNjQYYSADKAZCAhAAEh0KEXVucGFja2VkX3NmaXhlZDMyGGIgAygPQgIQABIdChF1bnBhY2tlZF9zZml4ZWQ2NBhjIAMoEEICEAASGgoOdW5wYWNrZWRfZmxvYXQYZCADKAJCAhAAEhsKD3VucGFja2VkX2RvdWJsZRhlIAMoAUICEAASGQoNdW5wYWNrZWRfYm9vbBhmIAMoCEICEAASOQoNdW5wYWNrZWRfZW51bRhnIAMoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtQgIQACIgChRUZXN0UGFja2VkRXh0ZW5zaW9ucyoICAEQgICAgAIiIgoWVGVzdFVucGFja2VkRXh0ZW5zaW9ucyoICAEQgICAgAIimQQKFVRlc3REeW5hbWljRXh0ZW5zaW9ucxIZChBzY2FsYXJfZXh0ZW5zaW9uGNAPIAEoBxI3Cg5lbnVtX2V4dGVuc2lvbhjRDyABKA4yHi5wcm90b2J1Zl91bml0dGVzdC5Gb3JlaWduRW51bRJZChZkeW5hbWljX2VudW1fZXh0ZW5zaW9uGNIPIAEoDjI4LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3REeW5hbWljRXh0ZW5zaW9ucy5EeW5hbWljRW51bVR5cGUSPQoRbWVzc2FnZV9leHRlbnNpb24Y0w8gASgLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2USXwoZZHluYW1pY19tZXNzYWdlX2V4dGVuc2lvbhjUDyABKAsyOy5wcm90b2J1Zl91bml0dGVzdC5UZXN0RHluYW1pY0V4dGVuc2lvbnMuRHluYW1pY01lc3NhZ2VUeXBlEhsKEnJlcGVhdGVkX2V4dGVuc2lvbhjVDyADKAkSHQoQcGFja2VkX2V4dGVuc2lvbhjWDyADKBFCAhABGiwKEkR5bmFtaWNNZXNzYWdlVHlwZRIWCg1keW5hbWljX2ZpZWxkGLQQIAEoBSJHCg9EeW5hbWljRW51bVR5cGUSEAoLRFlOQU1JQ19GT08QmBESEAoLRFlOQU1JQ19CQVIQmRESEAoLRFlOQU1JQ19CQVoQmhEifAoSVGVzdFJlcGVhdGVkU3RyaW5nEhgKEHJlcGVhdGVkX3N0cmluZzEYASADKAkSGAoQcmVwZWF0ZWRfc3RyaW5nMhgCIAMoCRIYChByZXBlYXRlZF9ieXRlczExGAsgAygMEhgKEHJlcGVhdGVkX2J5dGVzMTIYDCADKAwiwAEKI1Rlc3RSZXBlYXRlZFNjYWxhckRpZmZlcmVudFRhZ1NpemVzEhgKEHJlcGVhdGVkX2ZpeGVkMzIYDCADKAcSFgoOcmVwZWF0ZWRfaW50MzIYDSADKAUSGQoQcmVwZWF0ZWRfZml4ZWQ2NBj+DyADKAYSFwoOcmVwZWF0ZWRfaW50NjQY/w8gAygDEhgKDnJlcGVhdGVkX2Zsb2F0GP7/DyADKAISGQoPcmVwZWF0ZWRfdWludDY0GP//DyADKAQikQoKEFRlc3RQYXJzaW5nTWVyZ2USOwoScmVxdWlyZWRfYWxsX3R5cGVzGAEgAigLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzEjsKEm9wdGlvbmFsX2FsbF90eXBlcxgCIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxI7ChJyZXBlYXRlZF9hbGxfdHlwZXMYAyADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSSAoNb3B0aW9uYWxncm91cBgKIAEoCjIxLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYXJzaW5nTWVyZ2UuT3B0aW9uYWxHcm91cBJICg1yZXBlYXRlZGdyb3VwGBQgAygKMjEucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhcnNpbmdNZXJnZS5SZXBlYXRlZEdyb3VwGqoEChdSZXBlYXRlZEZpZWxkc0dlbmVyYXRvchIvCgZmaWVsZDEYASADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSLwoGZmllbGQyGAIgAygLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzEi8KBmZpZWxkMxgDIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxJSCgZncm91cDEYCiADKAoyQi5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFyc2luZ01lcmdlLlJlcGVhdGVkRmllbGRzR2VuZXJhdG9yLkdyb3VwMRJSCgZncm91cDIYFCADKAoyQi5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFyc2luZ01lcmdlLlJlcGVhdGVkRmllbGRzR2VuZXJhdG9yLkdyb3VwMhIuCgRleHQxGOgHIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxIuCgRleHQyGOkHIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxo5CgZHcm91cDESLwoGZmllbGQxGAsgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzGjkKBkdyb3VwMhIvCgZmaWVsZDEYFSABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMaUgoNT3B0aW9uYWxHcm91cBJBChhvcHRpb25hbF9ncm91cF9hbGxfdHlwZXMYCyABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMaUgoNUmVwZWF0ZWRHcm91cBJBChhyZXBlYXRlZF9ncm91cF9hbGxfdHlwZXMYFSABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMqCQjoBxCAgICAAjJoCgxvcHRpb25hbF9leHQSIy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFyc2luZ01lcmdlGOgHIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlc1ILb3B0aW9uYWxFeHQyaAoMcmVwZWF0ZWRfZXh0EiMucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhcnNpbmdNZXJnZRjpByADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXNSC3JlcGVhdGVkRXh0IlIKElRlc3RNZXJnZUV4Y2VwdGlvbhI8Cg5hbGxfZXh0ZW5zaW9ucxgBIAEoCzIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zIkQKG1Rlc3RDb21tZW50SW5qZWN0aW9uTWVzc2FnZRIlCgFhGAEgASgJOhoqLyA8LSBOZWl0aGVyIHNob3VsZCB0aGlzLiJZCg9UZXN0TWVzc2FnZVNpemUSCgoCbTEYASABKAgSCgoCbTIYAiABKAMSCgoCbTMYAyABKAgSCgoCbTQYBCABKAkSCgoCbTUYBSABKAUSCgoCbTYYBiABKAMiDAoKRm9vUmVxdWVzdCINCgtGb29SZXNwb25zZSISChBGb29DbGllbnRNZXNzYWdlIhIKEEZvb1NlcnZlck1lc3NhZ2UiDAoKQmFyUmVxdWVzdCINCgtCYXJSZXNwb25zZSKmAQoMVGVzdEpzb25OYW1lEhMKC2ZpZWxkX25hbWUxGAEgASgFEhIKCmZpZWxkTmFtZTIYAiABKAUSEgoKRmllbGROYW1lMxgDIAEoBRIUCgxfZmllbGRfbmFtZTQYBCABKAUSEwoLRklFTERfTkFNRTUYBSABKAUSGgoLZmllbGRfbmFtZTYYBiABKAVSBUB0eXBlEhIKCmZpZWxkbmFtZTcYByABKAUi/QUKFFRlc3RIdWdlRmllbGROdW1iZXJzEhoKDm9wdGlvbmFsX2ludDMyGPD4//8BIAEoBRIUCghmaXhlZF8zMhjx+P//ASABKAUSHgoOcmVwZWF0ZWRfaW50MzIY8vj//wEgAygFQgIQABIcCgxwYWNrZWRfaW50MzIY8/j//wEgAygFQgIQARI5Cg1vcHRpb25hbF9lbnVtGPT4//8BIAEoDjIeLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25FbnVtEhsKD29wdGlvbmFsX3N0cmluZxj1+P//ASABKAkSGgoOb3B0aW9uYWxfYnl0ZXMY9vj//wEgASgMEj8KEG9wdGlvbmFsX21lc3NhZ2UY9/j//wEgASgLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2USUAoNb3B0aW9uYWxncm91cBj4+P//ASABKAoyNS5wcm90b2J1Zl91bml0dGVzdC5UZXN0SHVnZUZpZWxkTnVtYmVycy5PcHRpb25hbEdyb3VwElsKEXN0cmluZ19zdHJpbmdfbWFwGPr4//8BIAMoCzI8LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RIdWdlRmllbGROdW1iZXJzLlN0cmluZ1N0cmluZ01hcEVudHJ5EhoKDG9uZW9mX3VpbnQzMhj7+P//ASABKA1IABJDChRvbmVvZl90ZXN0X2FsbF90eXBlcxj8+P//ASABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXNIABIaCgxvbmVvZl9zdHJpbmcY/fj//wEgASgJSAASGQoLb25lb2ZfYnl0ZXMY/vj//wEgASgMSAAaJAoNT3B0aW9uYWxHcm91cBITCgdncm91cF9hGPn4//8BIAEoBRo2ChRTdHJpbmdTdHJpbmdNYXBFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBKgwI4Kr//wEQ8Pj//wFCDQoLb25lb2ZfZmllbGQisQEKGFRlc3RFeHRlbnNpb25JbnNpZGVUYWJsZRIOCgZmaWVsZDEYASABKAUSDgoGZmllbGQyGAIgASgFEg4KBmZpZWxkMxgDIAEoBRIOCgZmaWVsZDQYBCABKAUSDgoGZmllbGQ2GAYgASgFEg4KBmZpZWxkNxgHIAEoBRIOCgZmaWVsZDgYCCABKAUSDgoGZmllbGQ5GAkgASgFEg8KB2ZpZWxkMTAYCiABKAUqBAgFEAYilgQKHVRlc3ROZXN0ZWRHcm91cEV4dGVuc2lvbk91dGVyEmEKE2xheWVyMW9wdGlvbmFsZ3JvdXAYASABKAoyRC5wcm90b2J1Zl91bml0dGVzdC5UZXN0TmVzdGVkR3JvdXBFeHRlbnNpb25PdXRlci5MYXllcjFPcHRpb25hbEdyb3VwGpEDChNMYXllcjFPcHRpb25hbEdyb3VwEnUKE2xheWVyMnJlcGVhdGVkZ3JvdXAYAiADKAoyWC5wcm90b2J1Zl91bml0dGVzdC5UZXN0TmVzdGVkR3JvdXBFeHRlbnNpb25PdXRlci5MYXllcjFPcHRpb25hbEdyb3VwLkxheWVyMlJlcGVhdGVkR3JvdXASkwEKImxheWVyMmFub3RoZXJvcHRpb25hbHJlcGVhdGVkZ3JvdXAYBCADKAoyZy5wcm90b2J1Zl91bml0dGVzdC5UZXN0TmVzdGVkR3JvdXBFeHRlbnNpb25PdXRlci5MYXllcjFPcHRpb25hbEdyb3VwLkxheWVyMkFub3RoZXJPcHRpb25hbFJlcGVhdGVkR3JvdXAaMgoTTGF5ZXIyUmVwZWF0ZWRHcm91cBIVCg1hbm90aGVyX2ZpZWxkGAYgASgJKgQIAxAEGjkKIkxheWVyMkFub3RoZXJPcHRpb25hbFJlcGVhdGVkR3JvdXASEwoLYnV0X3doeV90aG8YBSABKAkiPAomVGVzdE5lc3RlZEdyb3VwRXh0ZW5zaW9uSW5uZXJFeHRlbnNpb24SEgoKaW5uZXJfbmFtZRgBIAEoCSL9AwobVGVzdEV4dGVuc2lvblJhbmdlU2VyaWFsaXplEg8KB2Zvb19vbmUYASABKAUSDwoHZm9vX3R3bxgGIAEoBRIRCglmb29fdGhyZWUYByABKAUSEAoIZm9vX2ZvdXIYDSABKAUqBAgCEAMqBAgDEAUqBAgJEAsqBAgPEBAqBAgREBIqBAgTEBQyRwoHYmFyX29uZRIuLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RFeHRlbnNpb25SYW5nZVNlcmlhbGl6ZRgCIAEoBVIGYmFyT25lMkcKB2Jhcl90d28SLi5wcm90b2J1Zl91bml0dGVzdC5UZXN0RXh0ZW5zaW9uUmFuZ2VTZXJpYWxpemUYBCABKAVSBmJhclR3bzJLCgliYXJfdGhyZWUSLi5wcm90b2J1Zl91bml0dGVzdC5UZXN0RXh0ZW5zaW9uUmFuZ2VTZXJpYWxpemUYCiABKAVSCGJhclRocmVlMkkKCGJhcl9mb3VyEi4ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEV4dGVuc2lvblJhbmdlU2VyaWFsaXplGA8gASgFUgdiYXJGb3VyMkkKCGJhcl9maXZlEi4ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEV4dGVuc2lvblJhbmdlU2VyaWFsaXplGBMgASgFUgdiYXJGaXZlIoEBChVUZXN0VmVyaWZ5SW50MzJTaW1wbGUSGAoQb3B0aW9uYWxfaW50MzJfMRgBIAEoBRIYChBvcHRpb25hbF9pbnQzMl8yGAIgASgFEhkKEW9wdGlvbmFsX2ludDMyXzYzGD8gASgFEhkKEW9wdGlvbmFsX2ludDMyXzY0GEAgASgFIvUBCg9UZXN0VmVyaWZ5SW50MzISGAoQb3B0aW9uYWxfaW50MzJfMRgBIAEoBRIYChBvcHRpb25hbF9pbnQzMl8yGAIgASgFEhkKEW9wdGlvbmFsX2ludDMyXzYzGD8gASgFEhkKEW9wdGlvbmFsX2ludDMyXzY0GEAgASgFEjsKEm9wdGlvbmFsX2FsbF90eXBlcxgJIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxI7ChJyZXBlYXRlZF9hbGxfdHlwZXMYCiADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMiygIKFVRlc3RWZXJpZnlNb3N0bHlJbnQzMhIZChFvcHRpb25hbF9pbnQ2NF8zMBgeIAEoAxIYChBvcHRpb25hbF9pbnQzMl8xGAEgASgFEhgKEG9wdGlvbmFsX2ludDMyXzIYAiABKAUSGAoQb3B0aW9uYWxfaW50MzJfMxgDIAEoBRIYChBvcHRpb25hbF9pbnQzMl80GAQgASgFEhkKEW9wdGlvbmFsX2ludDMyXzYzGD8gASgFEhkKEW9wdGlvbmFsX2ludDMyXzY0GEAgASgFEjsKEm9wdGlvbmFsX2FsbF90eXBlcxgJIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxI7ChJyZXBlYXRlZF9hbGxfdHlwZXMYCiADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMi9QIKI1Rlc3RWZXJpZnlNb3N0bHlJbnQzMkJpZ0ZpZWxkTnVtYmVyEhkKEW9wdGlvbmFsX2ludDY0XzMwGB4gASgDEhsKEm9wdGlvbmFsX2ludDMyXzMwMBisAiABKAUSGAoQb3B0aW9uYWxfaW50MzJfMRgBIAEoBRIYChBvcHRpb25hbF9pbnQzMl8yGAIgASgFEhgKEG9wdGlvbmFsX2ludDMyXzMYAyABKAUSGAoQb3B0aW9uYWxfaW50MzJfNBgEIAEoBRIZChFvcHRpb25hbF9pbnQzMl82Mxg/IAEoBRIZChFvcHRpb25hbF9pbnQzMl82NBhAIAEoBRI7ChJvcHRpb25hbF9hbGxfdHlwZXMYCSABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSOwoScmVwZWF0ZWRfYWxsX3R5cGVzGAogAygLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzIoYBChZUZXN0VmVyaWZ5VWludDMyU2ltcGxlEhkKEW9wdGlvbmFsX3VpbnQzMl8xGAEgASgNEhkKEW9wdGlvbmFsX3VpbnQzMl8yGAIgASgNEhoKEm9wdGlvbmFsX3VpbnQzMl82Mxg/IAEoDRIaChJvcHRpb25hbF91aW50MzJfNjQYQCABKA0i+gEKEFRlc3RWZXJpZnlVaW50MzISGQoRb3B0aW9uYWxfdWludDMyXzEYASABKA0SGQoRb3B0aW9uYWxfdWludDMyXzIYAiABKA0SGgoSb3B0aW9uYWxfdWludDMyXzYzGD8gASgNEhoKEm9wdGlvbmFsX3VpbnQzMl82NBhAIAEoDRI7ChJvcHRpb25hbF9hbGxfdHlwZXMYCSABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSOwoScmVwZWF0ZWRfYWxsX3R5cGVzGAogAygLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzIvoBChNUZXN0VmVyaWZ5T25lVWludDMyEhkKEW9wdGlvbmFsX3VpbnQzMl8xGAEgASgNEhgKEG9wdGlvbmFsX2ludDMyXzIYAiABKAUSGQoRb3B0aW9uYWxfaW50MzJfNjMYPyABKAUSGQoRb3B0aW9uYWxfaW50MzJfNjQYQCABKAUSOwoSb3B0aW9uYWxfYWxsX3R5cGVzGAkgASgLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzEjsKEnJlcGVhdGVkX2FsbF90eXBlcxgKIAMoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcyKhAgogVGVzdFZlcmlmeU9uZUludDMyQmlnRmllbGROdW1iZXISGQoRb3B0aW9uYWxfaW50MzJfNjUYQSABKAUSGAoQb3B0aW9uYWxfaW50NjRfMRgBIAEoAxIYChBvcHRpb25hbF9pbnQ2NF8yGAIgASgDEhkKEW9wdGlvbmFsX2ludDY0XzYzGD8gASgDEhkKEW9wdGlvbmFsX2ludDY0XzY0GEAgASgDEjsKEm9wdGlvbmFsX2FsbF90eXBlcxgJIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxI7ChJyZXBlYXRlZF9hbGxfdHlwZXMYCiADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMivAIKHVRlc3RWZXJpZnlJbnQzMkJpZ0ZpZWxkTnVtYmVyEhwKE29wdGlvbmFsX2ludDMyXzEwMDAY6AcgASgFEhkKEW9wdGlvbmFsX2ludDMyXzY1GEEgASgFEhgKEG9wdGlvbmFsX2ludDMyXzEYASABKAUSGAoQb3B0aW9uYWxfaW50MzJfMhgCIAEoBRIZChFvcHRpb25hbF9pbnQzMl82Mxg/IAEoBRIZChFvcHRpb25hbF9pbnQzMl82NBhAIAEoBRI7ChJvcHRpb25hbF9hbGxfdHlwZXMYCSABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMSOwoScmVwZWF0ZWRfYWxsX3R5cGVzGAogAygLMh8ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzIsMCCh5UZXN0VmVyaWZ5VWludDMyQmlnRmllbGROdW1iZXISHQoUb3B0aW9uYWxfdWludDMyXzEwMDAY6AcgASgNEhoKEm9wdGlvbmFsX3VpbnQzMl82NRhBIAEoDRIZChFvcHRpb25hbF91aW50MzJfMRgBIAEoDRIZChFvcHRpb25hbF91aW50MzJfMhgCIAEoDRIaChJvcHRpb25hbF91aW50MzJfNjMYPyABKA0SGgoSb3B0aW9uYWxfdWludDMyXzY0GEAgASgNEjsKEm9wdGlvbmFsX2FsbF90eXBlcxgJIAEoCzIfLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcxI7ChJyZXBlYXRlZF9hbGxfdHlwZXMYCiADKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMiiAQKHlRlc3RWZXJpZnlCaWdGaWVsZE51bWJlclVpbnQzMhJRCg9vcHRpb25hbF9uZXN0ZWQYASABKAsyOC5wcm90b2J1Zl91bml0dGVzdC5UZXN0VmVyaWZ5QmlnRmllbGROdW1iZXJVaW50MzIuTmVzdGVkGpIDCgZOZXN0ZWQSHQoUb3B0aW9uYWxfdWludDMyXzUwMDAYiCcgASgNEh0KFG9wdGlvbmFsX3VpbnQzMl8xMDAwGOgHIAEoDRIaChJvcHRpb25hbF91aW50MzJfNjYYQiABKA0SGgoSb3B0aW9uYWxfdWludDMyXzY1GEEgASgNEhkKEW9wdGlvbmFsX3VpbnQzMl8xGAEgASgNEhkKEW9wdGlvbmFsX3VpbnQzMl8yGAIgASgNEhoKEm9wdGlvbmFsX3VpbnQzMl82Mxg/IAEoDRIaChJvcHRpb25hbF91aW50MzJfNjQYQCABKA0SUQoPb3B0aW9uYWxfbmVzdGVkGAkgASgLMjgucHJvdG9idWZfdW5pdHRlc3QuVGVzdFZlcmlmeUJpZ0ZpZWxkTnVtYmVyVWludDMyLk5lc3RlZBJRCg9yZXBlYXRlZF9uZXN0ZWQYCiADKAsyOC5wcm90b2J1Zl91bml0dGVzdC5UZXN0VmVyaWZ5QmlnRmllbGROdW1iZXJVaW50MzIuTmVzdGVkIokjCg9FbnVtUGFyc2VUZXN0ZXISUwodb3B0aW9uYWxfc2VxX3NtYWxsXzBfbG93ZmllbGQYASABKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwwElQKHW9wdGlvbmFsX3NlcV9zbWFsbF8wX21pZGZpZWxkGOkHIAEoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDASVAocb3B0aW9uYWxfc2VxX3NtYWxsXzBfaGlmaWVsZBjBhD0gASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMBJTCh1yZXBlYXRlZF9zZXFfc21hbGxfMF9sb3dmaWVsZBgCIAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDASVAodcmVwZWF0ZWRfc2VxX3NtYWxsXzBfbWlkZmllbGQY6gcgAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMBJUChxyZXBlYXRlZF9zZXFfc21hbGxfMF9oaWZpZWxkGMKEPSADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwwElUKG3BhY2tlZF9zZXFfc21hbGxfMF9sb3dmaWVsZBgDIAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDBCAhABElYKG3BhY2tlZF9zZXFfc21hbGxfMF9taWRmaWVsZBjrByADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwwQgIQARJWChpwYWNrZWRfc2VxX3NtYWxsXzBfaGlmaWVsZBjDhD0gAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMEICEAESUwodb3B0aW9uYWxfc2VxX3NtYWxsXzFfbG93ZmllbGQYBCABKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwxElQKHW9wdGlvbmFsX3NlcV9zbWFsbF8xX21pZGZpZWxkGOwHIAEoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDESVAocb3B0aW9uYWxfc2VxX3NtYWxsXzFfaGlmaWVsZBjEhD0gASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMRJTCh1yZXBlYXRlZF9zZXFfc21hbGxfMV9sb3dmaWVsZBgFIAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDESVAodcmVwZWF0ZWRfc2VxX3NtYWxsXzFfbWlkZmllbGQY7QcgAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMRJUChxyZXBlYXRlZF9zZXFfc21hbGxfMV9oaWZpZWxkGMWEPSADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwxElUKG3BhY2tlZF9zZXFfc21hbGxfMV9sb3dmaWVsZBgGIAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFTbWFsbDFCAhABElYKG3BhY2tlZF9zZXFfc21hbGxfMV9taWRmaWVsZBjuByADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxU21hbGwxQgIQARJWChpwYWNrZWRfc2VxX3NtYWxsXzFfaGlmaWVsZBjGhD0gAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcVNtYWxsMUICEAESUAobb3B0aW9uYWxfc2VxX2xhcmdlX2xvd2ZpZWxkGAcgASgOMisucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcUxhcmdlElEKG29wdGlvbmFsX3NlcV9sYXJnZV9taWRmaWVsZBjvByABKA4yKy5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxTGFyZ2USUQoab3B0aW9uYWxfc2VxX2xhcmdlX2hpZmllbGQYx4Q9IAEoDjIrLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFMYXJnZRJQChtyZXBlYXRlZF9zZXFfbGFyZ2VfbG93ZmllbGQYCCADKA4yKy5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxTGFyZ2USUQobcmVwZWF0ZWRfc2VxX2xhcmdlX21pZGZpZWxkGPAHIAMoDjIrLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFMYXJnZRJRChpyZXBlYXRlZF9zZXFfbGFyZ2VfaGlmaWVsZBjIhD0gAygOMisucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcUxhcmdlElIKGXBhY2tlZF9zZXFfbGFyZ2VfbG93ZmllbGQYCSADKA4yKy5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuU2VxTGFyZ2VCAhABElMKGXBhY2tlZF9zZXFfbGFyZ2VfbWlkZmllbGQY8QcgAygOMisucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLlNlcUxhcmdlQgIQARJTChhwYWNrZWRfc2VxX2xhcmdlX2hpZmllbGQYyYQ9IAMoDjIrLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5TZXFMYXJnZUICEAESUQobb3B0aW9uYWxfYXJiaXRyYXJ5X2xvd2ZpZWxkGAogASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeRJSChtvcHRpb25hbF9hcmJpdHJhcnlfbWlkZmllbGQY8gcgASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeRJSChpvcHRpb25hbF9hcmJpdHJhcnlfaGlmaWVsZBjKhD0gASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeRJRChtyZXBlYXRlZF9hcmJpdHJhcnlfbG93ZmllbGQYCyADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuQXJiaXRyYXJ5ElIKG3JlcGVhdGVkX2FyYml0cmFyeV9taWRmaWVsZBjzByADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuQXJiaXRyYXJ5ElIKGnJlcGVhdGVkX2FyYml0cmFyeV9oaWZpZWxkGMuEPSADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuQXJiaXRyYXJ5ElMKGXBhY2tlZF9hcmJpdHJhcnlfbG93ZmllbGQYDCADKA4yLC5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIuQXJiaXRyYXJ5QgIQARJUChlwYWNrZWRfYXJiaXRyYXJ5X21pZGZpZWxkGPQHIAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5BcmJpdHJhcnlCAhABElQKGHBhY2tlZF9hcmJpdHJhcnlfaGlmaWVsZBjMhD0gAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeUICEAESEwoLb3RoZXJfZmllbGQYYyABKAUiSgoJU2VxU21hbGwwEhcKE1NFUV9TTUFMTF8wX0RFRkFVTFQQABIRCg1TRVFfU01BTExfMF8xEAESEQoNU0VRX1NNQUxMXzBfMhACIkoKCVNlcVNtYWxsMRIXChNTRVFfU01BTExfMV9ERUZBVUxUEAESEQoNU0VRX1NNQUxMXzFfMhACEhEKDVNFUV9TTUFMTF8xXzMQAyKEBQoIU2VxTGFyZ2USHgoRU0VRX0xBUkdFX0RFRkFVTFQQ////////////ARIPCgtTRVFfTEFSR0VfMBAAEg8KC1NFUV9MQVJHRV8xEAESDwoLU0VRX0xBUkdFXzIQAhIPCgtTRVFfTEFSR0VfMxADEg8KC1NFUV9MQVJHRV80EAQSDwoLU0VRX0xBUkdFXzUQBRIPCgtTRVFfTEFSR0VfNhAGEg8KC1NFUV9MQVJHRV83EAcSDwoLU0VRX0xBUkdFXzgQCBIPCgtTRVFfTEFSR0VfORAJEhAKDFNFUV9MQVJHRV8xMBAKEhAKDFNFUV9MQVJHRV8xMRALEhAKDFNFUV9MQVJHRV8xMhAMEhAKDFNFUV9MQVJHRV8xMxANEhAKDFNFUV9MQVJHRV8xNBAOEhAKDFNFUV9MQVJHRV8xNRAPEhAKDFNFUV9MQVJHRV8xNhAQEhAKDFNFUV9MQVJHRV8xNxAREhAKDFNFUV9MQVJHRV8xOBASEhAKDFNFUV9MQVJHRV8xORATEhAKDFNFUV9MQVJHRV8yMBAUEhAKDFNFUV9MQVJHRV8yMRAVEhAKDFNFUV9MQVJHRV8yMhAWEhAKDFNFUV9MQVJHRV8yMxAXEhAKDFNFUV9MQVJHRV8yNBAYEhAKDFNFUV9MQVJHRV8yNRAZEhAKDFNFUV9MQVJHRV8yNhAaEhAKDFNFUV9MQVJHRV8yNxAbEhAKDFNFUV9MQVJHRV8yOBAcEhAKDFNFUV9MQVJHRV8yORAdEhAKDFNFUV9MQVJHRV8zMBAeEhAKDFNFUV9MQVJHRV8zMRAfEhAKDFNFUV9MQVJHRV8zMhAgEhAKDFNFUV9MQVJHRV8zMxAhIp0BCglBcmJpdHJhcnkSHgoRQVJCSVRSQVJZX0RFRkFVTFQQjb74////////ARIYCgtBUkJJVFJBUllfMRCF//////////8BEhAKC0FSQklUUkFSWV8yENUBEhEKC0FSQklUUkFSWV8zEN2BDRIaCg1BUkJJVFJBUllfTUlOEICAgID4/////wESFQoNQVJCSVRSQVJZX01BWBD/////ByoKCICJehCAgICAAjKIAQoWb3B0aW9uYWxfYXJiaXRyYXJ5X2V4dBIiLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3RlchiAiXogASgOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeVIUb3B0aW9uYWxBcmJpdHJhcnlFeHQyiAEKFnJlcGVhdGVkX2FyYml0cmFyeV9leHQSIi5wcm90b2J1Zl91bml0dGVzdC5FbnVtUGFyc2VUZXN0ZXIYgYl6IAMoDjIsLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3Rlci5BcmJpdHJhcnlSFHJlcGVhdGVkQXJiaXRyYXJ5RXh0MogBChRwYWNrZWRfYXJiaXRyYXJ5X2V4dBIiLnByb3RvYnVmX3VuaXR0ZXN0LkVudW1QYXJzZVRlc3RlchiCiXogAygOMiwucHJvdG9idWZfdW5pdHRlc3QuRW51bVBhcnNlVGVzdGVyLkFyYml0cmFyeUICEAFSEnBhY2tlZEFyYml0cmFyeUV4dCLUBAoPQm9vbFBhcnNlVGVzdGVyEh4KFm9wdGlvbmFsX2Jvb2xfbG93ZmllbGQYASABKAgSHwoWb3B0aW9uYWxfYm9vbF9taWRmaWVsZBjpByABKAgSHwoVb3B0aW9uYWxfYm9vbF9oaWZpZWxkGMGEPSABKAgSHgoWcmVwZWF0ZWRfYm9vbF9sb3dmaWVsZBgCIAMoCBIfChZyZXBlYXRlZF9ib29sX21pZGZpZWxkGOoHIAMoCBIfChVyZXBlYXRlZF9ib29sX2hpZmllbGQYwoQ9IAMoCBIgChRwYWNrZWRfYm9vbF9sb3dmaWVsZBgDIAMoCEICEAESIQoUcGFja2VkX2Jvb2xfbWlkZmllbGQY6wcgAygIQgIQARIhChNwYWNrZWRfYm9vbF9oaWZpZWxkGMOEPSADKAhCAhABEhMKC290aGVyX2ZpZWxkGGMgASgFKgoIgIl6EICAgIACMlAKEW9wdGlvbmFsX2Jvb2xfZXh0EiIucHJvdG9idWZfdW5pdHRlc3QuQm9vbFBhcnNlVGVzdGVyGICJeiABKAhSD29wdGlvbmFsQm9vbEV4dDJQChFyZXBlYXRlZF9ib29sX2V4dBIiLnByb3RvYnVmX3VuaXR0ZXN0LkJvb2xQYXJzZVRlc3RlchiBiXogAygIUg9yZXBlYXRlZEJvb2xFeHQyUAoPcGFja2VkX2Jvb2xfZXh0EiIucHJvdG9idWZfdW5pdHRlc3QuQm9vbFBhcnNlVGVzdGVyGIKJeiADKAhCAhABUg1wYWNrZWRCb29sRXh0IucEChBJbnQzMlBhcnNlVGVzdGVyEh8KF29wdGlvbmFsX2ludDMyX2xvd2ZpZWxkGAEgASgFEiAKF29wdGlvbmFsX2ludDMyX21pZGZpZWxkGOkHIAEoBRIgChZvcHRpb25hbF9pbnQzMl9oaWZpZWxkGMGEPSABKAUSHwoXcmVwZWF0ZWRfaW50MzJfbG93ZmllbGQYAiADKAUSIAoXcmVwZWF0ZWRfaW50MzJfbWlkZmllbGQY6gcgAygFEiAKFnJlcGVhdGVkX2ludDMyX2hpZmllbGQYwoQ9IAMoBRIhChVwYWNrZWRfaW50MzJfbG93ZmllbGQYAyADKAVCAhABEiIKFXBhY2tlZF9pbnQzMl9taWRmaWVsZBjrByADKAVCAhABEiIKFHBhY2tlZF9pbnQzMl9oaWZpZWxkGMOEPSADKAVCAhABEhMKC290aGVyX2ZpZWxkGGMgASgFKgoIgIl6EICAgIACMlMKEm9wdGlvbmFsX2ludDMyX2V4dBIjLnByb3RvYnVmX3VuaXR0ZXN0LkludDMyUGFyc2VUZXN0ZXIYgIl6IAEoBVIQb3B0aW9uYWxJbnQzMkV4dDJTChJyZXBlYXRlZF9pbnQzMl9leHQSIy5wcm90b2J1Zl91bml0dGVzdC5JbnQzMlBhcnNlVGVzdGVyGIGJeiADKAVSEHJlcGVhdGVkSW50MzJFeHQyUwoQcGFja2VkX2ludDMyX2V4dBIjLnByb3RvYnVmX3VuaXR0ZXN0LkludDMyUGFyc2VUZXN0ZXIYgol6IAMoBUICEAFSDnBhY2tlZEludDMyRXh0IucEChBJbnQ2NFBhcnNlVGVzdGVyEh8KF29wdGlvbmFsX2ludDY0X2xvd2ZpZWxkGAEgASgDEiAKF29wdGlvbmFsX2ludDY0X21pZGZpZWxkGOkHIAEoAxIgChZvcHRpb25hbF9pbnQ2NF9oaWZpZWxkGMGEPSABKAMSHwoXcmVwZWF0ZWRfaW50NjRfbG93ZmllbGQYAiADKAMSIAoXcmVwZWF0ZWRfaW50NjRfbWlkZmllbGQY6gcgAygDEiAKFnJlcGVhdGVkX2ludDY0X2hpZmllbGQYwoQ9IAMoAxIhChVwYWNrZWRfaW50NjRfbG93ZmllbGQYAyADKANCAhABEiIKFXBhY2tlZF9pbnQ2NF9taWRmaWVsZBjrByADKANCAhABEiIKFHBhY2tlZF9pbnQ2NF9oaWZpZWxkGMOEPSADKANCAhABEhMKC290aGVyX2ZpZWxkGGMgASgFKgoIgIl6EICAgIACMlMKEm9wdGlvbmFsX2ludDY0X2V4dBIjLnByb3RvYnVmX3VuaXR0ZXN0LkludDY0UGFyc2VUZXN0ZXIYgIl6IAEoA1IQb3B0aW9uYWxJbnQ2NEV4dDJTChJyZXBlYXRlZF9pbnQ2NF9leHQSIy5wcm90b2J1Zl91bml0dGVzdC5JbnQ2NFBhcnNlVGVzdGVyGIGJeiADKANSEHJlcGVhdGVkSW50NjRFeHQyUwoQcGFja2VkX2ludDY0X2V4dBIjLnByb3RvYnVmX3VuaXR0ZXN0LkludDY0UGFyc2VUZXN0ZXIYgol6IAMoA0ICEAFSDnBhY2tlZEludDY0RXh0IowBCh9JbmxpbmVkU3RyaW5nSWR4UmVncmVzc2lvblByb3RvEgwKBHN0cjEYASABKAkSPwoDc3ViGAIgASgLMjIucHJvdG9idWZfdW5pdHRlc3QuSW5saW5lZFN0cmluZ0lkeFJlZ3Jlc3Npb25Qcm90bxIMCgRzdHIyGAMgASgJEgwKBHN0cjMYBCABKAwinwMKEVN0cmluZ1BhcnNlVGVzdGVyEiAKGG9wdGlvbmFsX3N0cmluZ19sb3dmaWVsZBgBIAEoCRIhChhvcHRpb25hbF9zdHJpbmdfbWlkZmllbGQY6QcgASgJEiEKF29wdGlvbmFsX3N0cmluZ19oaWZpZWxkGMGEPSABKAkSIAoYcmVwZWF0ZWRfc3RyaW5nX2xvd2ZpZWxkGAIgAygJEiEKGHJlcGVhdGVkX3N0cmluZ19taWRmaWVsZBjqByADKAkSIQoXcmVwZWF0ZWRfc3RyaW5nX2hpZmllbGQYwoQ9IAMoCSoKCICJehCAgICAAjJWChNvcHRpb25hbF9zdHJpbmdfZXh0EiQucHJvdG9idWZfdW5pdHRlc3QuU3RyaW5nUGFyc2VUZXN0ZXIYgIl6IAEoCVIRb3B0aW9uYWxTdHJpbmdFeHQyVgoTcmVwZWF0ZWRfc3RyaW5nX2V4dBIkLnByb3RvYnVmX3VuaXR0ZXN0LlN0cmluZ1BhcnNlVGVzdGVyGIGJeiADKAlSEXJlcGVhdGVkU3RyaW5nRXh0IjMKDUJhZEZpZWxkTmFtZXMSFQoNT3B0aW9uYWxJbnQzMhgBIAEoBRILCgNmb3IYAiABKAUidQoaVGVzdE5lc3RlZE1lc3NhZ2VSZWRhY3Rpb24SKQohb3B0aW9uYWxfdW5yZWRhY3RlZF9uZXN0ZWRfc3RyaW5nGAEgASgJEiwKH29wdGlvbmFsX3JlZGFjdGVkX25lc3RlZF9zdHJpbmcYAiABKAlCA4ABASKpBgoOUmVkYWN0ZWRGaWVsZHMSJQoYb3B0aW9uYWxfcmVkYWN0ZWRfc3RyaW5nGAEgASgJQgOAAQESIgoab3B0aW9uYWxfdW5yZWRhY3RlZF9zdHJpbmcYAiABKAkSJQoYcmVwZWF0ZWRfcmVkYWN0ZWRfc3RyaW5nGAMgAygJQgOAAQESIgoacmVwZWF0ZWRfdW5yZWRhY3RlZF9zdHJpbmcYBCADKAkSVQoZb3B0aW9uYWxfcmVkYWN0ZWRfbWVzc2FnZRgFIAEoCzItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3ROZXN0ZWRNZXNzYWdlUmVkYWN0aW9uQgOAAQESUgobb3B0aW9uYWxfdW5yZWRhY3RlZF9tZXNzYWdlGAYgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZE1lc3NhZ2VSZWRhY3Rpb24SVQoZcmVwZWF0ZWRfcmVkYWN0ZWRfbWVzc2FnZRgHIAMoCzItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3ROZXN0ZWRNZXNzYWdlUmVkYWN0aW9uQgOAAQESUgobcmVwZWF0ZWRfdW5yZWRhY3RlZF9tZXNzYWdlGAggAygLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZE1lc3NhZ2VSZWRhY3Rpb24SWgoTbWFwX3JlZGFjdGVkX3N0cmluZxgJIAMoCzI4LnByb3RvYnVmX3VuaXR0ZXN0LlJlZGFjdGVkRmllbGRzLk1hcFJlZGFjdGVkU3RyaW5nRW50cnlCA4ABARJZChVtYXBfdW5yZWRhY3RlZF9zdHJpbmcYCiADKAsyOi5wcm90b2J1Zl91bml0dGVzdC5SZWRhY3RlZEZpZWxkcy5NYXBVbnJlZGFjdGVkU3RyaW5nRW50cnkaOAoWTWFwUmVkYWN0ZWRTdHJpbmdFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGjoKGE1hcFVucmVkYWN0ZWRTdHJpbmdFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlsKCFRlc3RDb3JkEh8KE29wdGlvbmFsX2J5dGVzX2NvcmQYASABKAxCAggBEi4KG29wdGlvbmFsX2J5dGVzX2NvcmRfZGVmYXVsdBgCIAEoDDoFaGVsbG9CAggBIp4BChhUZXN0UGFja2VkRW51bVNtYWxsUmFuZ2USSAoEdmFscxgBIAMoDjI2LnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRFbnVtU21hbGxSYW5nZS5OZXN0ZWRFbnVtQgIQASI4CgpOZXN0ZWRFbnVtEg8KC1VOU1BFQ0lGSUVEEAASBwoDRk9PEAESBwoDQkFSEAISBwoDQkFaEAMimQQKEUVudW1zRm9yQmVuY2htYXJrIowBCgRGbGF0EgYKAkEwEAASBgoCQTEQARIGCgJBMhACEgYKAkEzEAMSBgoCQTQQBBIGCgJBNRAFEgYKAkE2EAYSBgoCQTcQBxIGCgJBOBAIEgYKAkE5EAkSBwoDQTEwEAoSBwoDQTExEAsSBwoDQTEyEAwSBwoDQTEzEA0SBwoDQTE0EA4SBwoDQTE1EA8ikwEKCkFsbW9zdEZsYXQSBgoCQjAQABIGCgJCMRABEgYKAkIyEAISBgoCQjMQAxIGCgJCNRAFEgYKAkI2EAYSBgoCQjcQBxIGCgJCOBAIEgYKAkI5EAkSBwoDQjExEAsSBwoDQjEyEAwSBwoDQjEzEA0SBwoDQjE0EA4SBwoDQjE1EA8SBwoDQjE3EBESBwoDQjE5EBMi3gEKBlNwYXJzZRIJCgRDNTM2EJgEEgoKBUM4Mzg3EMNBEgoKBUM5NjczEMlLEgsKBkMxMDI4NRCtUBILCgZDMTMzMTgQhmgSCwoGQzE1OTYzENt8EgwKBkMxNjQzORC3gAESDAoGQzE4MTk3EJWOARIMCgZDMTk0MzAQ5pcBEgwKBkMyMDM2MRCJnwESDAoGQzIwNzA2EOKhARIMCgZDMjEwNTAQuqQBEgwKBkMyMTkwNhCSqwESDAoGQzI3MjY1EIHVARIMCgZDMzAxMDkQnesBEgwKBkMzMTY3MBC29wEinQcKJFRlc3RNZXNzYWdlV2l0aE1hbnlSZXBlYXRlZFB0ckZpZWxkcxIZChFyZXBlYXRlZF9zdHJpbmdfMRgBIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfMhgCIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfMxgDIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfNBgEIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfNRgFIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfNhgGIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfNxgHIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfOBgIIAMoCRIZChFyZXBlYXRlZF9zdHJpbmdfORgJIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMTAYCiADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzExGAsgAygJEhoKEnJlcGVhdGVkX3N0cmluZ18xMhgMIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMTMYDSADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzE0GA4gAygJEhoKEnJlcGVhdGVkX3N0cmluZ18xNRgPIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMTYYECADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzE3GBEgAygJEhoKEnJlcGVhdGVkX3N0cmluZ18xOBgSIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMTkYEyADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzIwGBQgAygJEhoKEnJlcGVhdGVkX3N0cmluZ18yMRgVIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMjIYFiADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzIzGBcgAygJEhoKEnJlcGVhdGVkX3N0cmluZ18yNBgYIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMjUYGSADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzI2GBogAygJEhoKEnJlcGVhdGVkX3N0cmluZ18yNxgbIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMjgYHCADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzI5GB0gAygJEhoKEnJlcGVhdGVkX3N0cmluZ18zMBgeIAMoCRIaChJyZXBlYXRlZF9zdHJpbmdfMzEYHyADKAkSGgoScmVwZWF0ZWRfc3RyaW5nXzMyGCAgAygJKlEKC0ZvcmVpZ25FbnVtEg8KC0ZPUkVJR05fRk9PEAQSDwoLRk9SRUlHTl9CQVIQBRIPCgtGT1JFSUdOX0JBWhAGEg8KC0ZPUkVJR05fQkFYECAqQQoWVGVzdFJlc2VydmVkRW51bUZpZWxkcxILCgdVTktOT1dOEAAiBAgCEAIiBAgPEA8iBAgJEAsqA2JhcioDYmF6KksKFFRlc3RFbnVtV2l0aER1cFZhbHVlEggKBEZPTzEQARIICgRCQVIxEAISBwoDQkFaEAMSCAoERk9PMhABEggKBEJBUjIQAhoCEAEqiQEKDlRlc3RTcGFyc2VFbnVtEgwKCFNQQVJTRV9BEHsSDgoIU1BBUlNFX0IQpucDEg8KCFNQQVJTRV9DELKxgAYSFQoIU1BBUlNFX0QQ8f//////////ARIVCghTUEFSU0VfRRC03vz///////8BEgwKCFNQQVJTRV9GEAASDAoIU1BBUlNFX0cQAiqLDwoNVmVyeUxhcmdlRW51bRIWChJFTlVNX0xBQkVMX0RFRkFVTFQQABIQCgxFTlVNX0xBQkVMXzEQARIQCgxFTlVNX0xBQkVMXzIQAhIQCgxFTlVNX0xBQkVMXzMQAxIQCgxFTlVNX0xBQkVMXzQQBBIQCgxFTlVNX0xBQkVMXzUQBRIQCgxFTlVNX0xBQkVMXzYQBhIQCgxFTlVNX0xBQkVMXzcQBxIQCgxFTlVNX0xBQkVMXzgQCBIQCgxFTlVNX0xBQkVMXzkQCRIRCg1FTlVNX0xBQkVMXzEwEAoSEQoNRU5VTV9MQUJFTF8xMRALEhEKDUVOVU1fTEFCRUxfMTIQDBIRCg1FTlVNX0xBQkVMXzEzEA0SEQoNRU5VTV9MQUJFTF8xNBAOEhEKDUVOVU1fTEFCRUxfMTUQDxIRCg1FTlVNX0xBQkVMXzE2EBASEQoNRU5VTV9MQUJFTF8xNxAREhEKDUVOVU1fTEFCRUxfMTgQEhIRCg1FTlVNX0xBQkVMXzE5EBMSEQoNRU5VTV9MQUJFTF8yMBAUEhEKDUVOVU1fTEFCRUxfMjEQFRIRCg1FTlVNX0xBQkVMXzIyEBYSEQoNRU5VTV9MQUJFTF8yMxAXEhEKDUVOVU1fTEFCRUxfMjQQGBIRCg1FTlVNX0xBQkVMXzI1EBkSEQoNRU5VTV9MQUJFTF8yNhAaEhEKDUVOVU1fTEFCRUxfMjcQGxIRCg1FTlVNX0xBQkVMXzI4EBwSEQoNRU5VTV9MQUJFTF8yORAdEhEKDUVOVU1fTEFCRUxfMzAQHhIRCg1FTlVNX0xBQkVMXzMxEB8SEQoNRU5VTV9MQUJFTF8zMhAgEhEKDUVOVU1fTEFCRUxfMzMQIRIRCg1FTlVNX0xBQkVMXzM0ECISEQoNRU5VTV9MQUJFTF8zNRAjEhEKDUVOVU1fTEFCRUxfMzYQJBIRCg1FTlVNX0xBQkVMXzM3ECUSEQoNRU5VTV9MQUJFTF8zOBAmEhEKDUVOVU1fTEFCRUxfMzkQJxIRCg1FTlVNX0xBQkVMXzQwECgSEQoNRU5VTV9MQUJFTF80MRApEhEKDUVOVU1fTEFCRUxfNDIQKhIRCg1FTlVNX0xBQkVMXzQzECsSEQoNRU5VTV9MQUJFTF80NBAsEhEKDUVOVU1fTEFCRUxfNDUQLRIRCg1FTlVNX0xBQkVMXzQ2EC4SEQoNRU5VTV9MQUJFTF80NxAvEhEKDUVOVU1fTEFCRUxfNDgQMBIRCg1FTlVNX0xBQkVMXzQ5EDESEQoNRU5VTV9MQUJFTF81MBAyEhEKDUVOVU1fTEFCRUxfNTEQMxIRCg1FTlVNX0xBQkVMXzUyEDQSEQoNRU5VTV9MQUJFTF81MxA1EhEKDUVOVU1fTEFCRUxfNTQQNhIRCg1FTlVNX0xBQkVMXzU1EDcSEQoNRU5VTV9MQUJFTF81NhA4EhEKDUVOVU1fTEFCRUxfNTcQORIRCg1FTlVNX0xBQkVMXzU4EDoSEQoNRU5VTV9MQUJFTF81ORA7EhEKDUVOVU1fTEFCRUxfNjAQPBIRCg1FTlVNX0xBQkVMXzYxED0SEQoNRU5VTV9MQUJFTF82MhA+EhEKDUVOVU1fTEFCRUxfNjMQPxIRCg1FTlVNX0xBQkVMXzY0EEASEQoNRU5VTV9MQUJFTF82NRBBEhEKDUVOVU1fTEFCRUxfNjYQQhIRCg1FTlVNX0xBQkVMXzY3EEMSEQoNRU5VTV9MQUJFTF82OBBEEhEKDUVOVU1fTEFCRUxfNjkQRRIRCg1FTlVNX0xBQkVMXzcwEEYSEQoNRU5VTV9MQUJFTF83MRBHEhEKDUVOVU1fTEFCRUxfNzIQSBIRCg1FTlVNX0xBQkVMXzczEEkSEQoNRU5VTV9MQUJFTF83NBBKEhEKDUVOVU1fTEFCRUxfNzUQSxIRCg1FTlVNX0xBQkVMXzc2EEwSEQoNRU5VTV9MQUJFTF83NxBNEhEKDUVOVU1fTEFCRUxfNzgQThIRCg1FTlVNX0xBQkVMXzc5EE8SEQoNRU5VTV9MQUJFTF84MBBQEhEKDUVOVU1fTEFCRUxfODEQURIRCg1FTlVNX0xBQkVMXzgyEFISEQoNRU5VTV9MQUJFTF84MxBTEhEKDUVOVU1fTEFCRUxfODQQVBIRCg1FTlVNX0xBQkVMXzg1EFUSEQoNRU5VTV9MQUJFTF84NhBWEhEKDUVOVU1fTEFCRUxfODcQVxIRCg1FTlVNX0xBQkVMXzg4EFgSEQoNRU5VTV9MQUJFTF84ORBZEhEKDUVOVU1fTEFCRUxfOTAQWhIRCg1FTlVNX0xBQkVMXzkxEFsSEQoNRU5VTV9MQUJFTF85MhBcEhEKDUVOVU1fTEFCRUxfOTMQXRIRCg1FTlVNX0xBQkVMXzk0EF4SEQoNRU5VTV9MQUJFTF85NRBfEhEKDUVOVU1fTEFCRUxfOTYQYBIRCg1FTlVNX0xBQkVMXzk3EGESEQoNRU5VTV9MQUJFTF85OBBiEhEKDUVOVU1fTEFCRUxfOTkQYxISCg5FTlVNX0xBQkVMXzEwMBBkMpkBCgtUZXN0U2VydmljZRJECgNGb28SHS5wcm90b2J1Zl91bml0dGVzdC5Gb29SZXF1ZXN0Gh4ucHJvdG9idWZfdW5pdHRlc3QuRm9vUmVzcG9uc2USRAoDQmFyEh0ucHJvdG9idWZfdW5pdHRlc3QuQmFyUmVxdWVzdBoeLnByb3RvYnVmX3VuaXR0ZXN0LkJhclJlc3BvbnNlOl4KGG9wdGlvbmFsX2ludDMyX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGAEgASgFUhZvcHRpb25hbEludDMyRXh0ZW5zaW9uOl4KGG9wdGlvbmFsX2ludDY0X2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGAIgASgDUhZvcHRpb25hbEludDY0RXh0ZW5zaW9uOmAKGW9wdGlvbmFsX3VpbnQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgDIAEoDVIXb3B0aW9uYWxVaW50MzJFeHRlbnNpb246YAoZb3B0aW9uYWxfdWludDY0X2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGAQgASgEUhdvcHRpb25hbFVpbnQ2NEV4dGVuc2lvbjpgChlvcHRpb25hbF9zaW50MzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYBSABKBFSF29wdGlvbmFsU2ludDMyRXh0ZW5zaW9uOmAKGW9wdGlvbmFsX3NpbnQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgGIAEoElIXb3B0aW9uYWxTaW50NjRFeHRlbnNpb246Ygoab3B0aW9uYWxfZml4ZWQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgHIAEoB1IYb3B0aW9uYWxGaXhlZDMyRXh0ZW5zaW9uOmIKGm9wdGlvbmFsX2ZpeGVkNjRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYCCABKAZSGG9wdGlvbmFsRml4ZWQ2NEV4dGVuc2lvbjpkChtvcHRpb25hbF9zZml4ZWQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgJIAEoD1IZb3B0aW9uYWxTZml4ZWQzMkV4dGVuc2lvbjpkChtvcHRpb25hbF9zZml4ZWQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgKIAEoEFIZb3B0aW9uYWxTZml4ZWQ2NEV4dGVuc2lvbjpeChhvcHRpb25hbF9mbG9hdF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgLIAEoAlIWb3B0aW9uYWxGbG9hdEV4dGVuc2lvbjpgChlvcHRpb25hbF9kb3VibGVfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYDCABKAFSF29wdGlvbmFsRG91YmxlRXh0ZW5zaW9uOlwKF29wdGlvbmFsX2Jvb2xfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYDSABKAhSFW9wdGlvbmFsQm9vbEV4dGVuc2lvbjpgChlvcHRpb25hbF9zdHJpbmdfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYDiABKAlSF29wdGlvbmFsU3RyaW5nRXh0ZW5zaW9uOl4KGG9wdGlvbmFsX2J5dGVzX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGA8gASgMUhZvcHRpb25hbEJ5dGVzRXh0ZW5zaW9uOokBChdvcHRpb25hbGdyb3VwX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGBAgASgKMioucHJvdG9idWZfdW5pdHRlc3QuT3B0aW9uYWxHcm91cF9leHRlbnNpb25SFm9wdGlvbmFsZ3JvdXBFeHRlbnNpb246ngEKIW9wdGlvbmFsX25lc3RlZF9tZXNzYWdlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGBIgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2VSHm9wdGlvbmFsTmVzdGVkTWVzc2FnZUV4dGVuc2lvbjqUAQoib3B0aW9uYWxfZm9yZWlnbl9tZXNzYWdlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGBMgASgLMiEucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbk1lc3NhZ2VSH29wdGlvbmFsRm9yZWlnbk1lc3NhZ2VFeHRlbnNpb246mAEKIW9wdGlvbmFsX2ltcG9ydF9tZXNzYWdlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGBQgASgLMicucHJvdG9idWZfdW5pdHRlc3RfaW1wb3J0LkltcG9ydE1lc3NhZ2VSHm9wdGlvbmFsSW1wb3J0TWVzc2FnZUV4dGVuc2lvbjqVAQoeb3B0aW9uYWxfbmVzdGVkX2VudW1fZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYFSABKA4yKi5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkRW51bVIbb3B0aW9uYWxOZXN0ZWRFbnVtRXh0ZW5zaW9uOosBCh9vcHRpb25hbF9mb3JlaWduX2VudW1fZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYFiABKA4yHi5wcm90b2J1Zl91bml0dGVzdC5Gb3JlaWduRW51bVIcb3B0aW9uYWxGb3JlaWduRW51bUV4dGVuc2lvbjqPAQoeb3B0aW9uYWxfaW1wb3J0X2VudW1fZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYFyABKA4yJC5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuSW1wb3J0RW51bVIbb3B0aW9uYWxJbXBvcnRFbnVtRXh0ZW5zaW9uOm8KH29wdGlvbmFsX3N0cmluZ19waWVjZV9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgYIAEoCUICCAJSHG9wdGlvbmFsU3RyaW5nUGllY2VFeHRlbnNpb246XAoXb3B0aW9uYWxfY29yZF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgZIAEoCVIVb3B0aW9uYWxDb3JkRXh0ZW5zaW9uOqsBCihvcHRpb25hbF9wdWJsaWNfaW1wb3J0X21lc3NhZ2VfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYGiABKAsyLS5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuUHVibGljSW1wb3J0TWVzc2FnZVIkb3B0aW9uYWxQdWJsaWNJbXBvcnRNZXNzYWdlRXh0ZW5zaW9uOp4BCh9vcHRpb25hbF9sYXp5X21lc3NhZ2VfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYGyABKAsyLS5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkTWVzc2FnZUICKAFSHG9wdGlvbmFsTGF6eU1lc3NhZ2VFeHRlbnNpb246swEKKm9wdGlvbmFsX3VudmVyaWZpZWRfbGF6eV9tZXNzYWdlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGBwgASgLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2VCAngBUiZvcHRpb25hbFVudmVyaWZpZWRMYXp5TWVzc2FnZUV4dGVuc2lvbjpeChhyZXBlYXRlZF9pbnQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgfIAMoBVIWcmVwZWF0ZWRJbnQzMkV4dGVuc2lvbjpeChhyZXBlYXRlZF9pbnQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxggIAMoA1IWcmVwZWF0ZWRJbnQ2NEV4dGVuc2lvbjpgChlyZXBlYXRlZF91aW50MzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYISADKA1SF3JlcGVhdGVkVWludDMyRXh0ZW5zaW9uOmAKGXJlcGVhdGVkX3VpbnQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgiIAMoBFIXcmVwZWF0ZWRVaW50NjRFeHRlbnNpb246YAoZcmVwZWF0ZWRfc2ludDMyX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGCMgAygRUhdyZXBlYXRlZFNpbnQzMkV4dGVuc2lvbjpgChlyZXBlYXRlZF9zaW50NjRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYJCADKBJSF3JlcGVhdGVkU2ludDY0RXh0ZW5zaW9uOmIKGnJlcGVhdGVkX2ZpeGVkMzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYJSADKAdSGHJlcGVhdGVkRml4ZWQzMkV4dGVuc2lvbjpiChpyZXBlYXRlZF9maXhlZDY0X2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGCYgAygGUhhyZXBlYXRlZEZpeGVkNjRFeHRlbnNpb246ZAobcmVwZWF0ZWRfc2ZpeGVkMzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYJyADKA9SGXJlcGVhdGVkU2ZpeGVkMzJFeHRlbnNpb246ZAobcmVwZWF0ZWRfc2ZpeGVkNjRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYKCADKBBSGXJlcGVhdGVkU2ZpeGVkNjRFeHRlbnNpb246XgoYcmVwZWF0ZWRfZmxvYXRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYKSADKAJSFnJlcGVhdGVkRmxvYXRFeHRlbnNpb246YAoZcmVwZWF0ZWRfZG91YmxlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGCogAygBUhdyZXBlYXRlZERvdWJsZUV4dGVuc2lvbjpcChdyZXBlYXRlZF9ib29sX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGCsgAygIUhVyZXBlYXRlZEJvb2xFeHRlbnNpb246YAoZcmVwZWF0ZWRfc3RyaW5nX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGCwgAygJUhdyZXBlYXRlZFN0cmluZ0V4dGVuc2lvbjpeChhyZXBlYXRlZF9ieXRlc19leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgtIAMoDFIWcmVwZWF0ZWRCeXRlc0V4dGVuc2lvbjqJAQoXcmVwZWF0ZWRncm91cF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxguIAMoCjIqLnByb3RvYnVmX3VuaXR0ZXN0LlJlcGVhdGVkR3JvdXBfZXh0ZW5zaW9uUhZyZXBlYXRlZGdyb3VwRXh0ZW5zaW9uOp4BCiFyZXBlYXRlZF9uZXN0ZWRfbWVzc2FnZV9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgwIAMoCzItLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxUeXBlcy5OZXN0ZWRNZXNzYWdlUh5yZXBlYXRlZE5lc3RlZE1lc3NhZ2VFeHRlbnNpb246lAEKInJlcGVhdGVkX2ZvcmVpZ25fbWVzc2FnZV9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgxIAMoCzIhLnByb3RvYnVmX3VuaXR0ZXN0LkZvcmVpZ25NZXNzYWdlUh9yZXBlYXRlZEZvcmVpZ25NZXNzYWdlRXh0ZW5zaW9uOpgBCiFyZXBlYXRlZF9pbXBvcnRfbWVzc2FnZV9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxgyIAMoCzInLnByb3RvYnVmX3VuaXR0ZXN0X2ltcG9ydC5JbXBvcnRNZXNzYWdlUh5yZXBlYXRlZEltcG9ydE1lc3NhZ2VFeHRlbnNpb246lQEKHnJlcGVhdGVkX25lc3RlZF9lbnVtX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGDMgAygOMioucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZEVudW1SG3JlcGVhdGVkTmVzdGVkRW51bUV4dGVuc2lvbjqLAQofcmVwZWF0ZWRfZm9yZWlnbl9lbnVtX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGDQgAygOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW1SHHJlcGVhdGVkRm9yZWlnbkVudW1FeHRlbnNpb246jwEKHnJlcGVhdGVkX2ltcG9ydF9lbnVtX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGDUgAygOMiQucHJvdG9idWZfdW5pdHRlc3RfaW1wb3J0LkltcG9ydEVudW1SG3JlcGVhdGVkSW1wb3J0RW51bUV4dGVuc2lvbjpvCh9yZXBlYXRlZF9zdHJpbmdfcGllY2VfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYNiADKAlCAggCUhxyZXBlYXRlZFN0cmluZ1BpZWNlRXh0ZW5zaW9uOlwKF3JlcGVhdGVkX2NvcmRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYNyADKAlSFXJlcGVhdGVkQ29yZEV4dGVuc2lvbjqeAQofcmVwZWF0ZWRfbGF6eV9tZXNzYWdlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGDkgAygLMi0ucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZE1lc3NhZ2VCAigBUhxyZXBlYXRlZExhenlNZXNzYWdlRXh0ZW5zaW9uOmAKF2RlZmF1bHRfaW50MzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYPSABKAU6AjQxUhVkZWZhdWx0SW50MzJFeHRlbnNpb246YAoXZGVmYXVsdF9pbnQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxg+IAEoAzoCNDJSFWRlZmF1bHRJbnQ2NEV4dGVuc2lvbjpiChhkZWZhdWx0X3VpbnQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxg/IAEoDToCNDNSFmRlZmF1bHRVaW50MzJFeHRlbnNpb246YgoYZGVmYXVsdF91aW50NjRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYQCABKAQ6AjQ0UhZkZWZhdWx0VWludDY0RXh0ZW5zaW9uOmMKGGRlZmF1bHRfc2ludDMyX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGEEgASgROgMtNDVSFmRlZmF1bHRTaW50MzJFeHRlbnNpb246YgoYZGVmYXVsdF9zaW50NjRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYQiABKBI6AjQ2UhZkZWZhdWx0U2ludDY0RXh0ZW5zaW9uOmQKGWRlZmF1bHRfZml4ZWQzMl9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxhDIAEoBzoCNDdSF2RlZmF1bHRGaXhlZDMyRXh0ZW5zaW9uOmQKGWRlZmF1bHRfZml4ZWQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxhEIAEoBjoCNDhSF2RlZmF1bHRGaXhlZDY0RXh0ZW5zaW9uOmYKGmRlZmF1bHRfc2ZpeGVkMzJfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYRSABKA86AjQ5UhhkZWZhdWx0U2ZpeGVkMzJFeHRlbnNpb246ZwoaZGVmYXVsdF9zZml4ZWQ2NF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxhGIAEoEDoDLTUwUhhkZWZhdWx0U2ZpeGVkNjRFeHRlbnNpb246YgoXZGVmYXVsdF9mbG9hdF9leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxhHIAEoAjoENTEuNVIVZGVmYXVsdEZsb2F0RXh0ZW5zaW9uOmUKGGRlZmF1bHRfZG91YmxlX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGEggASgBOgU1MjAwMFIWZGVmYXVsdERvdWJsZUV4dGVuc2lvbjpgChZkZWZhdWx0X2Jvb2xfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYSSABKAg6BHRydWVSFGRlZmF1bHRCb29sRXh0ZW5zaW9uOmUKGGRlZmF1bHRfc3RyaW5nX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGEogASgJOgVoZWxsb1IWZGVmYXVsdFN0cmluZ0V4dGVuc2lvbjpjChdkZWZhdWx0X2J5dGVzX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGEsgASgMOgV3b3JsZFIVZGVmYXVsdEJ5dGVzRXh0ZW5zaW9uOpgBCh1kZWZhdWx0X25lc3RlZF9lbnVtX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGFEgASgOMioucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbFR5cGVzLk5lc3RlZEVudW06A0JBUlIaZGVmYXVsdE5lc3RlZEVudW1FeHRlbnNpb246lgEKHmRlZmF1bHRfZm9yZWlnbl9lbnVtX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGFIgASgOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW06C0ZPUkVJR05fQkFSUhtkZWZhdWx0Rm9yZWlnbkVudW1FeHRlbnNpb246mQEKHWRlZmF1bHRfaW1wb3J0X2VudW1fZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYUyABKA4yJC5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuSW1wb3J0RW51bToKSU1QT1JUX0JBUlIaZGVmYXVsdEltcG9ydEVudW1FeHRlbnNpb246cgoeZGVmYXVsdF9zdHJpbmdfcGllY2VfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYVCABKAk6A2FiY0ICCAJSG2RlZmF1bHRTdHJpbmdQaWVjZUV4dGVuc2lvbjpfChZkZWZhdWx0X2NvcmRfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYVSABKAk6AzEyM1IUZGVmYXVsdENvcmRFeHRlbnNpb246WgoWb25lb2ZfdWludDMyX2V4dGVuc2lvbhIkLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RBbGxFeHRlbnNpb25zGG8gASgNUhRvbmVvZlVpbnQzMkV4dGVuc2lvbjqYAQoeb25lb2ZfbmVzdGVkX21lc3NhZ2VfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYcCABKAsyLS5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXMuTmVzdGVkTWVzc2FnZVIbb25lb2ZOZXN0ZWRNZXNzYWdlRXh0ZW5zaW9uOloKFm9uZW9mX3N0cmluZ19leHRlbnNpb24SJC5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsRXh0ZW5zaW9ucxhxIAEoCVIUb25lb2ZTdHJpbmdFeHRlbnNpb246WAoVb25lb2ZfYnl0ZXNfZXh0ZW5zaW9uEiQucHJvdG9idWZfdW5pdHRlc3QuVGVzdEFsbEV4dGVuc2lvbnMYciABKAxSE29uZW9mQnl0ZXNFeHRlbnNpb246VQoTbXlfZXh0ZW5zaW9uX3N0cmluZxIlLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RGaWVsZE9yZGVyaW5ncxgyIAEoCVIRbXlFeHRlbnNpb25TdHJpbmc6TwoQbXlfZXh0ZW5zaW9uX2ludBIlLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RGaWVsZE9yZGVyaW5ncxgFIAEoBVIObXlFeHRlbnNpb25JbnQ6YQoWcGFja2VkX2ludDMyX2V4dGVuc2lvbhInLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRFeHRlbnNpb25zGFogAygFQgIQAVIUcGFja2VkSW50MzJFeHRlbnNpb246YQoWcGFja2VkX2ludDY0X2V4dGVuc2lvbhInLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRFeHRlbnNpb25zGFsgAygDQgIQAVIUcGFja2VkSW50NjRFeHRlbnNpb246YwoXcGFja2VkX3VpbnQzMl9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhcIAMoDUICEAFSFXBhY2tlZFVpbnQzMkV4dGVuc2lvbjpjChdwYWNrZWRfdWludDY0X2V4dGVuc2lvbhInLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRFeHRlbnNpb25zGF0gAygEQgIQAVIVcGFja2VkVWludDY0RXh0ZW5zaW9uOmMKF3BhY2tlZF9zaW50MzJfZXh0ZW5zaW9uEicucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhY2tlZEV4dGVuc2lvbnMYXiADKBFCAhABUhVwYWNrZWRTaW50MzJFeHRlbnNpb246YwoXcGFja2VkX3NpbnQ2NF9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhfIAMoEkICEAFSFXBhY2tlZFNpbnQ2NEV4dGVuc2lvbjplChhwYWNrZWRfZml4ZWQzMl9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhgIAMoB0ICEAFSFnBhY2tlZEZpeGVkMzJFeHRlbnNpb246ZQoYcGFja2VkX2ZpeGVkNjRfZXh0ZW5zaW9uEicucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhY2tlZEV4dGVuc2lvbnMYYSADKAZCAhABUhZwYWNrZWRGaXhlZDY0RXh0ZW5zaW9uOmcKGXBhY2tlZF9zZml4ZWQzMl9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhiIAMoD0ICEAFSF3BhY2tlZFNmaXhlZDMyRXh0ZW5zaW9uOmcKGXBhY2tlZF9zZml4ZWQ2NF9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhjIAMoEEICEAFSF3BhY2tlZFNmaXhlZDY0RXh0ZW5zaW9uOmEKFnBhY2tlZF9mbG9hdF9leHRlbnNpb24SJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0UGFja2VkRXh0ZW5zaW9ucxhkIAMoAkICEAFSFHBhY2tlZEZsb2F0RXh0ZW5zaW9uOmMKF3BhY2tlZF9kb3VibGVfZXh0ZW5zaW9uEicucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhY2tlZEV4dGVuc2lvbnMYZSADKAFCAhABUhVwYWNrZWREb3VibGVFeHRlbnNpb246XwoVcGFja2VkX2Jvb2xfZXh0ZW5zaW9uEicucHJvdG9idWZfdW5pdHRlc3QuVGVzdFBhY2tlZEV4dGVuc2lvbnMYZiADKAhCAhABUhNwYWNrZWRCb29sRXh0ZW5zaW9uOn8KFXBhY2tlZF9lbnVtX2V4dGVuc2lvbhInLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RQYWNrZWRFeHRlbnNpb25zGGcgAygOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW1CAhABUhNwYWNrZWRFbnVtRXh0ZW5zaW9uOmcKGHVucGFja2VkX2ludDMyX2V4dGVuc2lvbhIpLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RVbnBhY2tlZEV4dGVuc2lvbnMYWiADKAVCAhAAUhZ1bnBhY2tlZEludDMyRXh0ZW5zaW9uOmcKGHVucGFja2VkX2ludDY0X2V4dGVuc2lvbhIpLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RVbnBhY2tlZEV4dGVuc2lvbnMYWyADKANCAhAAUhZ1bnBhY2tlZEludDY0RXh0ZW5zaW9uOmkKGXVucGFja2VkX3VpbnQzMl9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGFwgAygNQgIQAFIXdW5wYWNrZWRVaW50MzJFeHRlbnNpb246aQoZdW5wYWNrZWRfdWludDY0X2V4dGVuc2lvbhIpLnByb3RvYnVmX3VuaXR0ZXN0LlRlc3RVbnBhY2tlZEV4dGVuc2lvbnMYXSADKARCAhAAUhd1bnBhY2tlZFVpbnQ2NEV4dGVuc2lvbjppChl1bnBhY2tlZF9zaW50MzJfZXh0ZW5zaW9uEikucHJvdG9idWZfdW5pdHRlc3QuVGVzdFVucGFja2VkRXh0ZW5zaW9ucxheIAMoEUICEABSF3VucGFja2VkU2ludDMyRXh0ZW5zaW9uOmkKGXVucGFja2VkX3NpbnQ2NF9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGF8gAygSQgIQAFIXdW5wYWNrZWRTaW50NjRFeHRlbnNpb246awoadW5wYWNrZWRfZml4ZWQzMl9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGGAgAygHQgIQAFIYdW5wYWNrZWRGaXhlZDMyRXh0ZW5zaW9uOmsKGnVucGFja2VkX2ZpeGVkNjRfZXh0ZW5zaW9uEikucHJvdG9idWZfdW5pdHRlc3QuVGVzdFVucGFja2VkRXh0ZW5zaW9ucxhhIAMoBkICEABSGHVucGFja2VkRml4ZWQ2NEV4dGVuc2lvbjptCht1bnBhY2tlZF9zZml4ZWQzMl9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGGIgAygPQgIQAFIZdW5wYWNrZWRTZml4ZWQzMkV4dGVuc2lvbjptCht1bnBhY2tlZF9zZml4ZWQ2NF9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGGMgAygQQgIQAFIZdW5wYWNrZWRTZml4ZWQ2NEV4dGVuc2lvbjpnChh1bnBhY2tlZF9mbG9hdF9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGGQgAygCQgIQAFIWdW5wYWNrZWRGbG9hdEV4dGVuc2lvbjppChl1bnBhY2tlZF9kb3VibGVfZXh0ZW5zaW9uEikucHJvdG9idWZfdW5pdHRlc3QuVGVzdFVucGFja2VkRXh0ZW5zaW9ucxhlIAMoAUICEABSF3VucGFja2VkRG91YmxlRXh0ZW5zaW9uOmUKF3VucGFja2VkX2Jvb2xfZXh0ZW5zaW9uEikucHJvdG9idWZfdW5pdHRlc3QuVGVzdFVucGFja2VkRXh0ZW5zaW9ucxhmIAMoCEICEABSFXVucGFja2VkQm9vbEV4dGVuc2lvbjqFAQoXdW5wYWNrZWRfZW51bV9leHRlbnNpb24SKS5wcm90b2J1Zl91bml0dGVzdC5UZXN0VW5wYWNrZWRFeHRlbnNpb25zGGcgAygOMh4ucHJvdG9idWZfdW5pdHRlc3QuRm9yZWlnbkVudW1CAhAAUhV1bnBhY2tlZEVudW1FeHRlbnNpb246cgoOdGVzdF9hbGxfdHlwZXMSJy5wcm90b2J1Zl91bml0dGVzdC5UZXN0SHVnZUZpZWxkTnVtYmVycxjgqv//ASABKAsyHy5wcm90b2J1Zl91bml0dGVzdC5UZXN0QWxsVHlwZXNSDHRlc3RBbGxUeXBlczp9CiV0ZXN0X2V4dGVuc2lvbl9pbnNpZGVfdGFibGVfZXh0ZW5zaW9uEisucHJvdG9idWZfdW5pdHRlc3QuVGVzdEV4dGVuc2lvbkluc2lkZVRhYmxlGAUgASgFUiF0ZXN0RXh0ZW5zaW9uSW5zaWRlVGFibGVFeHRlbnNpb246qQEKBWlubmVyElgucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZEdyb3VwRXh0ZW5zaW9uT3V0ZXIuTGF5ZXIxT3B0aW9uYWxHcm91cC5MYXllcjJSZXBlYXRlZEdyb3VwGAMgASgLMjkucHJvdG9idWZfdW5pdHRlc3QuVGVzdE5lc3RlZEdyb3VwRXh0ZW5zaW9uSW5uZXJFeHRlbnNpb25SBWlubmVyQh1CDVVuaXR0ZXN0UHJvdG9IAYABAYgBAZABAfgBAQ", [fileDesc_google_protobuf_unittest_import]);

/**
 * This proto includes every type of field in both singular and repeated
 * forms.
 *
 * @generated from message protobuf_unittest.TestAllTypes
 */
export type TestAllTypes = Message<"protobuf_unittest.TestAllTypes"> & {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypes_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessage optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum optional_import_enum = 23;
   */
  optionalImportEnum: ImportEnum;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypes_RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypes_NestedMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessage[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessage repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypes_NestedEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnum[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypes_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
   */
  defaultForeignEnum: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
   */
  defaultImportEnum: ImportEnum;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypes.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypes_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_cord = 115;
     */
    value: string;
    case: "oneofCord";
  } | {
    /**
     * @generated from field: string oneof_string_piece = 116;
     */
    value: string;
    case: "oneofStringPiece";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes.NestedMessage oneof_lazy_nested_message = 117;
     */
    value: TestAllTypes_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestAllTypes.
// Use `create(TestAllTypesDesc)` to create a new TestAllTypes.
export const TestAllTypesDesc: GenDescMessage<TestAllTypes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 0);

/**
 * @generated from message protobuf_unittest.TestAllTypes.NestedMessage
 */
export type TestAllTypes_NestedMessage = Message<"protobuf_unittest.TestAllTypes.NestedMessage"> & {
  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

// Describes the message protobuf_unittest.TestAllTypes.NestedMessage.
// Use `create(TestAllTypes_NestedMessageDesc)` to create a new TestAllTypes_NestedMessage.
export const TestAllTypes_NestedMessageDesc: GenDescMessage<TestAllTypes_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 0, 0);

/**
 * @generated from message protobuf_unittest.TestAllTypes.OptionalGroup
 */
export type TestAllTypes_OptionalGroup = Message<"protobuf_unittest.TestAllTypes.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestAllTypes.OptionalGroup.
// Use `create(TestAllTypes_OptionalGroupDesc)` to create a new TestAllTypes_OptionalGroup.
export const TestAllTypes_OptionalGroupDesc: GenDescMessage<TestAllTypes_OptionalGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 0, 1);

/**
 * @generated from message protobuf_unittest.TestAllTypes.RepeatedGroup
 */
export type TestAllTypes_RepeatedGroup = Message<"protobuf_unittest.TestAllTypes.RepeatedGroup"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestAllTypes.RepeatedGroup.
// Use `create(TestAllTypes_RepeatedGroupDesc)` to create a new TestAllTypes_RepeatedGroup.
export const TestAllTypes_RepeatedGroupDesc: GenDescMessage<TestAllTypes_RepeatedGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 0, 2);

/**
 * @generated from enum protobuf_unittest.TestAllTypes.NestedEnum
 */
export enum TestAllTypes_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * Intentionally negative.
   *
   * @generated from enum value: NEG = -1;
   */
  NEG = -1,
}

// Describes the enum protobuf_unittest.TestAllTypes.NestedEnum.
export const TestAllTypes_NestedEnumDesc: GenDescEnum<TestAllTypes_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 0, 0);

/**
 * This proto includes a recursively nested message.
 *
 * @generated from message protobuf_unittest.NestedTestAllTypes
 */
export type NestedTestAllTypes = Message<"protobuf_unittest.NestedTestAllTypes"> & {
  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes child = 1;
   */
  child?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes payload = 2;
   */
  payload?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.NestedTestAllTypes repeated_child = 3;
   */
  repeatedChild: NestedTestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes lazy_child = 4;
   */
  lazyChild?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes eager_child = 5;
   */
  eagerChild?: TestAllTypes;
};

// Describes the message protobuf_unittest.NestedTestAllTypes.
// Use `create(NestedTestAllTypesDesc)` to create a new NestedTestAllTypes.
export const NestedTestAllTypesDesc: GenDescMessage<NestedTestAllTypes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 1);

/**
 * @generated from message protobuf_unittest.TestDeprecatedFields
 */
export type TestDeprecatedFields = Message<"protobuf_unittest.TestDeprecatedFields"> & {
  /**
   * @generated from field: optional int32 deprecated_int32 = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedInt32: number;

  /**
   * @generated from field: repeated string deprecated_repeated_string = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedRepeatedString: string[];

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from oneof protobuf_unittest.TestDeprecatedFields.oneof_fields
   */
  oneofFields: {
    /**
     * @generated from field: int32 deprecated_int32_in_oneof = 2 [deprecated = true];
     * @deprecated
     */
    value: number;
    case: "deprecatedInt32InOneof";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional protobuf_unittest.TestDeprecatedFields nested = 5;
   */
  nested?: TestDeprecatedFields;
};

// Describes the message protobuf_unittest.TestDeprecatedFields.
// Use `create(TestDeprecatedFieldsDesc)` to create a new TestDeprecatedFields.
export const TestDeprecatedFieldsDesc: GenDescMessage<TestDeprecatedFields> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 2);

/**
 * @generated from message protobuf_unittest.TestDeprecatedMessage
 * @deprecated
 */
export type TestDeprecatedMessage = Message<"protobuf_unittest.TestDeprecatedMessage"> & {
};

// Describes the message protobuf_unittest.TestDeprecatedMessage.
// Use `create(TestDeprecatedMessageDesc)` to create a new TestDeprecatedMessage.
export const TestDeprecatedMessageDesc: GenDescMessage<TestDeprecatedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 3);

/**
 * Define these after TestAllTypes to make sure the compiler can handle
 * that.
 *
 * @generated from message protobuf_unittest.ForeignMessage
 */
export type ForeignMessage = Message<"protobuf_unittest.ForeignMessage"> & {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c: number;

  /**
   * @generated from field: optional int32 d = 2;
   */
  d: number;
};

// Describes the message protobuf_unittest.ForeignMessage.
// Use `create(ForeignMessageDesc)` to create a new ForeignMessage.
export const ForeignMessageDesc: GenDescMessage<ForeignMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 4);

/**
 * @generated from message protobuf_unittest.TestReservedFields
 */
export type TestReservedFields = Message<"protobuf_unittest.TestReservedFields"> & {
};

// Describes the message protobuf_unittest.TestReservedFields.
// Use `create(TestReservedFieldsDesc)` to create a new TestReservedFields.
export const TestReservedFieldsDesc: GenDescMessage<TestReservedFields> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 5);

/**
 * @generated from message protobuf_unittest.TestAllExtensions
 */
export type TestAllExtensions = Message<"protobuf_unittest.TestAllExtensions"> & {
};

// Describes the message protobuf_unittest.TestAllExtensions.
// Use `create(TestAllExtensionsDesc)` to create a new TestAllExtensions.
export const TestAllExtensionsDesc: GenDescMessage<TestAllExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 6);

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension
 */
export type OptionalGroup_extension = Message<"protobuf_unittest.OptionalGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

// Describes the message protobuf_unittest.OptionalGroup_extension.
// Use `create(OptionalGroup_extensionDesc)` to create a new OptionalGroup_extension.
export const OptionalGroup_extensionDesc: GenDescMessage<OptionalGroup_extension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 7);

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension
 */
export type RepeatedGroup_extension = Message<"protobuf_unittest.RepeatedGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

// Describes the message protobuf_unittest.RepeatedGroup_extension.
// Use `create(RepeatedGroup_extensionDesc)` to create a new RepeatedGroup_extension.
export const RepeatedGroup_extensionDesc: GenDescMessage<RepeatedGroup_extension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 8);

/**
 * @generated from message protobuf_unittest.TestMixedFieldsAndExtensions
 */
export type TestMixedFieldsAndExtensions = Message<"protobuf_unittest.TestMixedFieldsAndExtensions"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: repeated fixed32 b = 3;
   */
  b: number[];
};

// Describes the message protobuf_unittest.TestMixedFieldsAndExtensions.
// Use `create(TestMixedFieldsAndExtensionsDesc)` to create a new TestMixedFieldsAndExtensions.
export const TestMixedFieldsAndExtensionsDesc: GenDescMessage<TestMixedFieldsAndExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 9);

/**
 * @generated from extension: optional int32 c = 2;
 */
export const TestMixedFieldsAndExtensions_c: GenDescExtension<TestMixedFieldsAndExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 9, 0);

/**
 * @generated from extension: repeated fixed32 d = 4;
 */
export const TestMixedFieldsAndExtensions_d: GenDescExtension<TestMixedFieldsAndExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 9, 1);

/**
 * @generated from message protobuf_unittest.TestGroup
 */
export type TestGroup = Message<"protobuf_unittest.TestGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestGroup.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestGroup_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnum;
};

// Describes the message protobuf_unittest.TestGroup.
// Use `create(TestGroupDesc)` to create a new TestGroup.
export const TestGroupDesc: GenDescMessage<TestGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 10);

/**
 * @generated from message protobuf_unittest.TestGroup.OptionalGroup
 */
export type TestGroup_OptionalGroup = Message<"protobuf_unittest.TestGroup.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;

  /**
   * fast table size must be at least 16, for this
   *
   * @generated from field: optional int32 zz = 89;
   */
  zz: number;
};

// Describes the message protobuf_unittest.TestGroup.OptionalGroup.
// Use `create(TestGroup_OptionalGroupDesc)` to create a new TestGroup_OptionalGroup.
export const TestGroup_OptionalGroupDesc: GenDescMessage<TestGroup_OptionalGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 10, 0);

/**
 * @generated from message protobuf_unittest.TestGroupExtension
 */
export type TestGroupExtension = Message<"protobuf_unittest.TestGroupExtension"> & {
};

// Describes the message protobuf_unittest.TestGroupExtension.
// Use `create(TestGroupExtensionDesc)` to create a new TestGroupExtension.
export const TestGroupExtensionDesc: GenDescMessage<TestGroupExtension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 11);

/**
 * @generated from message protobuf_unittest.TestNestedExtension
 */
export type TestNestedExtension = Message<"protobuf_unittest.TestNestedExtension"> & {
};

// Describes the message protobuf_unittest.TestNestedExtension.
// Use `create(TestNestedExtensionDesc)` to create a new TestNestedExtension.
export const TestNestedExtensionDesc: GenDescMessage<TestNestedExtension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 12);

/**
 * @generated from message protobuf_unittest.TestNestedExtension.OptionalGroup_extension
 */
export type TestNestedExtension_OptionalGroup_extension = Message<"protobuf_unittest.TestNestedExtension.OptionalGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestNestedExtension.OptionalGroup_extension.
// Use `create(TestNestedExtension_OptionalGroup_extensionDesc)` to create a new TestNestedExtension_OptionalGroup_extension.
export const TestNestedExtension_OptionalGroup_extensionDesc: GenDescMessage<TestNestedExtension_OptionalGroup_extension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 12, 0);

/**
 * Check for bug where string extensions declared in tested scope did not
 * compile.
 *
 * @generated from extension: optional string test = 1002 [default = "test"];
 */
export const TestNestedExtension_test: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 12, 0);

/**
 * Used to test if generated extension name is correct when there are
 * underscores.
 *
 * @generated from extension: optional string nested_string_extension = 1003;
 */
export const TestNestedExtension_nested_string_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 12, 1);

/**
 * @generated from extension: optional protobuf_unittest.TestNestedExtension.OptionalGroup_extension optionalgroup_extension = 16;
 */
export const TestNestedExtension_optionalgroup_extension: GenDescExtension<TestGroupExtension, TestNestedExtension_OptionalGroup_extension> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 12, 2);

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum optional_foreign_enum_extension = 22;
 */
export const TestNestedExtension_optional_foreign_enum_extension: GenDescExtension<TestGroupExtension, ForeignEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 12, 3);

/**
 * @generated from message protobuf_unittest.TestChildExtension
 */
export type TestChildExtension = Message<"protobuf_unittest.TestChildExtension"> & {
  /**
   * @generated from field: optional string a = 1;
   */
  a: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions optional_extension = 3;
   */
  optionalExtension?: TestAllExtensions;
};

// Describes the message protobuf_unittest.TestChildExtension.
// Use `create(TestChildExtensionDesc)` to create a new TestChildExtension.
export const TestChildExtensionDesc: GenDescMessage<TestChildExtension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 13);

/**
 * Emulates wireformat data of TestChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestChildExtensionData
 */
export type TestChildExtensionData = Message<"protobuf_unittest.TestChildExtensionData"> & {
  /**
   * @generated from field: optional string a = 1;
   */
  a: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b: string;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
   */
  optionalExtension?: TestChildExtensionData_NestedTestAllExtensionsData;
};

// Describes the message protobuf_unittest.TestChildExtensionData.
// Use `create(TestChildExtensionDataDesc)` to create a new TestChildExtensionData.
export const TestChildExtensionDataDesc: GenDescMessage<TestChildExtensionData> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 14);

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData
 */
export type TestChildExtensionData_NestedTestAllExtensionsData = Message<"protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
   */
  dynamic?: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;
};

// Describes the message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.
// Use `create(TestChildExtensionData_NestedTestAllExtensionsDataDesc)` to create a new TestChildExtensionData_NestedTestAllExtensionsData.
export const TestChildExtensionData_NestedTestAllExtensionsDataDesc: GenDescMessage<TestChildExtensionData_NestedTestAllExtensionsData> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 14, 0);

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions
 */
export type TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions = Message<"protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 b = 2;
   */
  b: number;
};

// Describes the message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.
// Use `create(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDesc)` to create a new TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions.
export const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDesc: GenDescMessage<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 14, 0, 0);

/**
 * @generated from message protobuf_unittest.TestNestedChildExtension
 */
export type TestNestedChildExtension = Message<"protobuf_unittest.TestNestedChildExtension"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtension child = 2;
   */
  child?: TestChildExtension;
};

// Describes the message protobuf_unittest.TestNestedChildExtension.
// Use `create(TestNestedChildExtensionDesc)` to create a new TestNestedChildExtension.
export const TestNestedChildExtensionDesc: GenDescMessage<TestNestedChildExtension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 15);

/**
 * Emulates wireformat data of TestNestedChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestNestedChildExtensionData
 */
export type TestNestedChildExtensionData = Message<"protobuf_unittest.TestNestedChildExtensionData"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData child = 2;
   */
  child?: TestChildExtensionData;
};

// Describes the message protobuf_unittest.TestNestedChildExtensionData.
// Use `create(TestNestedChildExtensionDataDesc)` to create a new TestNestedChildExtensionData.
export const TestNestedChildExtensionDataDesc: GenDescMessage<TestNestedChildExtensionData> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 16);

/**
 * Required and closed enum fields are considered unknown fields if the value is
 * not valid. We need to make sure it functions as expected.
 *
 * @generated from message protobuf_unittest.TestRequiredEnum
 */
export type TestRequiredEnum = Message<"protobuf_unittest.TestRequiredEnum"> & {
  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum = 1;
   */
  requiredEnum: ForeignEnum;

  /**
   * A dummy optional field.
   *
   * @generated from field: optional int32 a = 2;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestRequiredEnum.
// Use `create(TestRequiredEnumDesc)` to create a new TestRequiredEnum.
export const TestRequiredEnumDesc: GenDescMessage<TestRequiredEnum> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 17);

/**
 * TestRequiredEnum + using enum values that won't fit to 64 bitmask.
 *
 * @generated from message protobuf_unittest.TestRequiredEnumNoMask
 */
export type TestRequiredEnumNoMask = Message<"protobuf_unittest.TestRequiredEnumNoMask"> & {
  /**
   * @generated from field: required protobuf_unittest.TestRequiredEnumNoMask.NestedEnum required_enum = 1;
   */
  requiredEnum: TestRequiredEnumNoMask_NestedEnum;

  /**
   * A dummy optional field.
   *
   * @generated from field: optional int32 a = 2;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestRequiredEnumNoMask.
// Use `create(TestRequiredEnumNoMaskDesc)` to create a new TestRequiredEnumNoMask.
export const TestRequiredEnumNoMaskDesc: GenDescMessage<TestRequiredEnumNoMask> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 18);

/**
 * @generated from enum protobuf_unittest.TestRequiredEnumNoMask.NestedEnum
 */
export enum TestRequiredEnumNoMask_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 2;
   */
  FOO = 2,

  /**
   * @generated from enum value: BAR = 100;
   */
  BAR = 100,

  /**
   * Intentionally negative.
   *
   * @generated from enum value: BAZ = -1;
   */
  BAZ = -1,
}

// Describes the enum protobuf_unittest.TestRequiredEnumNoMask.NestedEnum.
export const TestRequiredEnumNoMask_NestedEnumDesc: GenDescEnum<TestRequiredEnumNoMask_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 18, 0);

/**
 * @generated from message protobuf_unittest.TestRequiredEnumMulti
 */
export type TestRequiredEnumMulti = Message<"protobuf_unittest.TestRequiredEnumMulti"> & {
  /**
   * Intentionally placed in descending field number to force sorting in closed
   * enum verification.
   *
   * @generated from field: required protobuf_unittest.TestRequiredEnumMulti.NestedEnum required_enum_4 = 4;
   */
  requiredEnum4: TestRequiredEnumMulti_NestedEnum;

  /**
   * @generated from field: optional int32 a_3 = 3;
   */
  a3: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredEnumMulti.NestedEnum required_enum_2 = 2;
   */
  requiredEnum2: TestRequiredEnumMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum_1 = 1;
   */
  requiredEnum1: ForeignEnum;
};

// Describes the message protobuf_unittest.TestRequiredEnumMulti.
// Use `create(TestRequiredEnumMultiDesc)` to create a new TestRequiredEnumMulti.
export const TestRequiredEnumMultiDesc: GenDescMessage<TestRequiredEnumMulti> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 19);

/**
 * @generated from enum protobuf_unittest.TestRequiredEnumMulti.NestedEnum
 */
export enum TestRequiredEnumMulti_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 100;
   */
  BAZ = 100,
}

// Describes the enum protobuf_unittest.TestRequiredEnumMulti.NestedEnum.
export const TestRequiredEnumMulti_NestedEnumDesc: GenDescEnum<TestRequiredEnumMulti_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 19, 0);

/**
 * @generated from message protobuf_unittest.TestRequiredNoMaskMulti
 */
export type TestRequiredNoMaskMulti = Message<"protobuf_unittest.TestRequiredNoMaskMulti"> & {
  /**
   * Intentionally placed in descending field number to force sorting in closed
   * enum verification. Also, using large field numbers to use tag only
   * matching for required fields.
   *
   * @generated from field: required fixed32 required_fixed32_80 = 80;
   */
  requiredFixed3280: number;

  /**
   * @generated from field: required fixed32 required_fixed32_70 = 70;
   */
  requiredFixed3270: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_64 = 64;
   */
  requiredEnum64: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_4 = 4;
   */
  requiredEnum4: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: optional int32 a_3 = 3;
   */
  a3: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_2 = 2;
   */
  requiredEnum2: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum_1 = 1;
   */
  requiredEnum1: ForeignEnum;
};

// Describes the message protobuf_unittest.TestRequiredNoMaskMulti.
// Use `create(TestRequiredNoMaskMultiDesc)` to create a new TestRequiredNoMaskMulti.
export const TestRequiredNoMaskMultiDesc: GenDescMessage<TestRequiredNoMaskMulti> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 20);

/**
 * @generated from enum protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum
 */
export enum TestRequiredNoMaskMulti_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 100;
   */
  BAZ = 100,
}

// Describes the enum protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum.
export const TestRequiredNoMaskMulti_NestedEnumDesc: GenDescEnum<TestRequiredNoMaskMulti_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 20, 0);

/**
 * We have separate messages for testing required fields because it's
 * annoying to have to fill in required fields in TestProto in order to
 * do anything with it.  Note that we don't need to test every type of
 * required filed because the code output is basically identical to
 * optional fields for all types.
 *
 * @generated from message protobuf_unittest.TestRequired
 */
export type TestRequired = Message<"protobuf_unittest.TestRequired"> & {
  /**
   * @generated from field: required int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 dummy2 = 2;
   */
  dummy2: number;

  /**
   * @generated from field: required int32 b = 3;
   */
  b: number;

  /**
   * Pad the field count to 32 so that we can test that IsInitialized()
   * properly checks multiple elements of has_bits_.
   *
   * @generated from field: optional int32 dummy4 = 4;
   */
  dummy4: number;

  /**
   * @generated from field: optional int32 dummy5 = 5;
   */
  dummy5: number;

  /**
   * @generated from field: optional int32 dummy6 = 6;
   */
  dummy6: number;

  /**
   * @generated from field: optional int32 dummy7 = 7;
   */
  dummy7: number;

  /**
   * @generated from field: optional int32 dummy8 = 8;
   */
  dummy8: number;

  /**
   * @generated from field: optional int32 dummy9 = 9;
   */
  dummy9: number;

  /**
   * @generated from field: optional int32 dummy10 = 10;
   */
  dummy10: number;

  /**
   * @generated from field: optional int32 dummy11 = 11;
   */
  dummy11: number;

  /**
   * @generated from field: optional int32 dummy12 = 12;
   */
  dummy12: number;

  /**
   * @generated from field: optional int32 dummy13 = 13;
   */
  dummy13: number;

  /**
   * @generated from field: optional int32 dummy14 = 14;
   */
  dummy14: number;

  /**
   * @generated from field: optional int32 dummy15 = 15;
   */
  dummy15: number;

  /**
   * @generated from field: optional int32 dummy16 = 16;
   */
  dummy16: number;

  /**
   * @generated from field: optional int32 dummy17 = 17;
   */
  dummy17: number;

  /**
   * @generated from field: optional int32 dummy18 = 18;
   */
  dummy18: number;

  /**
   * @generated from field: optional int32 dummy19 = 19;
   */
  dummy19: number;

  /**
   * @generated from field: optional int32 dummy20 = 20;
   */
  dummy20: number;

  /**
   * @generated from field: optional int32 dummy21 = 21;
   */
  dummy21: number;

  /**
   * @generated from field: optional int32 dummy22 = 22;
   */
  dummy22: number;

  /**
   * @generated from field: optional int32 dummy23 = 23;
   */
  dummy23: number;

  /**
   * @generated from field: optional int32 dummy24 = 24;
   */
  dummy24: number;

  /**
   * @generated from field: optional int32 dummy25 = 25;
   */
  dummy25: number;

  /**
   * @generated from field: optional int32 dummy26 = 26;
   */
  dummy26: number;

  /**
   * @generated from field: optional int32 dummy27 = 27;
   */
  dummy27: number;

  /**
   * @generated from field: optional int32 dummy28 = 28;
   */
  dummy28: number;

  /**
   * @generated from field: optional int32 dummy29 = 29;
   */
  dummy29: number;

  /**
   * @generated from field: optional int32 dummy30 = 30;
   */
  dummy30: number;

  /**
   * @generated from field: optional int32 dummy31 = 31;
   */
  dummy31: number;

  /**
   * @generated from field: optional int32 dummy32 = 32;
   */
  dummy32: number;

  /**
   * @generated from field: required int32 c = 33;
   */
  c: number;

  /**
   * Add an optional child message to make this non-trivial for go/pdlazy.
   *
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign = 34;
   */
  optionalForeign?: ForeignMessage;
};

// Describes the message protobuf_unittest.TestRequired.
// Use `create(TestRequiredDesc)` to create a new TestRequired.
export const TestRequiredDesc: GenDescMessage<TestRequired> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 21);

/**
 * @generated from extension: optional protobuf_unittest.TestRequired single = 1000;
 */
export const TestRequired_single: GenDescExtension<TestAllExtensions, TestRequired> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 21, 0);

/**
 * @generated from extension: repeated protobuf_unittest.TestRequired multi = 1001;
 */
export const TestRequired_multi: GenDescExtension<TestAllExtensions, TestRequired[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 21, 1);

/**
 * @generated from message protobuf_unittest.TestRequiredForeign
 */
export type TestRequiredForeign = Message<"protobuf_unittest.TestRequiredForeign"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy: number;

  /**
   * Missing required fields must not affect verification of child messages.
   *
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4;
   */
  optionalLazyMessage?: NestedTestAllTypes;
};

// Describes the message protobuf_unittest.TestRequiredForeign.
// Use `create(TestRequiredForeignDesc)` to create a new TestRequiredForeign.
export const TestRequiredForeignDesc: GenDescMessage<TestRequiredForeign> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 22);

/**
 * @generated from message protobuf_unittest.TestRequiredMessage
 */
export type TestRequiredMessage = Message<"protobuf_unittest.TestRequiredMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: required protobuf_unittest.TestRequired required_message = 3;
   */
  requiredMessage?: TestRequired;
};

// Describes the message protobuf_unittest.TestRequiredMessage.
// Use `create(TestRequiredMessageDesc)` to create a new TestRequiredMessage.
export const TestRequiredMessageDesc: GenDescMessage<TestRequiredMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 23);

/**
 * @generated from message protobuf_unittest.TestNestedRequiredForeign
 */
export type TestNestedRequiredForeign = Message<"protobuf_unittest.TestNestedRequiredForeign"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedRequiredForeign child = 1;
   */
  child?: TestNestedRequiredForeign;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredForeign payload = 2;
   */
  payload?: TestRequiredForeign;

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy: number;

  /**
   * optional message to test required closed enum.
   *
   * @generated from field: optional protobuf_unittest.TestRequiredEnum required_enum = 5;
   */
  requiredEnum?: TestRequiredEnum;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredEnumNoMask required_enum_no_mask = 6;
   */
  requiredEnumNoMask?: TestRequiredEnumNoMask;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredEnumMulti required_enum_multi = 7;
   */
  requiredEnumMulti?: TestRequiredEnumMulti;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredNoMaskMulti required_no_mask = 9;
   */
  requiredNoMask?: TestRequiredNoMaskMulti;
};

// Describes the message protobuf_unittest.TestNestedRequiredForeign.
// Use `create(TestNestedRequiredForeignDesc)` to create a new TestNestedRequiredForeign.
export const TestNestedRequiredForeignDesc: GenDescMessage<TestNestedRequiredForeign> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 24);

/**
 * Test that we can use NestedMessage from outside TestAllTypes.
 *
 * @generated from message protobuf_unittest.TestForeignNested
 */
export type TestForeignNested = Message<"protobuf_unittest.TestForeignNested"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
   */
  foreignNested?: TestAllTypes_NestedMessage;
};

// Describes the message protobuf_unittest.TestForeignNested.
// Use `create(TestForeignNestedDesc)` to create a new TestForeignNested.
export const TestForeignNestedDesc: GenDescMessage<TestForeignNested> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 25);

/**
 * TestEmptyMessage is used to test unknown field support.
 *
 * @generated from message protobuf_unittest.TestEmptyMessage
 */
export type TestEmptyMessage = Message<"protobuf_unittest.TestEmptyMessage"> & {
};

// Describes the message protobuf_unittest.TestEmptyMessage.
// Use `create(TestEmptyMessageDesc)` to create a new TestEmptyMessage.
export const TestEmptyMessageDesc: GenDescMessage<TestEmptyMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 26);

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensions
 */
export type TestEmptyMessageWithExtensions = Message<"protobuf_unittest.TestEmptyMessageWithExtensions"> & {
};

// Describes the message protobuf_unittest.TestEmptyMessageWithExtensions.
// Use `create(TestEmptyMessageWithExtensionsDesc)` to create a new TestEmptyMessageWithExtensions.
export const TestEmptyMessageWithExtensionsDesc: GenDescMessage<TestEmptyMessageWithExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 27);

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestPickleNestedMessage
 */
export type TestPickleNestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage"> & {
};

// Describes the message protobuf_unittest.TestPickleNestedMessage.
// Use `create(TestPickleNestedMessageDesc)` to create a new TestPickleNestedMessage.
export const TestPickleNestedMessageDesc: GenDescMessage<TestPickleNestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 28);

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage
 */
export type TestPickleNestedMessage_NestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage.NestedMessage"> & {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

// Describes the message protobuf_unittest.TestPickleNestedMessage.NestedMessage.
// Use `create(TestPickleNestedMessage_NestedMessageDesc)` to create a new TestPickleNestedMessage_NestedMessage.
export const TestPickleNestedMessage_NestedMessageDesc: GenDescMessage<TestPickleNestedMessage_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 28, 0);

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage
 */
export type TestPickleNestedMessage_NestedMessage_NestedNestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage"> & {
  /**
   * @generated from field: optional int32 cc = 1;
   */
  cc: number;
};

// Describes the message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.
// Use `create(TestPickleNestedMessage_NestedMessage_NestedNestedMessageDesc)` to create a new TestPickleNestedMessage_NestedMessage_NestedNestedMessage.
export const TestPickleNestedMessage_NestedMessage_NestedNestedMessageDesc: GenDescMessage<TestPickleNestedMessage_NestedMessage_NestedNestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 28, 0, 0);

/**
 * @generated from message protobuf_unittest.TestMultipleExtensionRanges
 */
export type TestMultipleExtensionRanges = Message<"protobuf_unittest.TestMultipleExtensionRanges"> & {
};

// Describes the message protobuf_unittest.TestMultipleExtensionRanges.
// Use `create(TestMultipleExtensionRangesDesc)` to create a new TestMultipleExtensionRanges.
export const TestMultipleExtensionRangesDesc: GenDescMessage<TestMultipleExtensionRanges> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 29);

/**
 * Test that really large tag numbers don't break anything.
 *
 * @generated from message protobuf_unittest.TestReallyLargeTagNumber
 */
export type TestReallyLargeTagNumber = Message<"protobuf_unittest.TestReallyLargeTagNumber"> & {
  /**
   * The largest possible tag number is 2^28 - 1, since the wire format uses
   * three bits to communicate wire type.
   *
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 bb = 268435455;
   */
  bb: number;
};

// Describes the message protobuf_unittest.TestReallyLargeTagNumber.
// Use `create(TestReallyLargeTagNumberDesc)` to create a new TestReallyLargeTagNumber.
export const TestReallyLargeTagNumberDesc: GenDescMessage<TestReallyLargeTagNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 30);

/**
 * @generated from message protobuf_unittest.TestRecursiveMessage
 */
export type TestRecursiveMessage = Message<"protobuf_unittest.TestRecursiveMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRecursiveMessage a = 1;
   */
  a?: TestRecursiveMessage;

  /**
   * @generated from field: optional int32 i = 2;
   */
  i: number;
};

// Describes the message protobuf_unittest.TestRecursiveMessage.
// Use `create(TestRecursiveMessageDesc)` to create a new TestRecursiveMessage.
export const TestRecursiveMessageDesc: GenDescMessage<TestRecursiveMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 31);

/**
 * Test that mutual recursion works.
 *
 * @generated from message protobuf_unittest.TestMutualRecursionA
 */
export type TestMutualRecursionA = Message<"protobuf_unittest.TestMutualRecursionA"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB bb = 1;
   */
  bb?: TestMutualRecursionB;

  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubGroup subgroup = 2;
   */
  subgroup?: TestMutualRecursionA_SubGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestMutualRecursionA.SubGroupR subgroupr = 5;
   */
  subgroupr: TestMutualRecursionA_SubGroupR[];
};

// Describes the message protobuf_unittest.TestMutualRecursionA.
// Use `create(TestMutualRecursionADesc)` to create a new TestMutualRecursionA.
export const TestMutualRecursionADesc: GenDescMessage<TestMutualRecursionA> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 32);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubMessage
 */
export type TestMutualRecursionA_SubMessage = Message<"protobuf_unittest.TestMutualRecursionA.SubMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB b = 1;
   */
  b?: TestMutualRecursionB;
};

// Describes the message protobuf_unittest.TestMutualRecursionA.SubMessage.
// Use `create(TestMutualRecursionA_SubMessageDesc)` to create a new TestMutualRecursionA_SubMessage.
export const TestMutualRecursionA_SubMessageDesc: GenDescMessage<TestMutualRecursionA_SubMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 32, 0);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroup
 */
export type TestMutualRecursionA_SubGroup = Message<"protobuf_unittest.TestMutualRecursionA.SubGroup"> & {
  /**
   * Needed because of bug in javatest
   *
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
   */
  subMessage?: TestMutualRecursionA_SubMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes not_in_this_scc = 4;
   */
  notInThisScc?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestMutualRecursionA.SubGroup.
// Use `create(TestMutualRecursionA_SubGroupDesc)` to create a new TestMutualRecursionA_SubGroup.
export const TestMutualRecursionA_SubGroupDesc: GenDescMessage<TestMutualRecursionA_SubGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 32, 1);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroupR
 */
export type TestMutualRecursionA_SubGroupR = Message<"protobuf_unittest.TestMutualRecursionA.SubGroupR"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes payload = 6;
   */
  payload?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestMutualRecursionA.SubGroupR.
// Use `create(TestMutualRecursionA_SubGroupRDesc)` to create a new TestMutualRecursionA_SubGroupR.
export const TestMutualRecursionA_SubGroupRDesc: GenDescMessage<TestMutualRecursionA_SubGroupR> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 32, 2);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionB
 */
export type TestMutualRecursionB = Message<"protobuf_unittest.TestMutualRecursionB"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA a = 1;
   */
  a?: TestMutualRecursionA;

  /**
   * @generated from field: optional int32 optional_int32 = 2;
   */
  optionalInt32: number;
};

// Describes the message protobuf_unittest.TestMutualRecursionB.
// Use `create(TestMutualRecursionBDesc)` to create a new TestMutualRecursionB.
export const TestMutualRecursionBDesc: GenDescMessage<TestMutualRecursionB> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 33);

/**
 * @generated from message protobuf_unittest.TestIsInitialized
 */
export type TestIsInitialized = Message<"protobuf_unittest.TestIsInitialized"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
   */
  subMessage?: TestIsInitialized_SubMessage;
};

// Describes the message protobuf_unittest.TestIsInitialized.
// Use `create(TestIsInitializedDesc)` to create a new TestIsInitialized.
export const TestIsInitializedDesc: GenDescMessage<TestIsInitialized> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 34);

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage
 */
export type TestIsInitialized_SubMessage = Message<"protobuf_unittest.TestIsInitialized.SubMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage.SubGroup subgroup = 1;
   */
  subgroup?: TestIsInitialized_SubMessage_SubGroup;
};

// Describes the message protobuf_unittest.TestIsInitialized.SubMessage.
// Use `create(TestIsInitialized_SubMessageDesc)` to create a new TestIsInitialized_SubMessage.
export const TestIsInitialized_SubMessageDesc: GenDescMessage<TestIsInitialized_SubMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 34, 0);

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup
 */
export type TestIsInitialized_SubMessage_SubGroup = Message<"protobuf_unittest.TestIsInitialized.SubMessage.SubGroup"> & {
  /**
   * @generated from field: required int32 i = 2;
   */
  i: number;
};

// Describes the message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.
// Use `create(TestIsInitialized_SubMessage_SubGroupDesc)` to create a new TestIsInitialized_SubMessage_SubGroup.
export const TestIsInitialized_SubMessage_SubGroupDesc: GenDescMessage<TestIsInitialized_SubMessage_SubGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 34, 0, 0);

/**
 * Test that groups have disjoint field numbers from their siblings and
 * parents.  This is NOT possible in proto1; only google.protobuf.  When attempting
 * to compile with proto1, this will emit an error; so we only include it
 * in protobuf_unittest_proto.
 *
 * NO_PROTO1
 *
 * @generated from message protobuf_unittest.TestDupFieldNumber
 */
export type TestDupFieldNumber = Message<"protobuf_unittest.TestDupFieldNumber"> & {
  /**
   * NO_PROTO1
   *
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Foo foo = 2;
   */
  foo?: TestDupFieldNumber_Foo;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Bar bar = 3;
   */
  bar?: TestDupFieldNumber_Bar;
};

// Describes the message protobuf_unittest.TestDupFieldNumber.
// Use `create(TestDupFieldNumberDesc)` to create a new TestDupFieldNumber.
export const TestDupFieldNumberDesc: GenDescMessage<TestDupFieldNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 35);

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Foo
 */
export type TestDupFieldNumber_Foo = Message<"protobuf_unittest.TestDupFieldNumber.Foo"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestDupFieldNumber.Foo.
// Use `create(TestDupFieldNumber_FooDesc)` to create a new TestDupFieldNumber_Foo.
export const TestDupFieldNumber_FooDesc: GenDescMessage<TestDupFieldNumber_Foo> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 35, 0);

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Bar
 */
export type TestDupFieldNumber_Bar = Message<"protobuf_unittest.TestDupFieldNumber.Bar"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestDupFieldNumber.Bar.
// Use `create(TestDupFieldNumber_BarDesc)` to create a new TestDupFieldNumber_Bar.
export const TestDupFieldNumber_BarDesc: GenDescMessage<TestDupFieldNumber_Bar> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 35, 1);

/**
 * Additional messages for testing lazy fields.
 *
 * @generated from message protobuf_unittest.TestEagerMessage
 */
export type TestEagerMessage = Message<"protobuf_unittest.TestEagerMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestEagerMessage.
// Use `create(TestEagerMessageDesc)` to create a new TestEagerMessage.
export const TestEagerMessageDesc: GenDescMessage<TestEagerMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 36);

/**
 * @generated from message protobuf_unittest.TestLazyMessage
 */
export type TestLazyMessage = Message<"protobuf_unittest.TestLazyMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestLazyMessage.
// Use `create(TestLazyMessageDesc)` to create a new TestLazyMessage.
export const TestLazyMessageDesc: GenDescMessage<TestLazyMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 37);

/**
 * @generated from message protobuf_unittest.TestLazyMessageRepeated
 */
export type TestLazyMessageRepeated = Message<"protobuf_unittest.TestLazyMessageRepeated"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestLazyMessage repeated_message = 1;
   */
  repeatedMessage: TestLazyMessage[];
};

// Describes the message protobuf_unittest.TestLazyMessageRepeated.
// Use `create(TestLazyMessageRepeatedDesc)` to create a new TestLazyMessageRepeated.
export const TestLazyMessageRepeatedDesc: GenDescMessage<TestLazyMessageRepeated> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 38);

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy
 */
export type TestEagerMaybeLazy = Message<"protobuf_unittest.TestEagerMaybeLazy"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_foo = 1;
   */
  messageFoo?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_bar = 2;
   */
  messageBar?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
   */
  messageBaz?: TestEagerMaybeLazy_NestedMessage;
};

// Describes the message protobuf_unittest.TestEagerMaybeLazy.
// Use `create(TestEagerMaybeLazyDesc)` to create a new TestEagerMaybeLazy.
export const TestEagerMaybeLazyDesc: GenDescMessage<TestEagerMaybeLazy> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 39);

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy.NestedMessage
 */
export type TestEagerMaybeLazy_NestedMessage = Message<"protobuf_unittest.TestEagerMaybeLazy.NestedMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestPackedTypes packed = 1;
   */
  packed?: TestPackedTypes;
};

// Describes the message protobuf_unittest.TestEagerMaybeLazy.NestedMessage.
// Use `create(TestEagerMaybeLazy_NestedMessageDesc)` to create a new TestEagerMaybeLazy_NestedMessage.
export const TestEagerMaybeLazy_NestedMessageDesc: GenDescMessage<TestEagerMaybeLazy_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 39, 0);

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestNestedMessageHasBits
 */
export type TestNestedMessageHasBits = Message<"protobuf_unittest.TestNestedMessageHasBits"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
   */
  optionalNestedMessage?: TestNestedMessageHasBits_NestedMessage;
};

// Describes the message protobuf_unittest.TestNestedMessageHasBits.
// Use `create(TestNestedMessageHasBitsDesc)` to create a new TestNestedMessageHasBits.
export const TestNestedMessageHasBitsDesc: GenDescMessage<TestNestedMessageHasBits> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 40);

/**
 * @generated from message protobuf_unittest.TestNestedMessageHasBits.NestedMessage
 */
export type TestNestedMessageHasBits_NestedMessage = Message<"protobuf_unittest.TestNestedMessageHasBits.NestedMessage"> & {
  /**
   * @generated from field: repeated int32 nestedmessage_repeated_int32 = 1;
   */
  nestedmessageRepeatedInt32: number[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
   */
  nestedmessageRepeatedForeignmessage: ForeignMessage[];
};

// Describes the message protobuf_unittest.TestNestedMessageHasBits.NestedMessage.
// Use `create(TestNestedMessageHasBits_NestedMessageDesc)` to create a new TestNestedMessageHasBits_NestedMessage.
export const TestNestedMessageHasBits_NestedMessageDesc: GenDescMessage<TestNestedMessageHasBits_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 40, 0);

/**
 * Test message with CamelCase field names.  This violates Protocol Buffer
 * standard style.
 *
 * @generated from message protobuf_unittest.TestCamelCaseFieldNames
 */
export type TestCamelCaseFieldNames = Message<"protobuf_unittest.TestCamelCaseFieldNames"> & {
  /**
   * @generated from field: optional int32 PrimitiveField = 1;
   */
  PrimitiveField: number;

  /**
   * @generated from field: optional string StringField = 2;
   */
  StringField: string;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum EnumField = 3;
   */
  EnumField: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage MessageField = 4;
   */
  MessageField?: ForeignMessage;

  /**
   * @generated from field: optional string StringPieceField = 5;
   */
  StringPieceField: string;

  /**
   * @generated from field: optional string CordField = 6;
   */
  CordField: string;

  /**
   * @generated from field: repeated int32 RepeatedPrimitiveField = 7;
   */
  RepeatedPrimitiveField: number[];

  /**
   * @generated from field: repeated string RepeatedStringField = 8;
   */
  RepeatedStringField: string[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
   */
  RepeatedEnumField: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
   */
  RepeatedMessageField: ForeignMessage[];

  /**
   * @generated from field: repeated string RepeatedStringPieceField = 11;
   */
  RepeatedStringPieceField: string[];

  /**
   * @generated from field: repeated string RepeatedCordField = 12;
   */
  RepeatedCordField: string[];
};

// Describes the message protobuf_unittest.TestCamelCaseFieldNames.
// Use `create(TestCamelCaseFieldNamesDesc)` to create a new TestCamelCaseFieldNames.
export const TestCamelCaseFieldNamesDesc: GenDescMessage<TestCamelCaseFieldNames> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 41);

/**
 * We list fields out of order, to ensure that we're using field number and not
 * field index to determine serialization order.
 *
 * @generated from message protobuf_unittest.TestFieldOrderings
 */
export type TestFieldOrderings = Message<"protobuf_unittest.TestFieldOrderings"> & {
  /**
   * @generated from field: optional string my_string = 11;
   */
  myString: string;

  /**
   * @generated from field: optional int64 my_int = 1;
   */
  myInt: bigint;

  /**
   * @generated from field: optional float my_float = 101;
   */
  myFloat: number;

  /**
   * @generated from field: optional protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
   */
  optionalNestedMessage?: TestFieldOrderings_NestedMessage;
};

// Describes the message protobuf_unittest.TestFieldOrderings.
// Use `create(TestFieldOrderingsDesc)` to create a new TestFieldOrderings.
export const TestFieldOrderingsDesc: GenDescMessage<TestFieldOrderings> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 42);

/**
 * @generated from message protobuf_unittest.TestFieldOrderings.NestedMessage
 */
export type TestFieldOrderings_NestedMessage = Message<"protobuf_unittest.TestFieldOrderings.NestedMessage"> & {
  /**
   * @generated from field: optional int64 oo = 2;
   */
  oo: bigint;

  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

// Describes the message protobuf_unittest.TestFieldOrderings.NestedMessage.
// Use `create(TestFieldOrderings_NestedMessageDesc)` to create a new TestFieldOrderings_NestedMessage.
export const TestFieldOrderings_NestedMessageDesc: GenDescMessage<TestFieldOrderings_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 42, 0);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings1
 */
export type TestExtensionOrderings1 = Message<"protobuf_unittest.TestExtensionOrderings1"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

// Describes the message protobuf_unittest.TestExtensionOrderings1.
// Use `create(TestExtensionOrderings1Desc)` to create a new TestExtensionOrderings1.
export const TestExtensionOrderings1Desc: GenDescMessage<TestExtensionOrderings1> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 43);

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings1 test_ext_orderings1 = 13;
 */
export const TestExtensionOrderings1_test_ext_orderings1: GenDescExtension<TestFieldOrderings, TestExtensionOrderings1> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 43, 0);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2
 */
export type TestExtensionOrderings2 = Message<"protobuf_unittest.TestExtensionOrderings2"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

// Describes the message protobuf_unittest.TestExtensionOrderings2.
// Use `create(TestExtensionOrderings2Desc)` to create a new TestExtensionOrderings2.
export const TestExtensionOrderings2Desc: GenDescMessage<TestExtensionOrderings2> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 44);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3
 */
export type TestExtensionOrderings2_TestExtensionOrderings3 = Message<"protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

// Describes the message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.
// Use `create(TestExtensionOrderings2_TestExtensionOrderings3Desc)` to create a new TestExtensionOrderings2_TestExtensionOrderings3.
export const TestExtensionOrderings2_TestExtensionOrderings3Desc: GenDescMessage<TestExtensionOrderings2_TestExtensionOrderings3> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 44, 0);

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3 test_ext_orderings3 = 14;
 */
export const TestExtensionOrderings2_TestExtensionOrderings3_test_ext_orderings3: GenDescExtension<TestFieldOrderings, TestExtensionOrderings2_TestExtensionOrderings3> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 44, 0, 0);

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings2 test_ext_orderings2 = 12;
 */
export const TestExtensionOrderings2_test_ext_orderings2: GenDescExtension<TestFieldOrderings, TestExtensionOrderings2> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 44, 0);

/**
 * @generated from message protobuf_unittest.TestExtremeDefaultValues
 */
export type TestExtremeDefaultValues = Message<"protobuf_unittest.TestExtremeDefaultValues"> & {
  /**
   * @generated from field: optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\\"\376"];
   */
  escapedBytes: Uint8Array;

  /**
   * @generated from field: optional uint32 large_uint32 = 2 [default = 4294967295];
   */
  largeUint32: number;

  /**
   * @generated from field: optional uint64 large_uint64 = 3 [default = 18446744073709551615];
   */
  largeUint64: bigint;

  /**
   * @generated from field: optional int32 small_int32 = 4 [default = -2147483647];
   */
  smallInt32: number;

  /**
   * @generated from field: optional int64 small_int64 = 5 [default = -9223372036854775807];
   */
  smallInt64: bigint;

  /**
   * @generated from field: optional int32 really_small_int32 = 21 [default = -2147483648];
   */
  reallySmallInt32: number;

  /**
   * @generated from field: optional int64 really_small_int64 = 22 [default = -9223372036854775808];
   */
  reallySmallInt64: bigint;

  /**
   * The default value here is UTF-8 for "\u1234".  (We could also just type
   * the UTF-8 text directly into this text file rather than escape it, but
   * lots of people use editors that would be confused by this.)
   *
   * @generated from field: optional string utf8_string = 6 [default = "ሴ"];
   */
  utf8String: string;

  /**
   * Tests for single-precision floating-point values.
   *
   * @generated from field: optional float zero_float = 7 [default = 0];
   */
  zeroFloat: number;

  /**
   * @generated from field: optional float one_float = 8 [default = 1];
   */
  oneFloat: number;

  /**
   * @generated from field: optional float small_float = 9 [default = 1.5];
   */
  smallFloat: number;

  /**
   * @generated from field: optional float negative_one_float = 10 [default = -1];
   */
  negativeOneFloat: number;

  /**
   * @generated from field: optional float negative_float = 11 [default = -1.5];
   */
  negativeFloat: number;

  /**
   * Using exponents
   *
   * @generated from field: optional float large_float = 12 [default = 2e+08];
   */
  largeFloat: number;

  /**
   * @generated from field: optional float small_negative_float = 13 [default = -8e-28];
   */
  smallNegativeFloat: number;

  /**
   * Text for nonfinite floating-point values.
   *
   * @generated from field: optional double inf_double = 14 [default = inf];
   */
  infDouble: number;

  /**
   * @generated from field: optional double neg_inf_double = 15 [default = -inf];
   */
  negInfDouble: number;

  /**
   * @generated from field: optional double nan_double = 16 [default = nan];
   */
  nanDouble: number;

  /**
   * @generated from field: optional float inf_float = 17 [default = inf];
   */
  infFloat: number;

  /**
   * @generated from field: optional float neg_inf_float = 18 [default = -inf];
   */
  negInfFloat: number;

  /**
   * @generated from field: optional float nan_float = 19 [default = nan];
   */
  nanFloat: number;

  /**
   * Tests for C++ trigraphs.
   * Trigraphs should be escaped in C++ generated files, but they should not be
   * escaped for other languages.
   * Note that in .proto file, "\?" is a valid way to escape ? in string
   * literals.
   *
   * @generated from field: optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
   */
  cppTrigraph: string;

  /**
   * String defaults containing the character '\000'
   *
   * @generated from field: optional string string_with_zero = 23 [default = "hel lo"];
   */
  stringWithZero: string;

  /**
   * @generated from field: optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
   */
  bytesWithZero: Uint8Array;

  /**
   * @generated from field: optional string string_piece_with_zero = 25 [default = "ab c"];
   */
  stringPieceWithZero: string;

  /**
   * @generated from field: optional string cord_with_zero = 26 [default = "12 3"];
   */
  cordWithZero: string;

  /**
   * @generated from field: optional string replacement_string = 27 [default = "${unknown}"];
   */
  replacementString: string;
};

// Describes the message protobuf_unittest.TestExtremeDefaultValues.
// Use `create(TestExtremeDefaultValuesDesc)` to create a new TestExtremeDefaultValues.
export const TestExtremeDefaultValuesDesc: GenDescMessage<TestExtremeDefaultValues> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 45);

/**
 * @generated from message protobuf_unittest.SparseEnumMessage
 */
export type SparseEnumMessage = Message<"protobuf_unittest.SparseEnumMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestSparseEnum sparse_enum = 1;
   */
  sparseEnum: TestSparseEnum;
};

// Describes the message protobuf_unittest.SparseEnumMessage.
// Use `create(SparseEnumMessageDesc)` to create a new SparseEnumMessage.
export const SparseEnumMessageDesc: GenDescMessage<SparseEnumMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 46);

/**
 * Test String and Bytes: string is for valid UTF-8 strings
 *
 * @generated from message protobuf_unittest.OneString
 */
export type OneString = Message<"protobuf_unittest.OneString"> & {
  /**
   * @generated from field: optional string data = 1;
   */
  data: string;
};

// Describes the message protobuf_unittest.OneString.
// Use `create(OneStringDesc)` to create a new OneString.
export const OneStringDesc: GenDescMessage<OneString> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 47);

/**
 * @generated from message protobuf_unittest.MoreString
 */
export type MoreString = Message<"protobuf_unittest.MoreString"> & {
  /**
   * @generated from field: repeated string data = 1;
   */
  data: string[];
};

// Describes the message protobuf_unittest.MoreString.
// Use `create(MoreStringDesc)` to create a new MoreString.
export const MoreStringDesc: GenDescMessage<MoreString> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 48);

/**
 * @generated from message protobuf_unittest.OneBytes
 */
export type OneBytes = Message<"protobuf_unittest.OneBytes"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;
};

// Describes the message protobuf_unittest.OneBytes.
// Use `create(OneBytesDesc)` to create a new OneBytes.
export const OneBytesDesc: GenDescMessage<OneBytes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 49);

/**
 * @generated from message protobuf_unittest.MoreBytes
 */
export type MoreBytes = Message<"protobuf_unittest.MoreBytes"> & {
  /**
   * @generated from field: repeated bytes data = 1;
   */
  data: Uint8Array[];
};

// Describes the message protobuf_unittest.MoreBytes.
// Use `create(MoreBytesDesc)` to create a new MoreBytes.
export const MoreBytesDesc: GenDescMessage<MoreBytes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 50);

/**
 * @generated from message protobuf_unittest.ManyOptionalString
 */
export type ManyOptionalString = Message<"protobuf_unittest.ManyOptionalString"> & {
  /**
   * @generated from field: optional string str1 = 1;
   */
  str1: string;

  /**
   * @generated from field: optional string str2 = 2;
   */
  str2: string;

  /**
   * @generated from field: optional string str3 = 3;
   */
  str3: string;

  /**
   * @generated from field: optional string str4 = 4;
   */
  str4: string;

  /**
   * @generated from field: optional string str5 = 5;
   */
  str5: string;

  /**
   * @generated from field: optional string str6 = 6;
   */
  str6: string;

  /**
   * @generated from field: optional string str7 = 7;
   */
  str7: string;

  /**
   * @generated from field: optional string str8 = 8;
   */
  str8: string;

  /**
   * @generated from field: optional string str9 = 9;
   */
  str9: string;

  /**
   * @generated from field: optional string str10 = 10;
   */
  str10: string;

  /**
   * @generated from field: optional string str11 = 11;
   */
  str11: string;

  /**
   * @generated from field: optional string str12 = 12;
   */
  str12: string;

  /**
   * @generated from field: optional string str13 = 13;
   */
  str13: string;

  /**
   * @generated from field: optional string str14 = 14;
   */
  str14: string;

  /**
   * @generated from field: optional string str15 = 15;
   */
  str15: string;

  /**
   * @generated from field: optional string str16 = 16;
   */
  str16: string;

  /**
   * @generated from field: optional string str17 = 17;
   */
  str17: string;

  /**
   * @generated from field: optional string str18 = 18;
   */
  str18: string;

  /**
   * @generated from field: optional string str19 = 19;
   */
  str19: string;

  /**
   * @generated from field: optional string str20 = 20;
   */
  str20: string;

  /**
   * @generated from field: optional string str21 = 21;
   */
  str21: string;

  /**
   * @generated from field: optional string str22 = 22;
   */
  str22: string;

  /**
   * @generated from field: optional string str23 = 23;
   */
  str23: string;

  /**
   * @generated from field: optional string str24 = 24;
   */
  str24: string;

  /**
   * @generated from field: optional string str25 = 25;
   */
  str25: string;

  /**
   * @generated from field: optional string str26 = 26;
   */
  str26: string;

  /**
   * @generated from field: optional string str27 = 27;
   */
  str27: string;

  /**
   * @generated from field: optional string str28 = 28;
   */
  str28: string;

  /**
   * @generated from field: optional string str29 = 29;
   */
  str29: string;

  /**
   * @generated from field: optional string str30 = 30;
   */
  str30: string;

  /**
   * @generated from field: optional string str31 = 31;
   */
  str31: string;

  /**
   * @generated from field: optional string str32 = 32;
   */
  str32: string;
};

// Describes the message protobuf_unittest.ManyOptionalString.
// Use `create(ManyOptionalStringDesc)` to create a new ManyOptionalString.
export const ManyOptionalStringDesc: GenDescMessage<ManyOptionalString> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 51);

/**
 * Test int32, uint32, int64, uint64, and bool are all compatible
 *
 * @generated from message protobuf_unittest.Int32Message
 */
export type Int32Message = Message<"protobuf_unittest.Int32Message"> & {
  /**
   * @generated from field: optional int32 data = 1;
   */
  data: number;
};

// Describes the message protobuf_unittest.Int32Message.
// Use `create(Int32MessageDesc)` to create a new Int32Message.
export const Int32MessageDesc: GenDescMessage<Int32Message> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 52);

/**
 * @generated from message protobuf_unittest.Uint32Message
 */
export type Uint32Message = Message<"protobuf_unittest.Uint32Message"> & {
  /**
   * @generated from field: optional uint32 data = 1;
   */
  data: number;
};

// Describes the message protobuf_unittest.Uint32Message.
// Use `create(Uint32MessageDesc)` to create a new Uint32Message.
export const Uint32MessageDesc: GenDescMessage<Uint32Message> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 53);

/**
 * @generated from message protobuf_unittest.Int64Message
 */
export type Int64Message = Message<"protobuf_unittest.Int64Message"> & {
  /**
   * @generated from field: optional int64 data = 1;
   */
  data: bigint;
};

// Describes the message protobuf_unittest.Int64Message.
// Use `create(Int64MessageDesc)` to create a new Int64Message.
export const Int64MessageDesc: GenDescMessage<Int64Message> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 54);

/**
 * @generated from message protobuf_unittest.Uint64Message
 */
export type Uint64Message = Message<"protobuf_unittest.Uint64Message"> & {
  /**
   * @generated from field: optional uint64 data = 1;
   */
  data: bigint;
};

// Describes the message protobuf_unittest.Uint64Message.
// Use `create(Uint64MessageDesc)` to create a new Uint64Message.
export const Uint64MessageDesc: GenDescMessage<Uint64Message> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 55);

/**
 * @generated from message protobuf_unittest.BoolMessage
 */
export type BoolMessage = Message<"protobuf_unittest.BoolMessage"> & {
  /**
   * @generated from field: optional bool data = 1;
   */
  data: boolean;
};

// Describes the message protobuf_unittest.BoolMessage.
// Use `create(BoolMessageDesc)` to create a new BoolMessage.
export const BoolMessageDesc: GenDescMessage<BoolMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 56);

/**
 * Test oneofs.
 *
 * @generated from message protobuf_unittest.TestOneof
 */
export type TestOneof = Message<"protobuf_unittest.TestOneof"> & {
  /**
   * @generated from oneof protobuf_unittest.TestOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes foo_message = 3;
     */
    value: TestAllTypes;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof.FooGroup foogroup = 4;
     */
    value: TestOneof_FooGroup;
    case: "foogroup";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestOneof.
// Use `create(TestOneofDesc)` to create a new TestOneof.
export const TestOneofDesc: GenDescMessage<TestOneof> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 57);

/**
 * @generated from message protobuf_unittest.TestOneof.FooGroup
 */
export type TestOneof_FooGroup = Message<"protobuf_unittest.TestOneof.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b: string;
};

// Describes the message protobuf_unittest.TestOneof.FooGroup.
// Use `create(TestOneof_FooGroupDesc)` to create a new TestOneof_FooGroup.
export const TestOneof_FooGroupDesc: GenDescMessage<TestOneof_FooGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 57, 0);

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible
 */
export type TestOneofBackwardsCompatible = Message<"protobuf_unittest.TestOneofBackwardsCompatible"> & {
  /**
   * @generated from field: optional int32 foo_int = 1;
   */
  fooInt: number;

  /**
   * @generated from field: optional string foo_string = 2;
   */
  fooString: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes foo_message = 3;
   */
  fooMessage?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestOneofBackwardsCompatible.FooGroup foogroup = 4;
   */
  foogroup?: TestOneofBackwardsCompatible_FooGroup;
};

// Describes the message protobuf_unittest.TestOneofBackwardsCompatible.
// Use `create(TestOneofBackwardsCompatibleDesc)` to create a new TestOneofBackwardsCompatible.
export const TestOneofBackwardsCompatibleDesc: GenDescMessage<TestOneofBackwardsCompatible> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 58);

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup
 */
export type TestOneofBackwardsCompatible_FooGroup = Message<"protobuf_unittest.TestOneofBackwardsCompatible.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b: string;
};

// Describes the message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.
// Use `create(TestOneofBackwardsCompatible_FooGroupDesc)` to create a new TestOneofBackwardsCompatible_FooGroup.
export const TestOneofBackwardsCompatible_FooGroupDesc: GenDescMessage<TestOneofBackwardsCompatible_FooGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 58, 0);

/**
 * @generated from message protobuf_unittest.TestOneof2
 */
export type TestOneof2 = Message<"protobuf_unittest.TestOneof2"> & {
  /**
   * @generated from oneof protobuf_unittest.TestOneof2.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: string foo_cord = 3;
     */
    value: string;
    case: "fooCord";
  } | {
    /**
     * @generated from field: string foo_string_piece = 4;
     */
    value: string;
    case: "fooStringPiece";
  } | {
    /**
     * @generated from field: bytes foo_bytes = 5;
     */
    value: Uint8Array;
    case: "fooBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
     */
    value: TestOneof2_NestedEnum;
    case: "fooEnum";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
     */
    value: TestOneof2_NestedMessage;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.FooGroup foogroup = 8;
     */
    value: TestOneof2_FooGroup;
    case: "foogroup";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11;
     */
    value: TestOneof2_NestedMessage;
    case: "fooLazyMessage";
  } | {
    /**
     * @generated from field: bytes foo_bytes_cord = 30;
     */
    value: Uint8Array;
    case: "fooBytesCord";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof protobuf_unittest.TestOneof2.bar
   */
  bar: {
    /**
     * @generated from field: int32 bar_int = 12 [default = 5];
     */
    value: number;
    case: "barInt";
  } | {
    /**
     * @generated from field: string bar_string = 13 [default = "STRING"];
     */
    value: string;
    case: "barString";
  } | {
    /**
     * @generated from field: string bar_cord = 14 [default = "CORD"];
     */
    value: string;
    case: "barCord";
  } | {
    /**
     * @generated from field: string bar_string_piece = 15 [default = "SPIECE"];
     */
    value: string;
    case: "barStringPiece";
  } | {
    /**
     * @generated from field: bytes bar_bytes = 16 [default = "BYTES"];
     */
    value: Uint8Array;
    case: "barBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
     */
    value: TestOneof2_NestedEnum;
    case: "barEnum";
  } | {
    /**
     * @generated from field: string bar_string_with_empty_default = 20 [default = ""];
     */
    value: string;
    case: "barStringWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_cord_with_empty_default = 21 [default = ""];
     */
    value: string;
    case: "barCordWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_string_piece_with_empty_default = 22 [default = ""];
     */
    value: string;
    case: "barStringPieceWithEmptyDefault";
  } | {
    /**
     * @generated from field: bytes bar_bytes_with_empty_default = 23 [default = ""];
     */
    value: Uint8Array;
    case: "barBytesWithEmptyDefault";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional int32 baz_int = 18;
   */
  bazInt: number;

  /**
   * @generated from field: optional string baz_string = 19 [default = "BAZ"];
   */
  bazString: string;
};

// Describes the message protobuf_unittest.TestOneof2.
// Use `create(TestOneof2Desc)` to create a new TestOneof2.
export const TestOneof2Desc: GenDescMessage<TestOneof2> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 59);

/**
 * @generated from message protobuf_unittest.TestOneof2.FooGroup
 */
export type TestOneof2_FooGroup = Message<"protobuf_unittest.TestOneof2.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 9;
   */
  a: number;

  /**
   * @generated from field: optional string b = 10;
   */
  b: string;
};

// Describes the message protobuf_unittest.TestOneof2.FooGroup.
// Use `create(TestOneof2_FooGroupDesc)` to create a new TestOneof2_FooGroup.
export const TestOneof2_FooGroupDesc: GenDescMessage<TestOneof2_FooGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 59, 0);

/**
 * @generated from message protobuf_unittest.TestOneof2.NestedMessage
 */
export type TestOneof2_NestedMessage = Message<"protobuf_unittest.TestOneof2.NestedMessage"> & {
  /**
   * @generated from field: optional int64 moo_int = 1;
   */
  mooInt: bigint;

  /**
   * @generated from field: repeated int32 corge_int = 2;
   */
  corgeInt: number[];
};

// Describes the message protobuf_unittest.TestOneof2.NestedMessage.
// Use `create(TestOneof2_NestedMessageDesc)` to create a new TestOneof2_NestedMessage.
export const TestOneof2_NestedMessageDesc: GenDescMessage<TestOneof2_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 59, 1);

/**
 * @generated from enum protobuf_unittest.TestOneof2.NestedEnum
 */
export enum TestOneof2_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

// Describes the enum protobuf_unittest.TestOneof2.NestedEnum.
export const TestOneof2_NestedEnumDesc: GenDescEnum<TestOneof2_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 59, 0);

/**
 * @generated from message protobuf_unittest.TestRequiredOneof
 */
export type TestRequiredOneof = Message<"protobuf_unittest.TestRequiredOneof"> & {
  /**
   * @generated from oneof protobuf_unittest.TestRequiredOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
     */
    value: TestRequiredOneof_NestedMessage;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4;
     */
    value: TestRequiredOneof_NestedMessage;
    case: "fooLazyMessage";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestRequiredOneof.
// Use `create(TestRequiredOneofDesc)` to create a new TestRequiredOneof.
export const TestRequiredOneofDesc: GenDescMessage<TestRequiredOneof> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 60);

/**
 * @generated from message protobuf_unittest.TestRequiredOneof.NestedMessage
 */
export type TestRequiredOneof_NestedMessage = Message<"protobuf_unittest.TestRequiredOneof.NestedMessage"> & {
  /**
   * @generated from field: required double required_double = 1;
   */
  requiredDouble: number;
};

// Describes the message protobuf_unittest.TestRequiredOneof.NestedMessage.
// Use `create(TestRequiredOneof_NestedMessageDesc)` to create a new TestRequiredOneof_NestedMessage.
export const TestRequiredOneof_NestedMessageDesc: GenDescMessage<TestRequiredOneof_NestedMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 60, 0);

/**
 * @generated from message protobuf_unittest.TestPackedTypes
 */
export type TestPackedTypes = Message<"protobuf_unittest.TestPackedTypes"> & {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnum[];
};

// Describes the message protobuf_unittest.TestPackedTypes.
// Use `create(TestPackedTypesDesc)` to create a new TestPackedTypes.
export const TestPackedTypesDesc: GenDescMessage<TestPackedTypes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 61);

/**
 * A message with the same fields as TestPackedTypes, but without packing. Used
 * to test packed <-> unpacked wire compatibility.
 *
 * @generated from message protobuf_unittest.TestUnpackedTypes
 */
export type TestUnpackedTypes = Message<"protobuf_unittest.TestUnpackedTypes"> & {
  /**
   * @generated from field: repeated int32 unpacked_int32 = 90 [packed = false];
   */
  unpackedInt32: number[];

  /**
   * @generated from field: repeated int64 unpacked_int64 = 91 [packed = false];
   */
  unpackedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 unpacked_uint32 = 92 [packed = false];
   */
  unpackedUint32: number[];

  /**
   * @generated from field: repeated uint64 unpacked_uint64 = 93 [packed = false];
   */
  unpackedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 unpacked_sint32 = 94 [packed = false];
   */
  unpackedSint32: number[];

  /**
   * @generated from field: repeated sint64 unpacked_sint64 = 95 [packed = false];
   */
  unpackedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 unpacked_fixed32 = 96 [packed = false];
   */
  unpackedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 unpacked_fixed64 = 97 [packed = false];
   */
  unpackedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
   */
  unpackedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
   */
  unpackedSfixed64: bigint[];

  /**
   * @generated from field: repeated float unpacked_float = 100 [packed = false];
   */
  unpackedFloat: number[];

  /**
   * @generated from field: repeated double unpacked_double = 101 [packed = false];
   */
  unpackedDouble: number[];

  /**
   * @generated from field: repeated bool unpacked_bool = 102 [packed = false];
   */
  unpackedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
   */
  unpackedEnum: ForeignEnum[];
};

// Describes the message protobuf_unittest.TestUnpackedTypes.
// Use `create(TestUnpackedTypesDesc)` to create a new TestUnpackedTypes.
export const TestUnpackedTypesDesc: GenDescMessage<TestUnpackedTypes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 62);

/**
 * @generated from message protobuf_unittest.TestPackedExtensions
 */
export type TestPackedExtensions = Message<"protobuf_unittest.TestPackedExtensions"> & {
};

// Describes the message protobuf_unittest.TestPackedExtensions.
// Use `create(TestPackedExtensionsDesc)` to create a new TestPackedExtensions.
export const TestPackedExtensionsDesc: GenDescMessage<TestPackedExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 63);

/**
 * @generated from message protobuf_unittest.TestUnpackedExtensions
 */
export type TestUnpackedExtensions = Message<"protobuf_unittest.TestUnpackedExtensions"> & {
};

// Describes the message protobuf_unittest.TestUnpackedExtensions.
// Use `create(TestUnpackedExtensionsDesc)` to create a new TestUnpackedExtensions.
export const TestUnpackedExtensionsDesc: GenDescMessage<TestUnpackedExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 64);

/**
 * Used by ExtensionSetTest/DynamicExtensions.  The test actually builds
 * a set of extensions to TestAllExtensions dynamically, based on the fields
 * of this message type.
 *
 * @generated from message protobuf_unittest.TestDynamicExtensions
 */
export type TestDynamicExtensions = Message<"protobuf_unittest.TestDynamicExtensions"> & {
  /**
   * @generated from field: optional fixed32 scalar_extension = 2000;
   */
  scalarExtension: number;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum enum_extension = 2001;
   */
  enumExtension: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
   */
  dynamicEnumExtension: TestDynamicExtensions_DynamicEnumType;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage message_extension = 2003;
   */
  messageExtension?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
   */
  dynamicMessageExtension?: TestDynamicExtensions_DynamicMessageType;

  /**
   * @generated from field: repeated string repeated_extension = 2005;
   */
  repeatedExtension: string[];

  /**
   * @generated from field: repeated sint32 packed_extension = 2006 [packed = true];
   */
  packedExtension: number[];
};

// Describes the message protobuf_unittest.TestDynamicExtensions.
// Use `create(TestDynamicExtensionsDesc)` to create a new TestDynamicExtensions.
export const TestDynamicExtensionsDesc: GenDescMessage<TestDynamicExtensions> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 65);

/**
 * @generated from message protobuf_unittest.TestDynamicExtensions.DynamicMessageType
 */
export type TestDynamicExtensions_DynamicMessageType = Message<"protobuf_unittest.TestDynamicExtensions.DynamicMessageType"> & {
  /**
   * @generated from field: optional int32 dynamic_field = 2100;
   */
  dynamicField: number;
};

// Describes the message protobuf_unittest.TestDynamicExtensions.DynamicMessageType.
// Use `create(TestDynamicExtensions_DynamicMessageTypeDesc)` to create a new TestDynamicExtensions_DynamicMessageType.
export const TestDynamicExtensions_DynamicMessageTypeDesc: GenDescMessage<TestDynamicExtensions_DynamicMessageType> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 65, 0);

/**
 * @generated from enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType
 */
export enum TestDynamicExtensions_DynamicEnumType {
  /**
   * @generated from enum value: DYNAMIC_FOO = 2200;
   */
  DYNAMIC_FOO = 2200,

  /**
   * @generated from enum value: DYNAMIC_BAR = 2201;
   */
  DYNAMIC_BAR = 2201,

  /**
   * @generated from enum value: DYNAMIC_BAZ = 2202;
   */
  DYNAMIC_BAZ = 2202,
}

// Describes the enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType.
export const TestDynamicExtensions_DynamicEnumTypeDesc: GenDescEnum<TestDynamicExtensions_DynamicEnumType> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 65, 0);

/**
 * @generated from message protobuf_unittest.TestRepeatedString
 */
export type TestRepeatedString = Message<"protobuf_unittest.TestRepeatedString"> & {
  /**
   * @generated from field: repeated string repeated_string1 = 1;
   */
  repeatedString1: string[];

  /**
   * @generated from field: repeated string repeated_string2 = 2;
   */
  repeatedString2: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes11 = 11;
   */
  repeatedBytes11: Uint8Array[];

  /**
   * @generated from field: repeated bytes repeated_bytes12 = 12;
   */
  repeatedBytes12: Uint8Array[];
};

// Describes the message protobuf_unittest.TestRepeatedString.
// Use `create(TestRepeatedStringDesc)` to create a new TestRepeatedString.
export const TestRepeatedStringDesc: GenDescMessage<TestRepeatedString> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 66);

/**
 * @generated from message protobuf_unittest.TestRepeatedScalarDifferentTagSizes
 */
export type TestRepeatedScalarDifferentTagSizes = Message<"protobuf_unittest.TestRepeatedScalarDifferentTagSizes"> & {
  /**
   * Parsing repeated fixed size values used to fail. This message needs to be
   * used in order to get a tag of the right size; all of the repeated fields
   * in TestAllTypes didn't trigger the check.
   *
   * @generated from field: repeated fixed32 repeated_fixed32 = 12;
   */
  repeatedFixed32: number[];

  /**
   * Check for a varint type, just for good measure.
   *
   * @generated from field: repeated int32 repeated_int32 = 13;
   */
  repeatedInt32: number[];

  /**
   * These have two-byte tags.
   *
   * @generated from field: repeated fixed64 repeated_fixed64 = 2046;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 2047;
   */
  repeatedInt64: bigint[];

  /**
   * Three byte tags.
   *
   * @generated from field: repeated float repeated_float = 262142;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 262143;
   */
  repeatedUint64: bigint[];
};

// Describes the message protobuf_unittest.TestRepeatedScalarDifferentTagSizes.
// Use `create(TestRepeatedScalarDifferentTagSizesDesc)` to create a new TestRepeatedScalarDifferentTagSizes.
export const TestRepeatedScalarDifferentTagSizesDesc: GenDescMessage<TestRepeatedScalarDifferentTagSizes> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 67);

/**
 * Test that if an optional or required message/group field appears multiple
 * times in the input, they need to be merged.
 *
 * @generated from message protobuf_unittest.TestParsingMerge
 */
export type TestParsingMerge = Message<"protobuf_unittest.TestParsingMerge"> & {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypes required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMerge.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMerge_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMerge_RepeatedGroup[];
};

// Describes the message protobuf_unittest.TestParsingMerge.
// Use `create(TestParsingMergeDesc)` to create a new TestParsingMerge.
export const TestParsingMergeDesc: GenDescMessage<TestParsingMerge> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68);

/**
 * RepeatedFieldsGenerator defines matching field types as TestParsingMerge,
 * except that all fields are repeated. In the tests, we will serialize the
 * RepeatedFieldsGenerator to bytes, and parse the bytes to TestParsingMerge.
 * Repeated fields in RepeatedFieldsGenerator are expected to be merged into
 * the corresponding required/optional fields in TestParsingMerge.
 *
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator
 */
export type TestParsingMerge_RepeatedFieldsGenerator = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field1 = 1;
   */
  field1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field2 = 2;
   */
  field2: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field3 = 3;
   */
  field3: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMerge_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMerge_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext1 = 1000;
   */
  ext1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext2 = 1001;
   */
  ext2: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.
// Use `create(TestParsingMerge_RepeatedFieldsGeneratorDesc)` to create a new TestParsingMerge_RepeatedFieldsGenerator.
export const TestParsingMerge_RepeatedFieldsGeneratorDesc: GenDescMessage<TestParsingMerge_RepeatedFieldsGenerator> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68, 0);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1
 */
export type TestParsingMerge_RepeatedFieldsGenerator_Group1 = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 11;
   */
  field1?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.
// Use `create(TestParsingMerge_RepeatedFieldsGenerator_Group1Desc)` to create a new TestParsingMerge_RepeatedFieldsGenerator_Group1.
export const TestParsingMerge_RepeatedFieldsGenerator_Group1Desc: GenDescMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68, 0, 0);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2
 */
export type TestParsingMerge_RepeatedFieldsGenerator_Group2 = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 21;
   */
  field1?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.
// Use `create(TestParsingMerge_RepeatedFieldsGenerator_Group2Desc)` to create a new TestParsingMerge_RepeatedFieldsGenerator_Group2.
export const TestParsingMerge_RepeatedFieldsGenerator_Group2Desc: GenDescMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68, 0, 1);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.OptionalGroup
 */
export type TestParsingMerge_OptionalGroup = Message<"protobuf_unittest.TestParsingMerge.OptionalGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestParsingMerge.OptionalGroup.
// Use `create(TestParsingMerge_OptionalGroupDesc)` to create a new TestParsingMerge_OptionalGroup.
export const TestParsingMerge_OptionalGroupDesc: GenDescMessage<TestParsingMerge_OptionalGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68, 1);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedGroup
 */
export type TestParsingMerge_RepeatedGroup = Message<"protobuf_unittest.TestParsingMerge.RepeatedGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypes;
};

// Describes the message protobuf_unittest.TestParsingMerge.RepeatedGroup.
// Use `create(TestParsingMerge_RepeatedGroupDesc)` to create a new TestParsingMerge_RepeatedGroup.
export const TestParsingMerge_RepeatedGroupDesc: GenDescMessage<TestParsingMerge_RepeatedGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 68, 2);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes optional_ext = 1000;
 */
export const TestParsingMerge_optional_ext: GenDescExtension<TestParsingMerge, TestAllTypes> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 68, 0);

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes repeated_ext = 1001;
 */
export const TestParsingMerge_repeated_ext: GenDescExtension<TestParsingMerge, TestAllTypes[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 68, 1);

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeException
 */
export type TestMergeException = Message<"protobuf_unittest.TestMergeException"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions all_extensions = 1;
   */
  allExtensions?: TestAllExtensions;
};

// Describes the message protobuf_unittest.TestMergeException.
// Use `create(TestMergeExceptionDesc)` to create a new TestMergeException.
export const TestMergeExceptionDesc: GenDescMessage<TestMergeException> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 69);

/**
 * @generated from message protobuf_unittest.TestCommentInjectionMessage
 */
export type TestCommentInjectionMessage = Message<"protobuf_unittest.TestCommentInjectionMessage"> & {
  /**
   * *\/ <- This should not close the generated doc comment
   *
   * @generated from field: optional string a = 1 [default = "*\/ <- Neither should this."];
   */
  a: string;
};

// Describes the message protobuf_unittest.TestCommentInjectionMessage.
// Use `create(TestCommentInjectionMessageDesc)` to create a new TestCommentInjectionMessage.
export const TestCommentInjectionMessageDesc: GenDescMessage<TestCommentInjectionMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 70);

/**
 * Used to check that the c++ code generator re-orders messages to reduce
 * padding.
 *
 * @generated from message protobuf_unittest.TestMessageSize
 */
export type TestMessageSize = Message<"protobuf_unittest.TestMessageSize"> & {
  /**
   * @generated from field: optional bool m1 = 1;
   */
  m1: boolean;

  /**
   * @generated from field: optional int64 m2 = 2;
   */
  m2: bigint;

  /**
   * @generated from field: optional bool m3 = 3;
   */
  m3: boolean;

  /**
   * @generated from field: optional string m4 = 4;
   */
  m4: string;

  /**
   * @generated from field: optional int32 m5 = 5;
   */
  m5: number;

  /**
   * @generated from field: optional int64 m6 = 6;
   */
  m6: bigint;
};

// Describes the message protobuf_unittest.TestMessageSize.
// Use `create(TestMessageSizeDesc)` to create a new TestMessageSize.
export const TestMessageSizeDesc: GenDescMessage<TestMessageSize> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 71);

/**
 * Test that RPC services work.
 *
 * @generated from message protobuf_unittest.FooRequest
 */
export type FooRequest = Message<"protobuf_unittest.FooRequest"> & {
};

// Describes the message protobuf_unittest.FooRequest.
// Use `create(FooRequestDesc)` to create a new FooRequest.
export const FooRequestDesc: GenDescMessage<FooRequest> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 72);

/**
 * @generated from message protobuf_unittest.FooResponse
 */
export type FooResponse = Message<"protobuf_unittest.FooResponse"> & {
};

// Describes the message protobuf_unittest.FooResponse.
// Use `create(FooResponseDesc)` to create a new FooResponse.
export const FooResponseDesc: GenDescMessage<FooResponse> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 73);

/**
 * @generated from message protobuf_unittest.FooClientMessage
 */
export type FooClientMessage = Message<"protobuf_unittest.FooClientMessage"> & {
};

// Describes the message protobuf_unittest.FooClientMessage.
// Use `create(FooClientMessageDesc)` to create a new FooClientMessage.
export const FooClientMessageDesc: GenDescMessage<FooClientMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 74);

/**
 * @generated from message protobuf_unittest.FooServerMessage
 */
export type FooServerMessage = Message<"protobuf_unittest.FooServerMessage"> & {
};

// Describes the message protobuf_unittest.FooServerMessage.
// Use `create(FooServerMessageDesc)` to create a new FooServerMessage.
export const FooServerMessageDesc: GenDescMessage<FooServerMessage> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 75);

/**
 * @generated from message protobuf_unittest.BarRequest
 */
export type BarRequest = Message<"protobuf_unittest.BarRequest"> & {
};

// Describes the message protobuf_unittest.BarRequest.
// Use `create(BarRequestDesc)` to create a new BarRequest.
export const BarRequestDesc: GenDescMessage<BarRequest> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 76);

/**
 * @generated from message protobuf_unittest.BarResponse
 */
export type BarResponse = Message<"protobuf_unittest.BarResponse"> & {
};

// Describes the message protobuf_unittest.BarResponse.
// Use `create(BarResponseDesc)` to create a new BarResponse.
export const BarResponseDesc: GenDescMessage<BarResponse> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 77);

/**
 * @generated from message protobuf_unittest.TestJsonName
 */
export type TestJsonName = Message<"protobuf_unittest.TestJsonName"> & {
  /**
   * @generated from field: optional int32 field_name1 = 1;
   */
  fieldName1: number;

  /**
   * @generated from field: optional int32 fieldName2 = 2;
   */
  fieldName2: number;

  /**
   * @generated from field: optional int32 FieldName3 = 3;
   */
  FieldName3: number;

  /**
   * @generated from field: optional int32 _field_name4 = 4;
   */
  FieldName4: number;

  /**
   * @generated from field: optional int32 FIELD_NAME5 = 5;
   */
  FIELDNAME5: number;

  /**
   * @generated from field: optional int32 field_name6 = 6 [json_name = "@type"];
   */
  fieldName6: number;

  /**
   * @generated from field: optional int32 fieldname7 = 7;
   */
  fieldname7: number;
};

// Describes the message protobuf_unittest.TestJsonName.
// Use `create(TestJsonNameDesc)` to create a new TestJsonName.
export const TestJsonNameDesc: GenDescMessage<TestJsonName> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 78);

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers
 */
export type TestHugeFieldNumbers = Message<"protobuf_unittest.TestHugeFieldNumbers"> & {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_enum = 536870004;
   */
  optionalEnum: ForeignEnum;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_message = 536870007;
   */
  optionalMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbers.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbers_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbers.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes oneof_test_all_types = 536870012;
     */
    value: TestAllTypes;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestHugeFieldNumbers.
// Use `create(TestHugeFieldNumbersDesc)` to create a new TestHugeFieldNumbers.
export const TestHugeFieldNumbersDesc: GenDescMessage<TestHugeFieldNumbers> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 79);

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup
 */
export type TestHugeFieldNumbers_OptionalGroup = Message<"protobuf_unittest.TestHugeFieldNumbers.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA: number;
};

// Describes the message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.
// Use `create(TestHugeFieldNumbers_OptionalGroupDesc)` to create a new TestHugeFieldNumbers_OptionalGroup.
export const TestHugeFieldNumbers_OptionalGroupDesc: GenDescMessage<TestHugeFieldNumbers_OptionalGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 79, 0);

/**
 * @generated from message protobuf_unittest.TestExtensionInsideTable
 */
export type TestExtensionInsideTable = Message<"protobuf_unittest.TestExtensionInsideTable"> & {
  /**
   * @generated from field: optional int32 field1 = 1;
   */
  field1: number;

  /**
   * @generated from field: optional int32 field2 = 2;
   */
  field2: number;

  /**
   * @generated from field: optional int32 field3 = 3;
   */
  field3: number;

  /**
   * @generated from field: optional int32 field4 = 4;
   */
  field4: number;

  /**
   * @generated from field: optional int32 field6 = 6;
   */
  field6: number;

  /**
   * @generated from field: optional int32 field7 = 7;
   */
  field7: number;

  /**
   * @generated from field: optional int32 field8 = 8;
   */
  field8: number;

  /**
   * @generated from field: optional int32 field9 = 9;
   */
  field9: number;

  /**
   * @generated from field: optional int32 field10 = 10;
   */
  field10: number;
};

// Describes the message protobuf_unittest.TestExtensionInsideTable.
// Use `create(TestExtensionInsideTableDesc)` to create a new TestExtensionInsideTable.
export const TestExtensionInsideTableDesc: GenDescMessage<TestExtensionInsideTable> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 80);

/**
 * NOTE: Intentionally nested to mirror go/glep.
 *
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter
 */
export type TestNestedGroupExtensionOuter = Message<"protobuf_unittest.TestNestedGroupExtensionOuter"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup layer1optionalgroup = 1;
   */
  layer1optionalgroup?: TestNestedGroupExtensionOuter_Layer1OptionalGroup;
};

// Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.
// Use `create(TestNestedGroupExtensionOuterDesc)` to create a new TestNestedGroupExtensionOuter.
export const TestNestedGroupExtensionOuterDesc: GenDescMessage<TestNestedGroupExtensionOuter> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 81);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup
 */
export type TestNestedGroupExtensionOuter_Layer1OptionalGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup layer2repeatedgroup = 2;
   */
  layer2repeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup layer2anotheroptionalrepeatedgroup = 4;
   */
  layer2anotheroptionalrepeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup[];
};

// Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.
// Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroupDesc)` to create a new TestNestedGroupExtensionOuter_Layer1OptionalGroup.
export const TestNestedGroupExtensionOuter_Layer1OptionalGroupDesc: GenDescMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 81, 0);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup
 */
export type TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup"> & {
  /**
   * @generated from field: optional string another_field = 6;
   */
  anotherField: string;
};

// Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.
// Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDesc)` to create a new TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup.
export const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDesc: GenDescMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 81, 0, 0);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup
 */
export type TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup"> & {
  /**
   * @generated from field: optional string but_why_tho = 5;
   */
  butWhyTho: string;
};

// Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.
// Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDesc)` to create a new TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup.
export const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDesc: GenDescMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 81, 0, 1);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionInnerExtension
 */
export type TestNestedGroupExtensionInnerExtension = Message<"protobuf_unittest.TestNestedGroupExtensionInnerExtension"> & {
  /**
   * @generated from field: optional string inner_name = 1;
   */
  innerName: string;
};

// Describes the message protobuf_unittest.TestNestedGroupExtensionInnerExtension.
// Use `create(TestNestedGroupExtensionInnerExtensionDesc)` to create a new TestNestedGroupExtensionInnerExtension.
export const TestNestedGroupExtensionInnerExtensionDesc: GenDescMessage<TestNestedGroupExtensionInnerExtension> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 82);

/**
 * @generated from message protobuf_unittest.TestExtensionRangeSerialize
 */
export type TestExtensionRangeSerialize = Message<"protobuf_unittest.TestExtensionRangeSerialize"> & {
  /**
   * @generated from field: optional int32 foo_one = 1;
   */
  fooOne: number;

  /**
   * @generated from field: optional int32 foo_two = 6;
   */
  fooTwo: number;

  /**
   * @generated from field: optional int32 foo_three = 7;
   */
  fooThree: number;

  /**
   * @generated from field: optional int32 foo_four = 13;
   */
  fooFour: number;
};

// Describes the message protobuf_unittest.TestExtensionRangeSerialize.
// Use `create(TestExtensionRangeSerializeDesc)` to create a new TestExtensionRangeSerialize.
export const TestExtensionRangeSerializeDesc: GenDescMessage<TestExtensionRangeSerialize> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 83);

/**
 * @generated from extension: optional int32 bar_one = 2;
 */
export const TestExtensionRangeSerialize_bar_one: GenDescExtension<TestExtensionRangeSerialize, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83, 0);

/**
 * @generated from extension: optional int32 bar_two = 4;
 */
export const TestExtensionRangeSerialize_bar_two: GenDescExtension<TestExtensionRangeSerialize, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83, 1);

/**
 * @generated from extension: optional int32 bar_three = 10;
 */
export const TestExtensionRangeSerialize_bar_three: GenDescExtension<TestExtensionRangeSerialize, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83, 2);

/**
 * @generated from extension: optional int32 bar_four = 15;
 */
export const TestExtensionRangeSerialize_bar_four: GenDescExtension<TestExtensionRangeSerialize, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83, 3);

/**
 * @generated from extension: optional int32 bar_five = 19;
 */
export const TestExtensionRangeSerialize_bar_five: GenDescExtension<TestExtensionRangeSerialize, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83, 4);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32Simple
 */
export type TestVerifyInt32Simple = Message<"protobuf_unittest.TestVerifyInt32Simple"> & {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;
};

// Describes the message protobuf_unittest.TestVerifyInt32Simple.
// Use `create(TestVerifyInt32SimpleDesc)` to create a new TestVerifyInt32Simple.
export const TestVerifyInt32SimpleDesc: GenDescMessage<TestVerifyInt32Simple> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 84);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32
 */
export type TestVerifyInt32 = Message<"protobuf_unittest.TestVerifyInt32"> & {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyInt32.
// Use `create(TestVerifyInt32Desc)` to create a new TestVerifyInt32.
export const TestVerifyInt32Desc: GenDescMessage<TestVerifyInt32> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 85);

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32
 */
export type TestVerifyMostlyInt32 = Message<"protobuf_unittest.TestVerifyMostlyInt32"> & {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430: bigint;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyMostlyInt32.
// Use `create(TestVerifyMostlyInt32Desc)` to create a new TestVerifyMostlyInt32.
export const TestVerifyMostlyInt32Desc: GenDescMessage<TestVerifyMostlyInt32> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 86);

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber
 */
export type TestVerifyMostlyInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430: bigint;

  /**
   * @generated from field: optional int32 optional_int32_300 = 300;
   */
  optionalInt32300: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber.
// Use `create(TestVerifyMostlyInt32BigFieldNumberDesc)` to create a new TestVerifyMostlyInt32BigFieldNumber.
export const TestVerifyMostlyInt32BigFieldNumberDesc: GenDescMessage<TestVerifyMostlyInt32BigFieldNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 87);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32Simple
 */
export type TestVerifyUint32Simple = Message<"protobuf_unittest.TestVerifyUint32Simple"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;
};

// Describes the message protobuf_unittest.TestVerifyUint32Simple.
// Use `create(TestVerifyUint32SimpleDesc)` to create a new TestVerifyUint32Simple.
export const TestVerifyUint32SimpleDesc: GenDescMessage<TestVerifyUint32Simple> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 88);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32
 */
export type TestVerifyUint32 = Message<"protobuf_unittest.TestVerifyUint32"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyUint32.
// Use `create(TestVerifyUint32Desc)` to create a new TestVerifyUint32.
export const TestVerifyUint32Desc: GenDescMessage<TestVerifyUint32> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 89);

/**
 * @generated from message protobuf_unittest.TestVerifyOneUint32
 */
export type TestVerifyOneUint32 = Message<"protobuf_unittest.TestVerifyOneUint32"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyOneUint32.
// Use `create(TestVerifyOneUint32Desc)` to create a new TestVerifyOneUint32.
export const TestVerifyOneUint32Desc: GenDescMessage<TestVerifyOneUint32> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 90);

/**
 * @generated from message protobuf_unittest.TestVerifyOneInt32BigFieldNumber
 */
export type TestVerifyOneInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyOneInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265: number;

  /**
   * @generated from field: optional int64 optional_int64_1 = 1;
   */
  optionalInt641: bigint;

  /**
   * @generated from field: optional int64 optional_int64_2 = 2;
   */
  optionalInt642: bigint;

  /**
   * @generated from field: optional int64 optional_int64_63 = 63;
   */
  optionalInt6463: bigint;

  /**
   * @generated from field: optional int64 optional_int64_64 = 64;
   */
  optionalInt6464: bigint;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyOneInt32BigFieldNumber.
// Use `create(TestVerifyOneInt32BigFieldNumberDesc)` to create a new TestVerifyOneInt32BigFieldNumber.
export const TestVerifyOneInt32BigFieldNumberDesc: GenDescMessage<TestVerifyOneInt32BigFieldNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 91);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32BigFieldNumber
 */
export type TestVerifyInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int32 optional_int32_1000 = 1000;
   */
  optionalInt321000: number;

  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyInt32BigFieldNumber.
// Use `create(TestVerifyInt32BigFieldNumberDesc)` to create a new TestVerifyInt32BigFieldNumber.
export const TestVerifyInt32BigFieldNumberDesc: GenDescMessage<TestVerifyInt32BigFieldNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 92);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32BigFieldNumber
 */
export type TestVerifyUint32BigFieldNumber = Message<"protobuf_unittest.TestVerifyUint32BigFieldNumber"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

// Describes the message protobuf_unittest.TestVerifyUint32BigFieldNumber.
// Use `create(TestVerifyUint32BigFieldNumberDesc)` to create a new TestVerifyUint32BigFieldNumber.
export const TestVerifyUint32BigFieldNumberDesc: GenDescMessage<TestVerifyUint32BigFieldNumber> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 93);

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32
 */
export type TestVerifyBigFieldNumberUint32 = Message<"protobuf_unittest.TestVerifyBigFieldNumberUint32"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;
};

// Describes the message protobuf_unittest.TestVerifyBigFieldNumberUint32.
// Use `create(TestVerifyBigFieldNumberUint32Desc)` to create a new TestVerifyBigFieldNumberUint32.
export const TestVerifyBigFieldNumberUint32Desc: GenDescMessage<TestVerifyBigFieldNumberUint32> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 94);

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested
 */
export type TestVerifyBigFieldNumberUint32_Nested = Message<"protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_5000 = 5000;
   */
  optionalUint325000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_66 = 66;
   */
  optionalUint3266: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;

  /**
   * @generated from field: repeated protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
   */
  repeatedNested: TestVerifyBigFieldNumberUint32_Nested[];
};

// Describes the message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested.
// Use `create(TestVerifyBigFieldNumberUint32_NestedDesc)` to create a new TestVerifyBigFieldNumberUint32_Nested.
export const TestVerifyBigFieldNumberUint32_NestedDesc: GenDescMessage<TestVerifyBigFieldNumberUint32_Nested> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 94, 0);

/**
 * This message contains different kind of enums to exercise the different
 * parsers in table-driven.
 *
 * @generated from message protobuf_unittest.EnumParseTester
 */
export type EnumParseTester = Message<"protobuf_unittest.EnumParseTester"> & {
  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
   */
  optionalSeqSmall0Lowfield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
   */
  optionalSeqSmall0Midfield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
   */
  optionalSeqSmall0Hifield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
   */
  repeatedSeqSmall0Lowfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
   */
  repeatedSeqSmall0Midfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
   */
  repeatedSeqSmall0Hifield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
   */
  packedSeqSmall0Lowfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
   */
  packedSeqSmall0Midfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [packed = true];
   */
  packedSeqSmall0Hifield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
   */
  optionalSeqSmall1Lowfield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
   */
  optionalSeqSmall1Midfield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
   */
  optionalSeqSmall1Hifield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
   */
  repeatedSeqSmall1Lowfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
   */
  repeatedSeqSmall1Midfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
   */
  repeatedSeqSmall1Hifield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
   */
  packedSeqSmall1Lowfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
   */
  packedSeqSmall1Midfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [packed = true];
   */
  packedSeqSmall1Hifield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
   */
  optionalSeqLargeLowfield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
   */
  optionalSeqLargeMidfield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
   */
  optionalSeqLargeHifield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
   */
  repeatedSeqLargeLowfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
   */
  repeatedSeqLargeMidfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
   */
  repeatedSeqLargeHifield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
   */
  packedSeqLargeLowfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
   */
  packedSeqLargeMidfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [packed = true];
   */
  packedSeqLargeHifield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
   */
  optionalArbitraryLowfield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
   */
  optionalArbitraryMidfield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
   */
  optionalArbitraryHifield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
   */
  repeatedArbitraryLowfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
   */
  repeatedArbitraryMidfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
   */
  repeatedArbitraryHifield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
   */
  packedArbitraryLowfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
   */
  packedArbitraryMidfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [packed = true];
   */
  packedArbitraryHifield: EnumParseTester_Arbitrary[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

// Describes the message protobuf_unittest.EnumParseTester.
// Use `create(EnumParseTesterDesc)` to create a new EnumParseTester.
export const EnumParseTesterDesc: GenDescMessage<EnumParseTester> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 95);

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqSmall0
 */
export enum EnumParseTester_SeqSmall0 {
  /**
   * @generated from enum value: SEQ_SMALL_0_DEFAULT = 0;
   */
  SEQ_SMALL_0_DEFAULT = 0,

  /**
   * @generated from enum value: SEQ_SMALL_0_1 = 1;
   */
  SEQ_SMALL_0_1 = 1,

  /**
   * @generated from enum value: SEQ_SMALL_0_2 = 2;
   */
  SEQ_SMALL_0_2 = 2,
}

// Describes the enum protobuf_unittest.EnumParseTester.SeqSmall0.
export const EnumParseTester_SeqSmall0Desc: GenDescEnum<EnumParseTester_SeqSmall0> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 95, 0);

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqSmall1
 */
export enum EnumParseTester_SeqSmall1 {
  /**
   * @generated from enum value: SEQ_SMALL_1_DEFAULT = 1;
   */
  SEQ_SMALL_1_DEFAULT = 1,

  /**
   * @generated from enum value: SEQ_SMALL_1_2 = 2;
   */
  SEQ_SMALL_1_2 = 2,

  /**
   * @generated from enum value: SEQ_SMALL_1_3 = 3;
   */
  SEQ_SMALL_1_3 = 3,
}

// Describes the enum protobuf_unittest.EnumParseTester.SeqSmall1.
export const EnumParseTester_SeqSmall1Desc: GenDescEnum<EnumParseTester_SeqSmall1> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 95, 1);

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqLarge
 */
export enum EnumParseTester_SeqLarge {
  /**
   * @generated from enum value: SEQ_LARGE_DEFAULT = -1;
   */
  SEQ_LARGE_DEFAULT = -1,

  /**
   * @generated from enum value: SEQ_LARGE_0 = 0;
   */
  SEQ_LARGE_0 = 0,

  /**
   * @generated from enum value: SEQ_LARGE_1 = 1;
   */
  SEQ_LARGE_1 = 1,

  /**
   * @generated from enum value: SEQ_LARGE_2 = 2;
   */
  SEQ_LARGE_2 = 2,

  /**
   * @generated from enum value: SEQ_LARGE_3 = 3;
   */
  SEQ_LARGE_3 = 3,

  /**
   * @generated from enum value: SEQ_LARGE_4 = 4;
   */
  SEQ_LARGE_4 = 4,

  /**
   * @generated from enum value: SEQ_LARGE_5 = 5;
   */
  SEQ_LARGE_5 = 5,

  /**
   * @generated from enum value: SEQ_LARGE_6 = 6;
   */
  SEQ_LARGE_6 = 6,

  /**
   * @generated from enum value: SEQ_LARGE_7 = 7;
   */
  SEQ_LARGE_7 = 7,

  /**
   * @generated from enum value: SEQ_LARGE_8 = 8;
   */
  SEQ_LARGE_8 = 8,

  /**
   * @generated from enum value: SEQ_LARGE_9 = 9;
   */
  SEQ_LARGE_9 = 9,

  /**
   * @generated from enum value: SEQ_LARGE_10 = 10;
   */
  SEQ_LARGE_10 = 10,

  /**
   * @generated from enum value: SEQ_LARGE_11 = 11;
   */
  SEQ_LARGE_11 = 11,

  /**
   * @generated from enum value: SEQ_LARGE_12 = 12;
   */
  SEQ_LARGE_12 = 12,

  /**
   * @generated from enum value: SEQ_LARGE_13 = 13;
   */
  SEQ_LARGE_13 = 13,

  /**
   * @generated from enum value: SEQ_LARGE_14 = 14;
   */
  SEQ_LARGE_14 = 14,

  /**
   * @generated from enum value: SEQ_LARGE_15 = 15;
   */
  SEQ_LARGE_15 = 15,

  /**
   * @generated from enum value: SEQ_LARGE_16 = 16;
   */
  SEQ_LARGE_16 = 16,

  /**
   * @generated from enum value: SEQ_LARGE_17 = 17;
   */
  SEQ_LARGE_17 = 17,

  /**
   * @generated from enum value: SEQ_LARGE_18 = 18;
   */
  SEQ_LARGE_18 = 18,

  /**
   * @generated from enum value: SEQ_LARGE_19 = 19;
   */
  SEQ_LARGE_19 = 19,

  /**
   * @generated from enum value: SEQ_LARGE_20 = 20;
   */
  SEQ_LARGE_20 = 20,

  /**
   * @generated from enum value: SEQ_LARGE_21 = 21;
   */
  SEQ_LARGE_21 = 21,

  /**
   * @generated from enum value: SEQ_LARGE_22 = 22;
   */
  SEQ_LARGE_22 = 22,

  /**
   * @generated from enum value: SEQ_LARGE_23 = 23;
   */
  SEQ_LARGE_23 = 23,

  /**
   * @generated from enum value: SEQ_LARGE_24 = 24;
   */
  SEQ_LARGE_24 = 24,

  /**
   * @generated from enum value: SEQ_LARGE_25 = 25;
   */
  SEQ_LARGE_25 = 25,

  /**
   * @generated from enum value: SEQ_LARGE_26 = 26;
   */
  SEQ_LARGE_26 = 26,

  /**
   * @generated from enum value: SEQ_LARGE_27 = 27;
   */
  SEQ_LARGE_27 = 27,

  /**
   * @generated from enum value: SEQ_LARGE_28 = 28;
   */
  SEQ_LARGE_28 = 28,

  /**
   * @generated from enum value: SEQ_LARGE_29 = 29;
   */
  SEQ_LARGE_29 = 29,

  /**
   * @generated from enum value: SEQ_LARGE_30 = 30;
   */
  SEQ_LARGE_30 = 30,

  /**
   * @generated from enum value: SEQ_LARGE_31 = 31;
   */
  SEQ_LARGE_31 = 31,

  /**
   * @generated from enum value: SEQ_LARGE_32 = 32;
   */
  SEQ_LARGE_32 = 32,

  /**
   * @generated from enum value: SEQ_LARGE_33 = 33;
   */
  SEQ_LARGE_33 = 33,
}

// Describes the enum protobuf_unittest.EnumParseTester.SeqLarge.
export const EnumParseTester_SeqLargeDesc: GenDescEnum<EnumParseTester_SeqLarge> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 95, 2);

/**
 * @generated from enum protobuf_unittest.EnumParseTester.Arbitrary
 */
export enum EnumParseTester_Arbitrary {
  /**
   * @generated from enum value: ARBITRARY_DEFAULT = -123123;
   */
  ARBITRARY_DEFAULT = -123123,

  /**
   * @generated from enum value: ARBITRARY_1 = -123;
   */
  ARBITRARY_1 = -123,

  /**
   * @generated from enum value: ARBITRARY_2 = 213;
   */
  ARBITRARY_2 = 213,

  /**
   * @generated from enum value: ARBITRARY_3 = 213213;
   */
  ARBITRARY_3 = 213213,

  /**
   * @generated from enum value: ARBITRARY_MIN = -2147483648;
   */
  ARBITRARY_MIN = -2147483648,

  /**
   * @generated from enum value: ARBITRARY_MAX = 2147483647;
   */
  ARBITRARY_MAX = 2147483647,
}

// Describes the enum protobuf_unittest.EnumParseTester.Arbitrary.
export const EnumParseTester_ArbitraryDesc: GenDescEnum<EnumParseTester_Arbitrary> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 95, 3);

/**
 * @generated from extension: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_ext = 2000000;
 */
export const EnumParseTester_optional_arbitrary_ext: GenDescExtension<EnumParseTester, EnumParseTester_Arbitrary> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 95, 0);

/**
 * @generated from extension: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_ext = 2000001;
 */
export const EnumParseTester_repeated_arbitrary_ext: GenDescExtension<EnumParseTester, EnumParseTester_Arbitrary[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 95, 1);

/**
 * @generated from extension: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_ext = 2000002 [packed = true];
 */
export const EnumParseTester_packed_arbitrary_ext: GenDescExtension<EnumParseTester, EnumParseTester_Arbitrary[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 95, 2);

/**
 * This message contains different kind of bool fields to exercise the different
 * parsers in table-drived.
 *
 * @generated from message protobuf_unittest.BoolParseTester
 */
export type BoolParseTester = Message<"protobuf_unittest.BoolParseTester"> & {
  /**
   * @generated from field: optional bool optional_bool_lowfield = 1;
   */
  optionalBoolLowfield: boolean;

  /**
   * @generated from field: optional bool optional_bool_midfield = 1001;
   */
  optionalBoolMidfield: boolean;

  /**
   * @generated from field: optional bool optional_bool_hifield = 1000001;
   */
  optionalBoolHifield: boolean;

  /**
   * @generated from field: repeated bool repeated_bool_lowfield = 2;
   */
  repeatedBoolLowfield: boolean[];

  /**
   * @generated from field: repeated bool repeated_bool_midfield = 1002;
   */
  repeatedBoolMidfield: boolean[];

  /**
   * @generated from field: repeated bool repeated_bool_hifield = 1000002;
   */
  repeatedBoolHifield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_lowfield = 3 [packed = true];
   */
  packedBoolLowfield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_midfield = 1003 [packed = true];
   */
  packedBoolMidfield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_hifield = 1000003 [packed = true];
   */
  packedBoolHifield: boolean[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

// Describes the message protobuf_unittest.BoolParseTester.
// Use `create(BoolParseTesterDesc)` to create a new BoolParseTester.
export const BoolParseTesterDesc: GenDescMessage<BoolParseTester> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 96);

/**
 * @generated from extension: optional bool optional_bool_ext = 2000000;
 */
export const BoolParseTester_optional_bool_ext: GenDescExtension<BoolParseTester, boolean> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 96, 0);

/**
 * @generated from extension: repeated bool repeated_bool_ext = 2000001;
 */
export const BoolParseTester_repeated_bool_ext: GenDescExtension<BoolParseTester, boolean[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 96, 1);

/**
 * @generated from extension: repeated bool packed_bool_ext = 2000002 [packed = true];
 */
export const BoolParseTester_packed_bool_ext: GenDescExtension<BoolParseTester, boolean[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 96, 2);

/**
 * @generated from message protobuf_unittest.Int32ParseTester
 */
export type Int32ParseTester = Message<"protobuf_unittest.Int32ParseTester"> & {
  /**
   * @generated from field: optional int32 optional_int32_lowfield = 1;
   */
  optionalInt32Lowfield: number;

  /**
   * @generated from field: optional int32 optional_int32_midfield = 1001;
   */
  optionalInt32Midfield: number;

  /**
   * @generated from field: optional int32 optional_int32_hifield = 1000001;
   */
  optionalInt32Hifield: number;

  /**
   * @generated from field: repeated int32 repeated_int32_lowfield = 2;
   */
  repeatedInt32Lowfield: number[];

  /**
   * @generated from field: repeated int32 repeated_int32_midfield = 1002;
   */
  repeatedInt32Midfield: number[];

  /**
   * @generated from field: repeated int32 repeated_int32_hifield = 1000002;
   */
  repeatedInt32Hifield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_lowfield = 3 [packed = true];
   */
  packedInt32Lowfield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_midfield = 1003 [packed = true];
   */
  packedInt32Midfield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_hifield = 1000003 [packed = true];
   */
  packedInt32Hifield: number[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

// Describes the message protobuf_unittest.Int32ParseTester.
// Use `create(Int32ParseTesterDesc)` to create a new Int32ParseTester.
export const Int32ParseTesterDesc: GenDescMessage<Int32ParseTester> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 97);

/**
 * @generated from extension: optional int32 optional_int32_ext = 2000000;
 */
export const Int32ParseTester_optional_int32_ext: GenDescExtension<Int32ParseTester, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 97, 0);

/**
 * @generated from extension: repeated int32 repeated_int32_ext = 2000001;
 */
export const Int32ParseTester_repeated_int32_ext: GenDescExtension<Int32ParseTester, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 97, 1);

/**
 * @generated from extension: repeated int32 packed_int32_ext = 2000002 [packed = true];
 */
export const Int32ParseTester_packed_int32_ext: GenDescExtension<Int32ParseTester, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 97, 2);

/**
 * @generated from message protobuf_unittest.Int64ParseTester
 */
export type Int64ParseTester = Message<"protobuf_unittest.Int64ParseTester"> & {
  /**
   * @generated from field: optional int64 optional_int64_lowfield = 1;
   */
  optionalInt64Lowfield: bigint;

  /**
   * @generated from field: optional int64 optional_int64_midfield = 1001;
   */
  optionalInt64Midfield: bigint;

  /**
   * @generated from field: optional int64 optional_int64_hifield = 1000001;
   */
  optionalInt64Hifield: bigint;

  /**
   * @generated from field: repeated int64 repeated_int64_lowfield = 2;
   */
  repeatedInt64Lowfield: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64_midfield = 1002;
   */
  repeatedInt64Midfield: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64_hifield = 1000002;
   */
  repeatedInt64Hifield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_lowfield = 3 [packed = true];
   */
  packedInt64Lowfield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_midfield = 1003 [packed = true];
   */
  packedInt64Midfield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_hifield = 1000003 [packed = true];
   */
  packedInt64Hifield: bigint[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

// Describes the message protobuf_unittest.Int64ParseTester.
// Use `create(Int64ParseTesterDesc)` to create a new Int64ParseTester.
export const Int64ParseTesterDesc: GenDescMessage<Int64ParseTester> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 98);

/**
 * @generated from extension: optional int64 optional_int64_ext = 2000000;
 */
export const Int64ParseTester_optional_int64_ext: GenDescExtension<Int64ParseTester, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 98, 0);

/**
 * @generated from extension: repeated int64 repeated_int64_ext = 2000001;
 */
export const Int64ParseTester_repeated_int64_ext: GenDescExtension<Int64ParseTester, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 98, 1);

/**
 * @generated from extension: repeated int64 packed_int64_ext = 2000002 [packed = true];
 */
export const Int64ParseTester_packed_int64_ext: GenDescExtension<Int64ParseTester, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 98, 2);

/**
 * @generated from message protobuf_unittest.InlinedStringIdxRegressionProto
 */
export type InlinedStringIdxRegressionProto = Message<"protobuf_unittest.InlinedStringIdxRegressionProto"> & {
  /**
   * We mix data to make sure aux ids and inlined string idx do not match.
   * aux_idx == inlined_string_idx == 1
   *
   * @generated from field: optional string str1 = 1;
   */
  str1: string;

  /**
   * aux_idx == 2
   *
   * @generated from field: optional protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
   */
  sub?: InlinedStringIdxRegressionProto;

  /**
   * aux_idx == 3, inlined_string_idx == 2
   *
   * @generated from field: optional string str2 = 3;
   */
  str2: string;

  /**
   * aux_idx == 4, inlined_string_idx == 3
   *
   * @generated from field: optional bytes str3 = 4;
   */
  str3: Uint8Array;
};

// Describes the message protobuf_unittest.InlinedStringIdxRegressionProto.
// Use `create(InlinedStringIdxRegressionProtoDesc)` to create a new InlinedStringIdxRegressionProto.
export const InlinedStringIdxRegressionProtoDesc: GenDescMessage<InlinedStringIdxRegressionProto> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 99);

/**
 * @generated from message protobuf_unittest.StringParseTester
 */
export type StringParseTester = Message<"protobuf_unittest.StringParseTester"> & {
  /**
   * @generated from field: optional string optional_string_lowfield = 1;
   */
  optionalStringLowfield: string;

  /**
   * @generated from field: optional string optional_string_midfield = 1001;
   */
  optionalStringMidfield: string;

  /**
   * @generated from field: optional string optional_string_hifield = 1000001;
   */
  optionalStringHifield: string;

  /**
   * @generated from field: repeated string repeated_string_lowfield = 2;
   */
  repeatedStringLowfield: string[];

  /**
   * @generated from field: repeated string repeated_string_midfield = 1002;
   */
  repeatedStringMidfield: string[];

  /**
   * @generated from field: repeated string repeated_string_hifield = 1000002;
   */
  repeatedStringHifield: string[];
};

// Describes the message protobuf_unittest.StringParseTester.
// Use `create(StringParseTesterDesc)` to create a new StringParseTester.
export const StringParseTesterDesc: GenDescMessage<StringParseTester> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 100);

/**
 * @generated from extension: optional string optional_string_ext = 2000000;
 */
export const StringParseTester_optional_string_ext: GenDescExtension<StringParseTester, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 100, 0);

/**
 * @generated from extension: repeated string repeated_string_ext = 2000001;
 */
export const StringParseTester_repeated_string_ext: GenDescExtension<StringParseTester, string[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 100, 1);

/**
 * @generated from message protobuf_unittest.BadFieldNames
 */
export type BadFieldNames = Message<"protobuf_unittest.BadFieldNames"> & {
  /**
   * @generated from field: optional int32 OptionalInt32 = 1;
   */
  OptionalInt32: number;

  /**
   * @generated from field: optional int32 for = 2;
   */
  for: number;
};

// Describes the message protobuf_unittest.BadFieldNames.
// Use `create(BadFieldNamesDesc)` to create a new BadFieldNames.
export const BadFieldNamesDesc: GenDescMessage<BadFieldNames> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 101);

/**
 * @generated from message protobuf_unittest.TestNestedMessageRedaction
 */
export type TestNestedMessageRedaction = Message<"protobuf_unittest.TestNestedMessageRedaction"> & {
  /**
   * @generated from field: optional string optional_unredacted_nested_string = 1;
   */
  optionalUnredactedNestedString: string;

  /**
   * @generated from field: optional string optional_redacted_nested_string = 2;
   */
  optionalRedactedNestedString: string;
};

// Describes the message protobuf_unittest.TestNestedMessageRedaction.
// Use `create(TestNestedMessageRedactionDesc)` to create a new TestNestedMessageRedaction.
export const TestNestedMessageRedactionDesc: GenDescMessage<TestNestedMessageRedaction> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 102);

/**
 * @generated from message protobuf_unittest.RedactedFields
 */
export type RedactedFields = Message<"protobuf_unittest.RedactedFields"> & {
  /**
   * @generated from field: optional string optional_redacted_string = 1;
   */
  optionalRedactedString: string;

  /**
   * @generated from field: optional string optional_unredacted_string = 2;
   */
  optionalUnredactedString: string;

  /**
   * @generated from field: repeated string repeated_redacted_string = 3;
   */
  repeatedRedactedString: string[];

  /**
   * @generated from field: repeated string repeated_unredacted_string = 4;
   */
  repeatedUnredactedString: string[];

  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5;
   */
  optionalRedactedMessage?: TestNestedMessageRedaction;

  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
   */
  optionalUnredactedMessage?: TestNestedMessageRedaction;

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7;
   */
  repeatedRedactedMessage: TestNestedMessageRedaction[];

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
   */
  repeatedUnredactedMessage: TestNestedMessageRedaction[];

  /**
   * @generated from field: map<string, string> map_redacted_string = 9;
   */
  mapRedactedString: { [key: string]: string };

  /**
   * @generated from field: map<string, string> map_unredacted_string = 10;
   */
  mapUnredactedString: { [key: string]: string };
};

// Describes the message protobuf_unittest.RedactedFields.
// Use `create(RedactedFieldsDesc)` to create a new RedactedFields.
export const RedactedFieldsDesc: GenDescMessage<RedactedFields> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 103);

/**
 * @generated from message protobuf_unittest.TestCord
 */
export type TestCord = Message<"protobuf_unittest.TestCord"> & {
  /**
   * @generated from field: optional bytes optional_bytes_cord = 1;
   */
  optionalBytesCord: Uint8Array;

  /**
   * @generated from field: optional bytes optional_bytes_cord_default = 2 [default = "hello"];
   */
  optionalBytesCordDefault: Uint8Array;
};

// Describes the message protobuf_unittest.TestCord.
// Use `create(TestCordDesc)` to create a new TestCord.
export const TestCordDesc: GenDescMessage<TestCord> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 104);

/**
 * @generated from message protobuf_unittest.TestPackedEnumSmallRange
 */
export type TestPackedEnumSmallRange = Message<"protobuf_unittest.TestPackedEnumSmallRange"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
   */
  vals: TestPackedEnumSmallRange_NestedEnum[];
};

// Describes the message protobuf_unittest.TestPackedEnumSmallRange.
// Use `create(TestPackedEnumSmallRangeDesc)` to create a new TestPackedEnumSmallRange.
export const TestPackedEnumSmallRangeDesc: GenDescMessage<TestPackedEnumSmallRange> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 105);

/**
 * @generated from enum protobuf_unittest.TestPackedEnumSmallRange.NestedEnum
 */
export enum TestPackedEnumSmallRange_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

// Describes the enum protobuf_unittest.TestPackedEnumSmallRange.NestedEnum.
export const TestPackedEnumSmallRange_NestedEnumDesc: GenDescEnum<TestPackedEnumSmallRange_NestedEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 105, 0);

/**
 * @generated from message protobuf_unittest.EnumsForBenchmark
 */
export type EnumsForBenchmark = Message<"protobuf_unittest.EnumsForBenchmark"> & {
};

// Describes the message protobuf_unittest.EnumsForBenchmark.
// Use `create(EnumsForBenchmarkDesc)` to create a new EnumsForBenchmark.
export const EnumsForBenchmarkDesc: GenDescMessage<EnumsForBenchmark> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 106);

/**
 * @generated from enum protobuf_unittest.EnumsForBenchmark.Flat
 */
export enum EnumsForBenchmark_Flat {
  /**
   * @generated from enum value: A0 = 0;
   */
  A0 = 0,

  /**
   * @generated from enum value: A1 = 1;
   */
  A1 = 1,

  /**
   * @generated from enum value: A2 = 2;
   */
  A2 = 2,

  /**
   * @generated from enum value: A3 = 3;
   */
  A3 = 3,

  /**
   * @generated from enum value: A4 = 4;
   */
  A4 = 4,

  /**
   * @generated from enum value: A5 = 5;
   */
  A5 = 5,

  /**
   * @generated from enum value: A6 = 6;
   */
  A6 = 6,

  /**
   * @generated from enum value: A7 = 7;
   */
  A7 = 7,

  /**
   * @generated from enum value: A8 = 8;
   */
  A8 = 8,

  /**
   * @generated from enum value: A9 = 9;
   */
  A9 = 9,

  /**
   * @generated from enum value: A10 = 10;
   */
  A10 = 10,

  /**
   * @generated from enum value: A11 = 11;
   */
  A11 = 11,

  /**
   * @generated from enum value: A12 = 12;
   */
  A12 = 12,

  /**
   * @generated from enum value: A13 = 13;
   */
  A13 = 13,

  /**
   * @generated from enum value: A14 = 14;
   */
  A14 = 14,

  /**
   * @generated from enum value: A15 = 15;
   */
  A15 = 15,
}

// Describes the enum protobuf_unittest.EnumsForBenchmark.Flat.
export const EnumsForBenchmark_FlatDesc: GenDescEnum<EnumsForBenchmark_Flat> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 106, 0);

/**
 * Has a few holes, bitmap can be used.
 *
 * @generated from enum protobuf_unittest.EnumsForBenchmark.AlmostFlat
 */
export enum EnumsForBenchmark_AlmostFlat {
  /**
   * @generated from enum value: B0 = 0;
   */
  B0 = 0,

  /**
   * @generated from enum value: B1 = 1;
   */
  B1 = 1,

  /**
   * @generated from enum value: B2 = 2;
   */
  B2 = 2,

  /**
   * @generated from enum value: B3 = 3;
   */
  B3 = 3,

  /**
   * @generated from enum value: B5 = 5;
   */
  B5 = 5,

  /**
   * @generated from enum value: B6 = 6;
   */
  B6 = 6,

  /**
   * @generated from enum value: B7 = 7;
   */
  B7 = 7,

  /**
   * @generated from enum value: B8 = 8;
   */
  B8 = 8,

  /**
   * @generated from enum value: B9 = 9;
   */
  B9 = 9,

  /**
   * @generated from enum value: B11 = 11;
   */
  B11 = 11,

  /**
   * @generated from enum value: B12 = 12;
   */
  B12 = 12,

  /**
   * @generated from enum value: B13 = 13;
   */
  B13 = 13,

  /**
   * @generated from enum value: B14 = 14;
   */
  B14 = 14,

  /**
   * @generated from enum value: B15 = 15;
   */
  B15 = 15,

  /**
   * @generated from enum value: B17 = 17;
   */
  B17 = 17,

  /**
   * @generated from enum value: B19 = 19;
   */
  B19 = 19,
}

// Describes the enum protobuf_unittest.EnumsForBenchmark.AlmostFlat.
export const EnumsForBenchmark_AlmostFlatDesc: GenDescEnum<EnumsForBenchmark_AlmostFlat> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 106, 1);

/**
 * @generated from enum protobuf_unittest.EnumsForBenchmark.Sparse
 */
export enum EnumsForBenchmark_Sparse {
  /**
   * @generated from enum value: C536 = 536;
   */
  C536 = 536,

  /**
   * @generated from enum value: C8387 = 8387;
   */
  C8387 = 8387,

  /**
   * @generated from enum value: C9673 = 9673;
   */
  C9673 = 9673,

  /**
   * @generated from enum value: C10285 = 10285;
   */
  C10285 = 10285,

  /**
   * @generated from enum value: C13318 = 13318;
   */
  C13318 = 13318,

  /**
   * @generated from enum value: C15963 = 15963;
   */
  C15963 = 15963,

  /**
   * @generated from enum value: C16439 = 16439;
   */
  C16439 = 16439,

  /**
   * @generated from enum value: C18197 = 18197;
   */
  C18197 = 18197,

  /**
   * @generated from enum value: C19430 = 19430;
   */
  C19430 = 19430,

  /**
   * @generated from enum value: C20361 = 20361;
   */
  C20361 = 20361,

  /**
   * @generated from enum value: C20706 = 20706;
   */
  C20706 = 20706,

  /**
   * @generated from enum value: C21050 = 21050;
   */
  C21050 = 21050,

  /**
   * @generated from enum value: C21906 = 21906;
   */
  C21906 = 21906,

  /**
   * @generated from enum value: C27265 = 27265;
   */
  C27265 = 27265,

  /**
   * @generated from enum value: C30109 = 30109;
   */
  C30109 = 30109,

  /**
   * @generated from enum value: C31670 = 31670;
   */
  C31670 = 31670,
}

// Describes the enum protobuf_unittest.EnumsForBenchmark.Sparse.
export const EnumsForBenchmark_SparseDesc: GenDescEnum<EnumsForBenchmark_Sparse> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 106, 2);

/**
 * @generated from message protobuf_unittest.TestMessageWithManyRepeatedPtrFields
 */
export type TestMessageWithManyRepeatedPtrFields = Message<"protobuf_unittest.TestMessageWithManyRepeatedPtrFields"> & {
  /**
   * @generated from field: repeated string repeated_string_1 = 1;
   */
  repeatedString1: string[];

  /**
   * @generated from field: repeated string repeated_string_2 = 2;
   */
  repeatedString2: string[];

  /**
   * @generated from field: repeated string repeated_string_3 = 3;
   */
  repeatedString3: string[];

  /**
   * @generated from field: repeated string repeated_string_4 = 4;
   */
  repeatedString4: string[];

  /**
   * @generated from field: repeated string repeated_string_5 = 5;
   */
  repeatedString5: string[];

  /**
   * @generated from field: repeated string repeated_string_6 = 6;
   */
  repeatedString6: string[];

  /**
   * @generated from field: repeated string repeated_string_7 = 7;
   */
  repeatedString7: string[];

  /**
   * @generated from field: repeated string repeated_string_8 = 8;
   */
  repeatedString8: string[];

  /**
   * @generated from field: repeated string repeated_string_9 = 9;
   */
  repeatedString9: string[];

  /**
   * @generated from field: repeated string repeated_string_10 = 10;
   */
  repeatedString10: string[];

  /**
   * @generated from field: repeated string repeated_string_11 = 11;
   */
  repeatedString11: string[];

  /**
   * @generated from field: repeated string repeated_string_12 = 12;
   */
  repeatedString12: string[];

  /**
   * @generated from field: repeated string repeated_string_13 = 13;
   */
  repeatedString13: string[];

  /**
   * @generated from field: repeated string repeated_string_14 = 14;
   */
  repeatedString14: string[];

  /**
   * @generated from field: repeated string repeated_string_15 = 15;
   */
  repeatedString15: string[];

  /**
   * @generated from field: repeated string repeated_string_16 = 16;
   */
  repeatedString16: string[];

  /**
   * @generated from field: repeated string repeated_string_17 = 17;
   */
  repeatedString17: string[];

  /**
   * @generated from field: repeated string repeated_string_18 = 18;
   */
  repeatedString18: string[];

  /**
   * @generated from field: repeated string repeated_string_19 = 19;
   */
  repeatedString19: string[];

  /**
   * @generated from field: repeated string repeated_string_20 = 20;
   */
  repeatedString20: string[];

  /**
   * @generated from field: repeated string repeated_string_21 = 21;
   */
  repeatedString21: string[];

  /**
   * @generated from field: repeated string repeated_string_22 = 22;
   */
  repeatedString22: string[];

  /**
   * @generated from field: repeated string repeated_string_23 = 23;
   */
  repeatedString23: string[];

  /**
   * @generated from field: repeated string repeated_string_24 = 24;
   */
  repeatedString24: string[];

  /**
   * @generated from field: repeated string repeated_string_25 = 25;
   */
  repeatedString25: string[];

  /**
   * @generated from field: repeated string repeated_string_26 = 26;
   */
  repeatedString26: string[];

  /**
   * @generated from field: repeated string repeated_string_27 = 27;
   */
  repeatedString27: string[];

  /**
   * @generated from field: repeated string repeated_string_28 = 28;
   */
  repeatedString28: string[];

  /**
   * @generated from field: repeated string repeated_string_29 = 29;
   */
  repeatedString29: string[];

  /**
   * @generated from field: repeated string repeated_string_30 = 30;
   */
  repeatedString30: string[];

  /**
   * @generated from field: repeated string repeated_string_31 = 31;
   */
  repeatedString31: string[];

  /**
   * @generated from field: repeated string repeated_string_32 = 32;
   */
  repeatedString32: string[];
};

// Describes the message protobuf_unittest.TestMessageWithManyRepeatedPtrFields.
// Use `create(TestMessageWithManyRepeatedPtrFieldsDesc)` to create a new TestMessageWithManyRepeatedPtrFields.
export const TestMessageWithManyRepeatedPtrFieldsDesc: GenDescMessage<TestMessageWithManyRepeatedPtrFields> = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_unittest, 107);

/**
 * @generated from enum protobuf_unittest.ForeignEnum
 */
export enum ForeignEnum {
  /**
   * @generated from enum value: FOREIGN_FOO = 4;
   */
  FOREIGN_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_BAR = 5;
   */
  FOREIGN_BAR = 5,

  /**
   * @generated from enum value: FOREIGN_BAZ = 6;
   */
  FOREIGN_BAZ = 6,

  /**
   * (1 << 32) to generate a 64b bitmask would be incorrect.
   *
   * @generated from enum value: FOREIGN_BAX = 32;
   */
  FOREIGN_BAX = 32,
}

// Describes the enum protobuf_unittest.ForeignEnum.
export const ForeignEnumDesc: GenDescEnum<ForeignEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 0);

/**
 * @generated from enum protobuf_unittest.TestReservedEnumFields
 */
export enum TestReservedEnumFields {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,
}

// Describes the enum protobuf_unittest.TestReservedEnumFields.
export const TestReservedEnumFieldsDesc: GenDescEnum<TestReservedEnumFields> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 1);

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from enum protobuf_unittest.TestEnumWithDupValue
 */
export enum TestEnumWithDupValue {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

// Describes the enum protobuf_unittest.TestEnumWithDupValue.
export const TestEnumWithDupValueDesc: GenDescEnum<TestEnumWithDupValue> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 2);

/**
 * Test an enum with large, unordered values.
 *
 * @generated from enum protobuf_unittest.TestSparseEnum
 */
export enum TestSparseEnum {
  /**
   * @generated from enum value: SPARSE_A = 123;
   */
  SPARSE_A = 123,

  /**
   * @generated from enum value: SPARSE_B = 62374;
   */
  SPARSE_B = 62374,

  /**
   * @generated from enum value: SPARSE_C = 12589234;
   */
  SPARSE_C = 12589234,

  /**
   * @generated from enum value: SPARSE_D = -15;
   */
  SPARSE_D = -15,

  /**
   * @generated from enum value: SPARSE_E = -53452;
   */
  SPARSE_E = -53452,

  /**
   * @generated from enum value: SPARSE_F = 0;
   */
  SPARSE_F = 0,

  /**
   * @generated from enum value: SPARSE_G = 2;
   */
  SPARSE_G = 2,
}

// Describes the enum protobuf_unittest.TestSparseEnum.
export const TestSparseEnumDesc: GenDescEnum<TestSparseEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 3);

/**
 * @generated from enum protobuf_unittest.VeryLargeEnum
 */
export enum VeryLargeEnum {
  /**
   * @generated from enum value: ENUM_LABEL_DEFAULT = 0;
   */
  ENUM_LABEL_DEFAULT = 0,

  /**
   * @generated from enum value: ENUM_LABEL_1 = 1;
   */
  ENUM_LABEL_1 = 1,

  /**
   * @generated from enum value: ENUM_LABEL_2 = 2;
   */
  ENUM_LABEL_2 = 2,

  /**
   * @generated from enum value: ENUM_LABEL_3 = 3;
   */
  ENUM_LABEL_3 = 3,

  /**
   * @generated from enum value: ENUM_LABEL_4 = 4;
   */
  ENUM_LABEL_4 = 4,

  /**
   * @generated from enum value: ENUM_LABEL_5 = 5;
   */
  ENUM_LABEL_5 = 5,

  /**
   * @generated from enum value: ENUM_LABEL_6 = 6;
   */
  ENUM_LABEL_6 = 6,

  /**
   * @generated from enum value: ENUM_LABEL_7 = 7;
   */
  ENUM_LABEL_7 = 7,

  /**
   * @generated from enum value: ENUM_LABEL_8 = 8;
   */
  ENUM_LABEL_8 = 8,

  /**
   * @generated from enum value: ENUM_LABEL_9 = 9;
   */
  ENUM_LABEL_9 = 9,

  /**
   * @generated from enum value: ENUM_LABEL_10 = 10;
   */
  ENUM_LABEL_10 = 10,

  /**
   * @generated from enum value: ENUM_LABEL_11 = 11;
   */
  ENUM_LABEL_11 = 11,

  /**
   * @generated from enum value: ENUM_LABEL_12 = 12;
   */
  ENUM_LABEL_12 = 12,

  /**
   * @generated from enum value: ENUM_LABEL_13 = 13;
   */
  ENUM_LABEL_13 = 13,

  /**
   * @generated from enum value: ENUM_LABEL_14 = 14;
   */
  ENUM_LABEL_14 = 14,

  /**
   * @generated from enum value: ENUM_LABEL_15 = 15;
   */
  ENUM_LABEL_15 = 15,

  /**
   * @generated from enum value: ENUM_LABEL_16 = 16;
   */
  ENUM_LABEL_16 = 16,

  /**
   * @generated from enum value: ENUM_LABEL_17 = 17;
   */
  ENUM_LABEL_17 = 17,

  /**
   * @generated from enum value: ENUM_LABEL_18 = 18;
   */
  ENUM_LABEL_18 = 18,

  /**
   * @generated from enum value: ENUM_LABEL_19 = 19;
   */
  ENUM_LABEL_19 = 19,

  /**
   * @generated from enum value: ENUM_LABEL_20 = 20;
   */
  ENUM_LABEL_20 = 20,

  /**
   * @generated from enum value: ENUM_LABEL_21 = 21;
   */
  ENUM_LABEL_21 = 21,

  /**
   * @generated from enum value: ENUM_LABEL_22 = 22;
   */
  ENUM_LABEL_22 = 22,

  /**
   * @generated from enum value: ENUM_LABEL_23 = 23;
   */
  ENUM_LABEL_23 = 23,

  /**
   * @generated from enum value: ENUM_LABEL_24 = 24;
   */
  ENUM_LABEL_24 = 24,

  /**
   * @generated from enum value: ENUM_LABEL_25 = 25;
   */
  ENUM_LABEL_25 = 25,

  /**
   * @generated from enum value: ENUM_LABEL_26 = 26;
   */
  ENUM_LABEL_26 = 26,

  /**
   * @generated from enum value: ENUM_LABEL_27 = 27;
   */
  ENUM_LABEL_27 = 27,

  /**
   * @generated from enum value: ENUM_LABEL_28 = 28;
   */
  ENUM_LABEL_28 = 28,

  /**
   * @generated from enum value: ENUM_LABEL_29 = 29;
   */
  ENUM_LABEL_29 = 29,

  /**
   * @generated from enum value: ENUM_LABEL_30 = 30;
   */
  ENUM_LABEL_30 = 30,

  /**
   * @generated from enum value: ENUM_LABEL_31 = 31;
   */
  ENUM_LABEL_31 = 31,

  /**
   * @generated from enum value: ENUM_LABEL_32 = 32;
   */
  ENUM_LABEL_32 = 32,

  /**
   * @generated from enum value: ENUM_LABEL_33 = 33;
   */
  ENUM_LABEL_33 = 33,

  /**
   * @generated from enum value: ENUM_LABEL_34 = 34;
   */
  ENUM_LABEL_34 = 34,

  /**
   * @generated from enum value: ENUM_LABEL_35 = 35;
   */
  ENUM_LABEL_35 = 35,

  /**
   * @generated from enum value: ENUM_LABEL_36 = 36;
   */
  ENUM_LABEL_36 = 36,

  /**
   * @generated from enum value: ENUM_LABEL_37 = 37;
   */
  ENUM_LABEL_37 = 37,

  /**
   * @generated from enum value: ENUM_LABEL_38 = 38;
   */
  ENUM_LABEL_38 = 38,

  /**
   * @generated from enum value: ENUM_LABEL_39 = 39;
   */
  ENUM_LABEL_39 = 39,

  /**
   * @generated from enum value: ENUM_LABEL_40 = 40;
   */
  ENUM_LABEL_40 = 40,

  /**
   * @generated from enum value: ENUM_LABEL_41 = 41;
   */
  ENUM_LABEL_41 = 41,

  /**
   * @generated from enum value: ENUM_LABEL_42 = 42;
   */
  ENUM_LABEL_42 = 42,

  /**
   * @generated from enum value: ENUM_LABEL_43 = 43;
   */
  ENUM_LABEL_43 = 43,

  /**
   * @generated from enum value: ENUM_LABEL_44 = 44;
   */
  ENUM_LABEL_44 = 44,

  /**
   * @generated from enum value: ENUM_LABEL_45 = 45;
   */
  ENUM_LABEL_45 = 45,

  /**
   * @generated from enum value: ENUM_LABEL_46 = 46;
   */
  ENUM_LABEL_46 = 46,

  /**
   * @generated from enum value: ENUM_LABEL_47 = 47;
   */
  ENUM_LABEL_47 = 47,

  /**
   * @generated from enum value: ENUM_LABEL_48 = 48;
   */
  ENUM_LABEL_48 = 48,

  /**
   * @generated from enum value: ENUM_LABEL_49 = 49;
   */
  ENUM_LABEL_49 = 49,

  /**
   * @generated from enum value: ENUM_LABEL_50 = 50;
   */
  ENUM_LABEL_50 = 50,

  /**
   * @generated from enum value: ENUM_LABEL_51 = 51;
   */
  ENUM_LABEL_51 = 51,

  /**
   * @generated from enum value: ENUM_LABEL_52 = 52;
   */
  ENUM_LABEL_52 = 52,

  /**
   * @generated from enum value: ENUM_LABEL_53 = 53;
   */
  ENUM_LABEL_53 = 53,

  /**
   * @generated from enum value: ENUM_LABEL_54 = 54;
   */
  ENUM_LABEL_54 = 54,

  /**
   * @generated from enum value: ENUM_LABEL_55 = 55;
   */
  ENUM_LABEL_55 = 55,

  /**
   * @generated from enum value: ENUM_LABEL_56 = 56;
   */
  ENUM_LABEL_56 = 56,

  /**
   * @generated from enum value: ENUM_LABEL_57 = 57;
   */
  ENUM_LABEL_57 = 57,

  /**
   * @generated from enum value: ENUM_LABEL_58 = 58;
   */
  ENUM_LABEL_58 = 58,

  /**
   * @generated from enum value: ENUM_LABEL_59 = 59;
   */
  ENUM_LABEL_59 = 59,

  /**
   * @generated from enum value: ENUM_LABEL_60 = 60;
   */
  ENUM_LABEL_60 = 60,

  /**
   * @generated from enum value: ENUM_LABEL_61 = 61;
   */
  ENUM_LABEL_61 = 61,

  /**
   * @generated from enum value: ENUM_LABEL_62 = 62;
   */
  ENUM_LABEL_62 = 62,

  /**
   * @generated from enum value: ENUM_LABEL_63 = 63;
   */
  ENUM_LABEL_63 = 63,

  /**
   * @generated from enum value: ENUM_LABEL_64 = 64;
   */
  ENUM_LABEL_64 = 64,

  /**
   * @generated from enum value: ENUM_LABEL_65 = 65;
   */
  ENUM_LABEL_65 = 65,

  /**
   * @generated from enum value: ENUM_LABEL_66 = 66;
   */
  ENUM_LABEL_66 = 66,

  /**
   * @generated from enum value: ENUM_LABEL_67 = 67;
   */
  ENUM_LABEL_67 = 67,

  /**
   * @generated from enum value: ENUM_LABEL_68 = 68;
   */
  ENUM_LABEL_68 = 68,

  /**
   * @generated from enum value: ENUM_LABEL_69 = 69;
   */
  ENUM_LABEL_69 = 69,

  /**
   * @generated from enum value: ENUM_LABEL_70 = 70;
   */
  ENUM_LABEL_70 = 70,

  /**
   * @generated from enum value: ENUM_LABEL_71 = 71;
   */
  ENUM_LABEL_71 = 71,

  /**
   * @generated from enum value: ENUM_LABEL_72 = 72;
   */
  ENUM_LABEL_72 = 72,

  /**
   * @generated from enum value: ENUM_LABEL_73 = 73;
   */
  ENUM_LABEL_73 = 73,

  /**
   * @generated from enum value: ENUM_LABEL_74 = 74;
   */
  ENUM_LABEL_74 = 74,

  /**
   * @generated from enum value: ENUM_LABEL_75 = 75;
   */
  ENUM_LABEL_75 = 75,

  /**
   * @generated from enum value: ENUM_LABEL_76 = 76;
   */
  ENUM_LABEL_76 = 76,

  /**
   * @generated from enum value: ENUM_LABEL_77 = 77;
   */
  ENUM_LABEL_77 = 77,

  /**
   * @generated from enum value: ENUM_LABEL_78 = 78;
   */
  ENUM_LABEL_78 = 78,

  /**
   * @generated from enum value: ENUM_LABEL_79 = 79;
   */
  ENUM_LABEL_79 = 79,

  /**
   * @generated from enum value: ENUM_LABEL_80 = 80;
   */
  ENUM_LABEL_80 = 80,

  /**
   * @generated from enum value: ENUM_LABEL_81 = 81;
   */
  ENUM_LABEL_81 = 81,

  /**
   * @generated from enum value: ENUM_LABEL_82 = 82;
   */
  ENUM_LABEL_82 = 82,

  /**
   * @generated from enum value: ENUM_LABEL_83 = 83;
   */
  ENUM_LABEL_83 = 83,

  /**
   * @generated from enum value: ENUM_LABEL_84 = 84;
   */
  ENUM_LABEL_84 = 84,

  /**
   * @generated from enum value: ENUM_LABEL_85 = 85;
   */
  ENUM_LABEL_85 = 85,

  /**
   * @generated from enum value: ENUM_LABEL_86 = 86;
   */
  ENUM_LABEL_86 = 86,

  /**
   * @generated from enum value: ENUM_LABEL_87 = 87;
   */
  ENUM_LABEL_87 = 87,

  /**
   * @generated from enum value: ENUM_LABEL_88 = 88;
   */
  ENUM_LABEL_88 = 88,

  /**
   * @generated from enum value: ENUM_LABEL_89 = 89;
   */
  ENUM_LABEL_89 = 89,

  /**
   * @generated from enum value: ENUM_LABEL_90 = 90;
   */
  ENUM_LABEL_90 = 90,

  /**
   * @generated from enum value: ENUM_LABEL_91 = 91;
   */
  ENUM_LABEL_91 = 91,

  /**
   * @generated from enum value: ENUM_LABEL_92 = 92;
   */
  ENUM_LABEL_92 = 92,

  /**
   * @generated from enum value: ENUM_LABEL_93 = 93;
   */
  ENUM_LABEL_93 = 93,

  /**
   * @generated from enum value: ENUM_LABEL_94 = 94;
   */
  ENUM_LABEL_94 = 94,

  /**
   * @generated from enum value: ENUM_LABEL_95 = 95;
   */
  ENUM_LABEL_95 = 95,

  /**
   * @generated from enum value: ENUM_LABEL_96 = 96;
   */
  ENUM_LABEL_96 = 96,

  /**
   * @generated from enum value: ENUM_LABEL_97 = 97;
   */
  ENUM_LABEL_97 = 97,

  /**
   * @generated from enum value: ENUM_LABEL_98 = 98;
   */
  ENUM_LABEL_98 = 98,

  /**
   * @generated from enum value: ENUM_LABEL_99 = 99;
   */
  ENUM_LABEL_99 = 99,

  /**
   * @generated from enum value: ENUM_LABEL_100 = 100;
   */
  ENUM_LABEL_100 = 100,
}

// Describes the enum protobuf_unittest.VeryLargeEnum.
export const VeryLargeEnumDesc: GenDescEnum<VeryLargeEnum> = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_unittest, 4);

/**
 * @generated from service protobuf_unittest.TestService
 */
export const TestService: GenDescService<{
  /**
   * @generated from rpc protobuf_unittest.TestService.Foo
   */
  foo: {
    kind: "unary";
    I: FooRequest;
    O: FooResponse;
  },
  /**
   * @generated from rpc protobuf_unittest.TestService.Bar
   */
  bar: {
    kind: "unary";
    I: BarRequest;
    O: BarResponse;
  },
}
> = /*@__PURE__*/
  serviceDesc(fileDesc_google_protobuf_unittest, 0);

/**
 * Singular
 *
 * @generated from extension: optional int32 optional_int32_extension = 1;
 */
export const optional_int32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 0);

/**
 * @generated from extension: optional int64 optional_int64_extension = 2;
 */
export const optional_int64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 1);

/**
 * @generated from extension: optional uint32 optional_uint32_extension = 3;
 */
export const optional_uint32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 2);

/**
 * @generated from extension: optional uint64 optional_uint64_extension = 4;
 */
export const optional_uint64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 3);

/**
 * @generated from extension: optional sint32 optional_sint32_extension = 5;
 */
export const optional_sint32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 4);

/**
 * @generated from extension: optional sint64 optional_sint64_extension = 6;
 */
export const optional_sint64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 5);

/**
 * @generated from extension: optional fixed32 optional_fixed32_extension = 7;
 */
export const optional_fixed32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 6);

/**
 * @generated from extension: optional fixed64 optional_fixed64_extension = 8;
 */
export const optional_fixed64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 7);

/**
 * @generated from extension: optional sfixed32 optional_sfixed32_extension = 9;
 */
export const optional_sfixed32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 8);

/**
 * @generated from extension: optional sfixed64 optional_sfixed64_extension = 10;
 */
export const optional_sfixed64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 9);

/**
 * @generated from extension: optional float optional_float_extension = 11;
 */
export const optional_float_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 10);

/**
 * @generated from extension: optional double optional_double_extension = 12;
 */
export const optional_double_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 11);

/**
 * @generated from extension: optional bool optional_bool_extension = 13;
 */
export const optional_bool_extension: GenDescExtension<TestAllExtensions, boolean> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 12);

/**
 * @generated from extension: optional string optional_string_extension = 14;
 */
export const optional_string_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 13);

/**
 * @generated from extension: optional bytes optional_bytes_extension = 15;
 */
export const optional_bytes_extension: GenDescExtension<TestAllExtensions, Uint8Array> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 14);

/**
 * @generated from extension: optional protobuf_unittest.OptionalGroup_extension optionalgroup_extension = 16;
 */
export const optionalgroup_extension: GenDescExtension<TestAllExtensions, OptionalGroup_extension> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 15);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message_extension = 18;
 */
export const optional_nested_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 16);

/**
 * @generated from extension: optional protobuf_unittest.ForeignMessage optional_foreign_message_extension = 19;
 */
export const optional_foreign_message_extension: GenDescExtension<TestAllExtensions, ForeignMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 17);

/**
 * @generated from extension: optional protobuf_unittest_import.ImportMessage optional_import_message_extension = 20;
 */
export const optional_import_message_extension: GenDescExtension<TestAllExtensions, ImportMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 18);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum_extension = 21;
 */
export const optional_nested_enum_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 19);

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum optional_foreign_enum_extension = 22;
 */
export const optional_foreign_enum_extension: GenDescExtension<TestAllExtensions, ForeignEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 20);

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnum optional_import_enum_extension = 23;
 */
export const optional_import_enum_extension: GenDescExtension<TestAllExtensions, ImportEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 21);

/**
 * @generated from extension: optional string optional_string_piece_extension = 24;
 */
export const optional_string_piece_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 22);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string optional_cord_extension = 25;
 */
export const optional_cord_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 23);

/**
 * @generated from extension: optional protobuf_unittest_import.PublicImportMessage optional_public_import_message_extension = 26;
 */
export const optional_public_import_message_extension: GenDescExtension<TestAllExtensions, PublicImportMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 24);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message_extension = 27;
 */
export const optional_lazy_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 25);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message_extension = 28;
 */
export const optional_unverified_lazy_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 26);

/**
 * Repeated
 *
 * @generated from extension: repeated int32 repeated_int32_extension = 31;
 */
export const repeated_int32_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 27);

/**
 * @generated from extension: repeated int64 repeated_int64_extension = 32;
 */
export const repeated_int64_extension: GenDescExtension<TestAllExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 28);

/**
 * @generated from extension: repeated uint32 repeated_uint32_extension = 33;
 */
export const repeated_uint32_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 29);

/**
 * @generated from extension: repeated uint64 repeated_uint64_extension = 34;
 */
export const repeated_uint64_extension: GenDescExtension<TestAllExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 30);

/**
 * @generated from extension: repeated sint32 repeated_sint32_extension = 35;
 */
export const repeated_sint32_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 31);

/**
 * @generated from extension: repeated sint64 repeated_sint64_extension = 36;
 */
export const repeated_sint64_extension: GenDescExtension<TestAllExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 32);

/**
 * @generated from extension: repeated fixed32 repeated_fixed32_extension = 37;
 */
export const repeated_fixed32_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 33);

/**
 * @generated from extension: repeated fixed64 repeated_fixed64_extension = 38;
 */
export const repeated_fixed64_extension: GenDescExtension<TestAllExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 34);

/**
 * @generated from extension: repeated sfixed32 repeated_sfixed32_extension = 39;
 */
export const repeated_sfixed32_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 35);

/**
 * @generated from extension: repeated sfixed64 repeated_sfixed64_extension = 40;
 */
export const repeated_sfixed64_extension: GenDescExtension<TestAllExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 36);

/**
 * @generated from extension: repeated float repeated_float_extension = 41;
 */
export const repeated_float_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 37);

/**
 * @generated from extension: repeated double repeated_double_extension = 42;
 */
export const repeated_double_extension: GenDescExtension<TestAllExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 38);

/**
 * @generated from extension: repeated bool repeated_bool_extension = 43;
 */
export const repeated_bool_extension: GenDescExtension<TestAllExtensions, boolean[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 39);

/**
 * @generated from extension: repeated string repeated_string_extension = 44;
 */
export const repeated_string_extension: GenDescExtension<TestAllExtensions, string[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 40);

/**
 * @generated from extension: repeated bytes repeated_bytes_extension = 45;
 */
export const repeated_bytes_extension: GenDescExtension<TestAllExtensions, Uint8Array[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 41);

/**
 * @generated from extension: repeated protobuf_unittest.RepeatedGroup_extension repeatedgroup_extension = 46;
 */
export const repeatedgroup_extension: GenDescExtension<TestAllExtensions, RepeatedGroup_extension[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 42);

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message_extension = 48;
 */
export const repeated_nested_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 43);

/**
 * @generated from extension: repeated protobuf_unittest.ForeignMessage repeated_foreign_message_extension = 49;
 */
export const repeated_foreign_message_extension: GenDescExtension<TestAllExtensions, ForeignMessage[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 44);

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportMessage repeated_import_message_extension = 50;
 */
export const repeated_import_message_extension: GenDescExtension<TestAllExtensions, ImportMessage[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 45);

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum_extension = 51;
 */
export const repeated_nested_enum_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedEnum[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 46);

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum repeated_foreign_enum_extension = 52;
 */
export const repeated_foreign_enum_extension: GenDescExtension<TestAllExtensions, ForeignEnum[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 47);

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportEnum repeated_import_enum_extension = 53;
 */
export const repeated_import_enum_extension: GenDescExtension<TestAllExtensions, ImportEnum[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 48);

/**
 * @generated from extension: repeated string repeated_string_piece_extension = 54;
 */
export const repeated_string_piece_extension: GenDescExtension<TestAllExtensions, string[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 49);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: repeated string repeated_cord_extension = 55;
 */
export const repeated_cord_extension: GenDescExtension<TestAllExtensions, string[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 50);

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message_extension = 57;
 */
export const repeated_lazy_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 51);

/**
 * Singular with defaults
 *
 * @generated from extension: optional int32 default_int32_extension = 61 [default = 41];
 */
export const default_int32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 52);

/**
 * @generated from extension: optional int64 default_int64_extension = 62 [default = 42];
 */
export const default_int64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 53);

/**
 * @generated from extension: optional uint32 default_uint32_extension = 63 [default = 43];
 */
export const default_uint32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 54);

/**
 * @generated from extension: optional uint64 default_uint64_extension = 64 [default = 44];
 */
export const default_uint64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 55);

/**
 * @generated from extension: optional sint32 default_sint32_extension = 65 [default = -45];
 */
export const default_sint32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 56);

/**
 * @generated from extension: optional sint64 default_sint64_extension = 66 [default = 46];
 */
export const default_sint64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 57);

/**
 * @generated from extension: optional fixed32 default_fixed32_extension = 67 [default = 47];
 */
export const default_fixed32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 58);

/**
 * @generated from extension: optional fixed64 default_fixed64_extension = 68 [default = 48];
 */
export const default_fixed64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 59);

/**
 * @generated from extension: optional sfixed32 default_sfixed32_extension = 69 [default = 49];
 */
export const default_sfixed32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 60);

/**
 * @generated from extension: optional sfixed64 default_sfixed64_extension = 70 [default = -50];
 */
export const default_sfixed64_extension: GenDescExtension<TestAllExtensions, bigint> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 61);

/**
 * @generated from extension: optional float default_float_extension = 71 [default = 51.5];
 */
export const default_float_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 62);

/**
 * @generated from extension: optional double default_double_extension = 72 [default = 52000];
 */
export const default_double_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 63);

/**
 * @generated from extension: optional bool default_bool_extension = 73 [default = true];
 */
export const default_bool_extension: GenDescExtension<TestAllExtensions, boolean> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 64);

/**
 * @generated from extension: optional string default_string_extension = 74 [default = "hello"];
 */
export const default_string_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 65);

/**
 * @generated from extension: optional bytes default_bytes_extension = 75 [default = "world"];
 */
export const default_bytes_extension: GenDescExtension<TestAllExtensions, Uint8Array> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 66);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum_extension = 81 [default = BAR];
 */
export const default_nested_enum_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 67);

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum default_foreign_enum_extension = 82 [default = FOREIGN_BAR];
 */
export const default_foreign_enum_extension: GenDescExtension<TestAllExtensions, ForeignEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 68);

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnum default_import_enum_extension = 83 [default = IMPORT_BAR];
 */
export const default_import_enum_extension: GenDescExtension<TestAllExtensions, ImportEnum> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 69);

/**
 * @generated from extension: optional string default_string_piece_extension = 84 [default = "abc"];
 */
export const default_string_piece_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 70);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string default_cord_extension = 85 [default = "123"];
 */
export const default_cord_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 71);

/**
 * For oneof test
 *
 * @generated from extension: optional uint32 oneof_uint32_extension = 111;
 */
export const oneof_uint32_extension: GenDescExtension<TestAllExtensions, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 72);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message_extension = 112;
 */
export const oneof_nested_message_extension: GenDescExtension<TestAllExtensions, TestAllTypes_NestedMessage> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 73);

/**
 * @generated from extension: optional string oneof_string_extension = 113;
 */
export const oneof_string_extension: GenDescExtension<TestAllExtensions, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 74);

/**
 * @generated from extension: optional bytes oneof_bytes_extension = 114;
 */
export const oneof_bytes_extension: GenDescExtension<TestAllExtensions, Uint8Array> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 75);

/**
 * @generated from extension: optional string my_extension_string = 50;
 */
export const my_extension_string: GenDescExtension<TestFieldOrderings, string> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 76);

/**
 * @generated from extension: optional int32 my_extension_int = 5;
 */
export const my_extension_int: GenDescExtension<TestFieldOrderings, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 77);

/**
 * @generated from extension: repeated int32 packed_int32_extension = 90 [packed = true];
 */
export const packed_int32_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 78);

/**
 * @generated from extension: repeated int64 packed_int64_extension = 91 [packed = true];
 */
export const packed_int64_extension: GenDescExtension<TestPackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 79);

/**
 * @generated from extension: repeated uint32 packed_uint32_extension = 92 [packed = true];
 */
export const packed_uint32_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 80);

/**
 * @generated from extension: repeated uint64 packed_uint64_extension = 93 [packed = true];
 */
export const packed_uint64_extension: GenDescExtension<TestPackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 81);

/**
 * @generated from extension: repeated sint32 packed_sint32_extension = 94 [packed = true];
 */
export const packed_sint32_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 82);

/**
 * @generated from extension: repeated sint64 packed_sint64_extension = 95 [packed = true];
 */
export const packed_sint64_extension: GenDescExtension<TestPackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 83);

/**
 * @generated from extension: repeated fixed32 packed_fixed32_extension = 96 [packed = true];
 */
export const packed_fixed32_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 84);

/**
 * @generated from extension: repeated fixed64 packed_fixed64_extension = 97 [packed = true];
 */
export const packed_fixed64_extension: GenDescExtension<TestPackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 85);

/**
 * @generated from extension: repeated sfixed32 packed_sfixed32_extension = 98 [packed = true];
 */
export const packed_sfixed32_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 86);

/**
 * @generated from extension: repeated sfixed64 packed_sfixed64_extension = 99 [packed = true];
 */
export const packed_sfixed64_extension: GenDescExtension<TestPackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 87);

/**
 * @generated from extension: repeated float packed_float_extension = 100 [packed = true];
 */
export const packed_float_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 88);

/**
 * @generated from extension: repeated double packed_double_extension = 101 [packed = true];
 */
export const packed_double_extension: GenDescExtension<TestPackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 89);

/**
 * @generated from extension: repeated bool packed_bool_extension = 102 [packed = true];
 */
export const packed_bool_extension: GenDescExtension<TestPackedExtensions, boolean[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 90);

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum packed_enum_extension = 103 [packed = true];
 */
export const packed_enum_extension: GenDescExtension<TestPackedExtensions, ForeignEnum[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 91);

/**
 * @generated from extension: repeated int32 unpacked_int32_extension = 90 [packed = false];
 */
export const unpacked_int32_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 92);

/**
 * @generated from extension: repeated int64 unpacked_int64_extension = 91 [packed = false];
 */
export const unpacked_int64_extension: GenDescExtension<TestUnpackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 93);

/**
 * @generated from extension: repeated uint32 unpacked_uint32_extension = 92 [packed = false];
 */
export const unpacked_uint32_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 94);

/**
 * @generated from extension: repeated uint64 unpacked_uint64_extension = 93 [packed = false];
 */
export const unpacked_uint64_extension: GenDescExtension<TestUnpackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 95);

/**
 * @generated from extension: repeated sint32 unpacked_sint32_extension = 94 [packed = false];
 */
export const unpacked_sint32_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 96);

/**
 * @generated from extension: repeated sint64 unpacked_sint64_extension = 95 [packed = false];
 */
export const unpacked_sint64_extension: GenDescExtension<TestUnpackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 97);

/**
 * @generated from extension: repeated fixed32 unpacked_fixed32_extension = 96 [packed = false];
 */
export const unpacked_fixed32_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 98);

/**
 * @generated from extension: repeated fixed64 unpacked_fixed64_extension = 97 [packed = false];
 */
export const unpacked_fixed64_extension: GenDescExtension<TestUnpackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 99);

/**
 * @generated from extension: repeated sfixed32 unpacked_sfixed32_extension = 98 [packed = false];
 */
export const unpacked_sfixed32_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 100);

/**
 * @generated from extension: repeated sfixed64 unpacked_sfixed64_extension = 99 [packed = false];
 */
export const unpacked_sfixed64_extension: GenDescExtension<TestUnpackedExtensions, bigint[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 101);

/**
 * @generated from extension: repeated float unpacked_float_extension = 100 [packed = false];
 */
export const unpacked_float_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 102);

/**
 * @generated from extension: repeated double unpacked_double_extension = 101 [packed = false];
 */
export const unpacked_double_extension: GenDescExtension<TestUnpackedExtensions, number[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 103);

/**
 * @generated from extension: repeated bool unpacked_bool_extension = 102 [packed = false];
 */
export const unpacked_bool_extension: GenDescExtension<TestUnpackedExtensions, boolean[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 104);

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum unpacked_enum_extension = 103 [packed = false];
 */
export const unpacked_enum_extension: GenDescExtension<TestUnpackedExtensions, ForeignEnum[]> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 105);

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes test_all_types = 536860000;
 */
export const test_all_types: GenDescExtension<TestHugeFieldNumbers, TestAllTypes> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 106);

/**
 * @generated from extension: optional int32 test_extension_inside_table_extension = 5;
 */
export const test_extension_inside_table_extension: GenDescExtension<TestExtensionInsideTable, number> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 107);

/**
 * @generated from extension: optional protobuf_unittest.TestNestedGroupExtensionInnerExtension inner = 3;
 */
export const inner: GenDescExtension<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, TestNestedGroupExtensionInnerExtension> = /*@__PURE__*/
  extDesc(fileDesc_google_protobuf_unittest, 108);

