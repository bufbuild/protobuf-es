// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Author: kenton@google.com (Kenton Varda)
//
// This is like unittest.proto but with optimize_for = LITE_RUNTIME.

// @generated by protoc-gen-es v0.2.1 with parameter "ts_nocheck=false,target=ts"
// @generated from file google/protobuf/unittest_lite.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto2, protoInt64} from "@bufbuild/protobuf";
import {ImportEnumLite, ImportMessageLite} from "./unittest_import_lite_pb.js";
import {PublicImportMessageLite} from "./unittest_import_public_lite_pb.js";

/**
 * @generated from enum protobuf_unittest.ForeignEnumLite
 */
export enum ForeignEnumLite {
  /**
   * @generated from enum value: FOREIGN_LITE_FOO = 4;
   */
  FOREIGN_LITE_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_LITE_BAZ = 6;
   */
  FOREIGN_LITE_BAZ = 6,

  /**
   * @generated from enum value: FOREIGN_LITE_BAR = 5;
   */
  FOREIGN_LITE_BAR = 5,
}
// Retrieve enum metadata with: proto2.getEnumType(ForeignEnumLite)
proto2.util.setEnumType(ForeignEnumLite, "protobuf_unittest.ForeignEnumLite", [
  { no: 4, name: "FOREIGN_LITE_FOO" },
  { no: 6, name: "FOREIGN_LITE_BAZ" },
  { no: 5, name: "FOREIGN_LITE_BAR" },
]);

/**
 * @generated from enum protobuf_unittest.V1EnumLite
 */
export enum V1EnumLite {
  /**
   * @generated from enum value: V1_FIRST = 1;
   */
  V1_FIRST = 1,
}
// Retrieve enum metadata with: proto2.getEnumType(V1EnumLite)
proto2.util.setEnumType(V1EnumLite, "protobuf_unittest.V1EnumLite", [
  { no: 1, name: "V1_FIRST" },
]);

/**
 * @generated from enum protobuf_unittest.V2EnumLite
 */
export enum V2EnumLite {
  /**
   * @generated from enum value: V2_FIRST = 1;
   */
  V2_FIRST = 1,

  /**
   * @generated from enum value: V2_SECOND = 2;
   */
  V2_SECOND = 2,
}
// Retrieve enum metadata with: proto2.getEnumType(V2EnumLite)
proto2.util.setEnumType(V2EnumLite, "protobuf_unittest.V2EnumLite", [
  { no: 1, name: "V2_FIRST" },
  { no: 2, name: "V2_SECOND" },
]);

/**
 * Same as TestAllTypes but with the lite runtime.
 *
 * @generated from message protobuf_unittest.TestAllTypesLite
 */
export class TestAllTypesLite extends Message<TestAllTypesLite> {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64?: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32?: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64?: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32?: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64?: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32?: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64?: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat?: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble?: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool?: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypesLite_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum?: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
   */
  optionalForeignEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
   */
  optionalImportEnum?: ImportEnumLite;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece?: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord?: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[] = [];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[] = [];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[] = [];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[] = [];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[] = [];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[] = [];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[] = [];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[] = [];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[] = [];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[] = [];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[] = [];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[] = [];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[] = [];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[] = [];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypesLite_RepeatedGroup[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypesLite_NestedMessage[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessageLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessageLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypesLite_NestedEnum[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnumLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnumLite[] = [];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[] = [];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypesLite_NestedMessage[] = [];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32?: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64?: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32?: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64?: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32?: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64?: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32?: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64?: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat?: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble?: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool?: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString?: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum?: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
   */
  defaultForeignEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
   */
  defaultImportEnum?: ImportEnumLite;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece?: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord?: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypesLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
     */
    value: TestAllTypesLite_NestedMessage2;
    case: "oneofNestedMessage2";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Tests toString for non-repeated fields with a list suffix
   *
   * @generated from field: optional int32 deceptively_named_list = 116;
   */
  deceptivelyNamedList?: number;

  constructor(data?: PartialMessage<TestAllTypesLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "optional_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 3, name: "optional_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "optional_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "optional_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 6, name: "optional_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, opt: true },
    { no: 7, name: "optional_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 8, name: "optional_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 9, name: "optional_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, opt: true },
    { no: 10, name: "optional_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, opt: true },
    { no: 11, name: "optional_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 12, name: "optional_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 13, name: "optional_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 14, name: "optional_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "optional_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 16, name: "optionalgroup", kind: "message", T: TestAllTypesLite_OptionalGroup, opt: true },
    { no: 18, name: "optional_nested_message", kind: "message", T: TestAllTypesLite_NestedMessage, opt: true },
    { no: 19, name: "optional_foreign_message", kind: "message", T: ForeignMessageLite, opt: true },
    { no: 20, name: "optional_import_message", kind: "message", T: ImportMessageLite, opt: true },
    { no: 21, name: "optional_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypesLite_NestedEnum), opt: true },
    { no: 22, name: "optional_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnumLite), opt: true },
    { no: 23, name: "optional_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnumLite), opt: true },
    { no: 24, name: "optional_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 25, name: "optional_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 26, name: "optional_public_import_message", kind: "message", T: PublicImportMessageLite, opt: true },
    { no: 27, name: "optional_lazy_message", kind: "message", T: TestAllTypesLite_NestedMessage, opt: true },
    { no: 28, name: "optional_unverified_lazy_message", kind: "message", T: TestAllTypesLite_NestedMessage, opt: true },
    { no: 31, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 32, name: "repeated_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 33, name: "repeated_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 34, name: "repeated_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 35, name: "repeated_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 36, name: "repeated_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 37, name: "repeated_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 38, name: "repeated_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 39, name: "repeated_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 40, name: "repeated_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 41, name: "repeated_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 42, name: "repeated_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 43, name: "repeated_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 44, name: "repeated_string", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 45, name: "repeated_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 46, name: "repeatedgroup", kind: "message", T: TestAllTypesLite_RepeatedGroup, repeated: true },
    { no: 48, name: "repeated_nested_message", kind: "message", T: TestAllTypesLite_NestedMessage, repeated: true },
    { no: 49, name: "repeated_foreign_message", kind: "message", T: ForeignMessageLite, repeated: true },
    { no: 50, name: "repeated_import_message", kind: "message", T: ImportMessageLite, repeated: true },
    { no: 51, name: "repeated_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypesLite_NestedEnum), repeated: true },
    { no: 52, name: "repeated_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnumLite), repeated: true },
    { no: 53, name: "repeated_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnumLite), repeated: true },
    { no: 54, name: "repeated_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 55, name: "repeated_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 57, name: "repeated_lazy_message", kind: "message", T: TestAllTypesLite_NestedMessage, repeated: true },
    { no: 61, name: "default_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: 41 },
    { no: 62, name: "default_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true, default: protoInt64.parse("42") },
    { no: 63, name: "default_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 43 },
    { no: 64, name: "default_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true, default: protoInt64.uParse("44") },
    { no: 65, name: "default_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true, default: -45 },
    { no: 66, name: "default_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, opt: true, default: protoInt64.parse("46") },
    { no: 67, name: "default_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true, default: 47 },
    { no: 68, name: "default_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true, default: protoInt64.uParse("48") },
    { no: 69, name: "default_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, opt: true, default: 49 },
    { no: 70, name: "default_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, opt: true, default: protoInt64.parse("-50") },
    { no: 71, name: "default_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 51.5 },
    { no: 72, name: "default_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true, default: 52000 },
    { no: 73, name: "default_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 74, name: "default_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "hello" },
    { no: 75, name: "default_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true, default: new Uint8Array([0x77, 0x6F, 0x72, 0x6C, 0x64]) },
    { no: 81, name: "default_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypesLite_NestedEnum), opt: true, default: TestAllTypesLite_NestedEnum.BAR },
    { no: 82, name: "default_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnumLite), opt: true, default: ForeignEnumLite.FOREIGN_LITE_BAR },
    { no: 83, name: "default_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnumLite), opt: true, default: ImportEnumLite.IMPORT_LITE_BAR },
    { no: 84, name: "default_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "abc" },
    { no: 85, name: "default_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "123" },
    { no: 111, name: "oneof_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "oneof_field" },
    { no: 112, name: "oneof_nested_message", kind: "message", T: TestAllTypesLite_NestedMessage, oneof: "oneof_field" },
    { no: 113, name: "oneof_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 114, name: "oneof_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "oneof_field" },
    { no: 115, name: "oneof_lazy_nested_message", kind: "message", T: TestAllTypesLite_NestedMessage, oneof: "oneof_field" },
    { no: 117, name: "oneof_nested_message2", kind: "message", T: TestAllTypesLite_NestedMessage2, oneof: "oneof_field" },
    { no: 116, name: "deceptively_named_list", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite {
    return new TestAllTypesLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite {
    return new TestAllTypesLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite {
    return new TestAllTypesLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllTypesLite | PlainMessage<TestAllTypesLite> | undefined, b: TestAllTypesLite | PlainMessage<TestAllTypesLite> | undefined): boolean {
    return proto2.util.equals(TestAllTypesLite, a, b);
  }
}

/**
 * @generated from enum protobuf_unittest.TestAllTypesLite.NestedEnum
 */
export enum TestAllTypesLite_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}
// Retrieve enum metadata with: proto2.getEnumType(TestAllTypesLite_NestedEnum)
proto2.util.setEnumType(TestAllTypesLite_NestedEnum, "protobuf_unittest.TestAllTypesLite.NestedEnum", [
  { no: 1, name: "FOO" },
  { no: 2, name: "BAR" },
  { no: 3, name: "BAZ" },
]);

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage
 */
export class TestAllTypesLite_NestedMessage extends Message<TestAllTypesLite_NestedMessage> {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb?: number;

  /**
   * @generated from field: optional int64 cc = 2;
   */
  cc?: bigint;

  constructor(data?: PartialMessage<TestAllTypesLite_NestedMessage>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.NestedMessage";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "bb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "cc", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_NestedMessage {
    return new TestAllTypesLite_NestedMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage {
    return new TestAllTypesLite_NestedMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage {
    return new TestAllTypesLite_NestedMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllTypesLite_NestedMessage | PlainMessage<TestAllTypesLite_NestedMessage> | undefined, b: TestAllTypesLite_NestedMessage | PlainMessage<TestAllTypesLite_NestedMessage> | undefined): boolean {
    return proto2.util.equals(TestAllTypesLite_NestedMessage, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage2
 */
export class TestAllTypesLite_NestedMessage2 extends Message<TestAllTypesLite_NestedMessage2> {
  /**
   * @generated from field: optional int32 dd = 1;
   */
  dd?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_NestedMessage2>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.NestedMessage2";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dd", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_NestedMessage2 {
    return new TestAllTypesLite_NestedMessage2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage2 {
    return new TestAllTypesLite_NestedMessage2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage2 {
    return new TestAllTypesLite_NestedMessage2().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllTypesLite_NestedMessage2 | PlainMessage<TestAllTypesLite_NestedMessage2> | undefined, b: TestAllTypesLite_NestedMessage2 | PlainMessage<TestAllTypesLite_NestedMessage2> | undefined): boolean {
    return proto2.util.equals(TestAllTypesLite_NestedMessage2, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.OptionalGroup
 */
export class TestAllTypesLite_OptionalGroup extends Message<TestAllTypesLite_OptionalGroup> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_OptionalGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.OptionalGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_OptionalGroup {
    return new TestAllTypesLite_OptionalGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_OptionalGroup {
    return new TestAllTypesLite_OptionalGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_OptionalGroup {
    return new TestAllTypesLite_OptionalGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllTypesLite_OptionalGroup | PlainMessage<TestAllTypesLite_OptionalGroup> | undefined, b: TestAllTypesLite_OptionalGroup | PlainMessage<TestAllTypesLite_OptionalGroup> | undefined): boolean {
    return proto2.util.equals(TestAllTypesLite_OptionalGroup, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.RepeatedGroup
 */
export class TestAllTypesLite_RepeatedGroup extends Message<TestAllTypesLite_RepeatedGroup> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_RepeatedGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.RepeatedGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 47, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_RepeatedGroup {
    return new TestAllTypesLite_RepeatedGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_RepeatedGroup {
    return new TestAllTypesLite_RepeatedGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_RepeatedGroup {
    return new TestAllTypesLite_RepeatedGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllTypesLite_RepeatedGroup | PlainMessage<TestAllTypesLite_RepeatedGroup> | undefined, b: TestAllTypesLite_RepeatedGroup | PlainMessage<TestAllTypesLite_RepeatedGroup> | undefined): boolean {
    return proto2.util.equals(TestAllTypesLite_RepeatedGroup, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.ForeignMessageLite
 */
export class ForeignMessageLite extends Message<ForeignMessageLite> {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c?: number;

  constructor(data?: PartialMessage<ForeignMessageLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.ForeignMessageLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "c", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForeignMessageLite {
    return new ForeignMessageLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForeignMessageLite {
    return new ForeignMessageLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForeignMessageLite {
    return new ForeignMessageLite().fromJsonString(jsonString, options);
  }

  static equals(a: ForeignMessageLite | PlainMessage<ForeignMessageLite> | undefined, b: ForeignMessageLite | PlainMessage<ForeignMessageLite> | undefined): boolean {
    return proto2.util.equals(ForeignMessageLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestPackedTypesLite
 */
export class TestPackedTypesLite extends Message<TestPackedTypesLite> {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[] = [];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[] = [];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[] = [];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[] = [];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[] = [];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[] = [];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[] = [];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[] = [];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[] = [];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[] = [];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[] = [];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[] = [];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnumLite[] = [];

  constructor(data?: PartialMessage<TestPackedTypesLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestPackedTypesLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 90, name: "packed_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },
    { no: 91, name: "packed_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true, packed: true },
    { no: 92, name: "packed_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true, packed: true },
    { no: 93, name: "packed_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true, packed: true },
    { no: 94, name: "packed_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true, packed: true },
    { no: 95, name: "packed_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true, packed: true },
    { no: 96, name: "packed_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true, packed: true },
    { no: 97, name: "packed_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true, packed: true },
    { no: 98, name: "packed_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true, packed: true },
    { no: 99, name: "packed_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true, packed: true },
    { no: 100, name: "packed_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true, packed: true },
    { no: 101, name: "packed_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true, packed: true },
    { no: 102, name: "packed_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true, packed: true },
    { no: 103, name: "packed_enum", kind: "enum", T: proto2.getEnumType(ForeignEnumLite), repeated: true, packed: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedTypesLite {
    return new TestPackedTypesLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedTypesLite {
    return new TestPackedTypesLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedTypesLite {
    return new TestPackedTypesLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestPackedTypesLite | PlainMessage<TestPackedTypesLite> | undefined, b: TestPackedTypesLite | PlainMessage<TestPackedTypesLite> | undefined): boolean {
    return proto2.util.equals(TestPackedTypesLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestAllExtensionsLite
 */
export class TestAllExtensionsLite extends Message<TestAllExtensionsLite> {
  constructor(data?: PartialMessage<TestAllExtensionsLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestAllExtensionsLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllExtensionsLite {
    return new TestAllExtensionsLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllExtensionsLite {
    return new TestAllExtensionsLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllExtensionsLite {
    return new TestAllExtensionsLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestAllExtensionsLite | PlainMessage<TestAllExtensionsLite> | undefined, b: TestAllExtensionsLite | PlainMessage<TestAllExtensionsLite> | undefined): boolean {
    return proto2.util.equals(TestAllExtensionsLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension_lite
 */
export class OptionalGroup_extension_lite extends Message<OptionalGroup_extension_lite> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<OptionalGroup_extension_lite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.OptionalGroup_extension_lite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OptionalGroup_extension_lite {
    return new OptionalGroup_extension_lite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OptionalGroup_extension_lite {
    return new OptionalGroup_extension_lite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OptionalGroup_extension_lite {
    return new OptionalGroup_extension_lite().fromJsonString(jsonString, options);
  }

  static equals(a: OptionalGroup_extension_lite | PlainMessage<OptionalGroup_extension_lite> | undefined, b: OptionalGroup_extension_lite | PlainMessage<OptionalGroup_extension_lite> | undefined): boolean {
    return proto2.util.equals(OptionalGroup_extension_lite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension_lite
 */
export class RepeatedGroup_extension_lite extends Message<RepeatedGroup_extension_lite> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<RepeatedGroup_extension_lite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.RepeatedGroup_extension_lite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 47, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RepeatedGroup_extension_lite {
    return new RepeatedGroup_extension_lite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RepeatedGroup_extension_lite {
    return new RepeatedGroup_extension_lite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RepeatedGroup_extension_lite {
    return new RepeatedGroup_extension_lite().fromJsonString(jsonString, options);
  }

  static equals(a: RepeatedGroup_extension_lite | PlainMessage<RepeatedGroup_extension_lite> | undefined, b: RepeatedGroup_extension_lite | PlainMessage<RepeatedGroup_extension_lite> | undefined): boolean {
    return proto2.util.equals(RepeatedGroup_extension_lite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestPackedExtensionsLite
 */
export class TestPackedExtensionsLite extends Message<TestPackedExtensionsLite> {
  constructor(data?: PartialMessage<TestPackedExtensionsLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestPackedExtensionsLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedExtensionsLite {
    return new TestPackedExtensionsLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedExtensionsLite {
    return new TestPackedExtensionsLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedExtensionsLite {
    return new TestPackedExtensionsLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestPackedExtensionsLite | PlainMessage<TestPackedExtensionsLite> | undefined, b: TestPackedExtensionsLite | PlainMessage<TestPackedExtensionsLite> | undefined): boolean {
    return proto2.util.equals(TestPackedExtensionsLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestNestedExtensionLite
 */
export class TestNestedExtensionLite extends Message<TestNestedExtensionLite> {
  constructor(data?: PartialMessage<TestNestedExtensionLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestNestedExtensionLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedExtensionLite {
    return new TestNestedExtensionLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedExtensionLite {
    return new TestNestedExtensionLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedExtensionLite {
    return new TestNestedExtensionLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestNestedExtensionLite | PlainMessage<TestNestedExtensionLite> | undefined, b: TestNestedExtensionLite | PlainMessage<TestNestedExtensionLite> | undefined): boolean {
    return proto2.util.equals(TestNestedExtensionLite, a, b);
  }
}

/**
 * Test that deprecated fields work.  We only verify that they compile (at one
 * point this failed).
 *
 * @generated from message protobuf_unittest.TestDeprecatedLite
 */
export class TestDeprecatedLite extends Message<TestDeprecatedLite> {
  /**
   * @generated from field: optional int32 deprecated_field = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedField?: number;

  /**
   * @generated from field: required int32 deprecated_field2 = 2 [deprecated = true];
   * @deprecated
   */
  deprecatedField2?: number;

  /**
   * @generated from field: optional string deprecated_field3 = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedField3?: string;

  /**
   * @generated from field: optional protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedField4?: TestDeprecatedLite;

  constructor(data?: PartialMessage<TestDeprecatedLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestDeprecatedLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "deprecated_field", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "deprecated_field2", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "deprecated_field3", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "deprecated_field4", kind: "message", T: TestDeprecatedLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDeprecatedLite {
    return new TestDeprecatedLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDeprecatedLite {
    return new TestDeprecatedLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDeprecatedLite {
    return new TestDeprecatedLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestDeprecatedLite | PlainMessage<TestDeprecatedLite> | undefined, b: TestDeprecatedLite | PlainMessage<TestDeprecatedLite> | undefined): boolean {
    return proto2.util.equals(TestDeprecatedLite, a, b);
  }
}

/**
 * See the comments of the same type in unittest.proto.
 *
 * @generated from message protobuf_unittest.TestParsingMergeLite
 */
export class TestParsingMergeLite extends Message<TestParsingMergeLite> {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypesLite required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypesLite[] = [];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMergeLite.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMergeLite_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMergeLite_RepeatedGroup[] = [];

  constructor(data?: PartialMessage<TestParsingMergeLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "required_all_types", kind: "message", T: TestAllTypesLite },
    { no: 2, name: "optional_all_types", kind: "message", T: TestAllTypesLite, opt: true },
    { no: 3, name: "repeated_all_types", kind: "message", T: TestAllTypesLite, repeated: true },
    { no: 10, name: "optionalgroup", kind: "message", T: TestParsingMergeLite_OptionalGroup, opt: true },
    { no: 20, name: "repeatedgroup", kind: "message", T: TestParsingMergeLite_RepeatedGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite {
    return new TestParsingMergeLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite {
    return new TestParsingMergeLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite {
    return new TestParsingMergeLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite | PlainMessage<TestParsingMergeLite> | undefined, b: TestParsingMergeLite | PlainMessage<TestParsingMergeLite> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator
 */
export class TestParsingMergeLite_RepeatedFieldsGenerator extends Message<TestParsingMergeLite_RepeatedFieldsGenerator> {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field1 = 1;
   */
  field1: TestAllTypesLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field2 = 2;
   */
  field2: TestAllTypesLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field3 = 3;
   */
  field3: TestAllTypesLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMergeLite_RepeatedFieldsGenerator_Group1[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMergeLite_RepeatedFieldsGenerator_Group2[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext1 = 1000;
   */
  ext1: TestAllTypesLite[] = [];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext2 = 1001;
   */
  ext2: TestAllTypesLite[] = [];

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "field1", kind: "message", T: TestAllTypesLite, repeated: true },
    { no: 2, name: "field2", kind: "message", T: TestAllTypesLite, repeated: true },
    { no: 3, name: "field3", kind: "message", T: TestAllTypesLite, repeated: true },
    { no: 10, name: "group1", kind: "message", T: TestParsingMergeLite_RepeatedFieldsGenerator_Group1, repeated: true },
    { no: 20, name: "group2", kind: "message", T: TestParsingMergeLite_RepeatedFieldsGenerator_Group2, repeated: true },
    { no: 1000, name: "ext1", kind: "message", T: TestAllTypesLite, repeated: true },
    { no: 1001, name: "ext2", kind: "message", T: TestAllTypesLite, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator {
    return new TestParsingMergeLite_RepeatedFieldsGenerator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator {
    return new TestParsingMergeLite_RepeatedFieldsGenerator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator {
    return new TestParsingMergeLite_RepeatedFieldsGenerator().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite_RepeatedFieldsGenerator, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1
 */
export class TestParsingMergeLite_RepeatedFieldsGenerator_Group1 extends Message<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 11;
   */
  field1?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 11, name: "field1", kind: "message", T: TestAllTypesLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group1().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite_RepeatedFieldsGenerator_Group1, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2
 */
export class TestParsingMergeLite_RepeatedFieldsGenerator_Group2 extends Message<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 21;
   */
  field1?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 21, name: "field1", kind: "message", T: TestAllTypesLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2 {
    return new TestParsingMergeLite_RepeatedFieldsGenerator_Group2().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite_RepeatedFieldsGenerator_Group2, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.OptionalGroup
 */
export class TestParsingMergeLite_OptionalGroup extends Message<TestParsingMergeLite_OptionalGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_OptionalGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.OptionalGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 11, name: "optional_group_all_types", kind: "message", T: TestAllTypesLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_OptionalGroup {
    return new TestParsingMergeLite_OptionalGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_OptionalGroup {
    return new TestParsingMergeLite_OptionalGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_OptionalGroup {
    return new TestParsingMergeLite_OptionalGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite_OptionalGroup | PlainMessage<TestParsingMergeLite_OptionalGroup> | undefined, b: TestParsingMergeLite_OptionalGroup | PlainMessage<TestParsingMergeLite_OptionalGroup> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite_OptionalGroup, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedGroup
 */
export class TestParsingMergeLite_RepeatedGroup extends Message<TestParsingMergeLite_RepeatedGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 21, name: "repeated_group_all_types", kind: "message", T: TestAllTypesLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedGroup {
    return new TestParsingMergeLite_RepeatedGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedGroup {
    return new TestParsingMergeLite_RepeatedGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedGroup {
    return new TestParsingMergeLite_RepeatedGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TestParsingMergeLite_RepeatedGroup | PlainMessage<TestParsingMergeLite_RepeatedGroup> | undefined, b: TestParsingMergeLite_RepeatedGroup | PlainMessage<TestParsingMergeLite_RepeatedGroup> | undefined): boolean {
    return proto2.util.equals(TestParsingMergeLite_RepeatedGroup, a, b);
  }
}

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeExceptionLite
 */
export class TestMergeExceptionLite extends Message<TestMergeExceptionLite> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
   */
  allExtensions?: TestAllExtensionsLite;

  constructor(data?: PartialMessage<TestMergeExceptionLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestMergeExceptionLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "all_extensions", kind: "message", T: TestAllExtensionsLite, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMergeExceptionLite {
    return new TestMergeExceptionLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMergeExceptionLite {
    return new TestMergeExceptionLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMergeExceptionLite {
    return new TestMergeExceptionLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestMergeExceptionLite | PlainMessage<TestMergeExceptionLite> | undefined, b: TestMergeExceptionLite | PlainMessage<TestMergeExceptionLite> | undefined): boolean {
    return proto2.util.equals(TestMergeExceptionLite, a, b);
  }
}

/**
 * TestEmptyMessageLite is used to test unknown fields support in lite mode.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageLite
 */
export class TestEmptyMessageLite extends Message<TestEmptyMessageLite> {
  constructor(data?: PartialMessage<TestEmptyMessageLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessageLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessageLite {
    return new TestEmptyMessageLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessageLite {
    return new TestEmptyMessageLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessageLite {
    return new TestEmptyMessageLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestEmptyMessageLite | PlainMessage<TestEmptyMessageLite> | undefined, b: TestEmptyMessageLite | PlainMessage<TestEmptyMessageLite> | undefined): boolean {
    return proto2.util.equals(TestEmptyMessageLite, a, b);
  }
}

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensionsLite
 */
export class TestEmptyMessageWithExtensionsLite extends Message<TestEmptyMessageWithExtensionsLite> {
  constructor(data?: PartialMessage<TestEmptyMessageWithExtensionsLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessageWithExtensionsLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessageWithExtensionsLite {
    return new TestEmptyMessageWithExtensionsLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensionsLite {
    return new TestEmptyMessageWithExtensionsLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensionsLite {
    return new TestEmptyMessageWithExtensionsLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestEmptyMessageWithExtensionsLite | PlainMessage<TestEmptyMessageWithExtensionsLite> | undefined, b: TestEmptyMessageWithExtensionsLite | PlainMessage<TestEmptyMessageWithExtensionsLite> | undefined): boolean {
    return proto2.util.equals(TestEmptyMessageWithExtensionsLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.V1MessageLite
 */
export class V1MessageLite extends Message<V1MessageLite> {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField?: number;

  /**
   * @generated from field: optional protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
   */
  enumField?: V1EnumLite;

  constructor(data?: PartialMessage<V1MessageLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.V1MessageLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "int_field", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "enum_field", kind: "enum", T: proto2.getEnumType(V1EnumLite), opt: true, default: V1EnumLite.V1_FIRST },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V1MessageLite {
    return new V1MessageLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V1MessageLite {
    return new V1MessageLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V1MessageLite {
    return new V1MessageLite().fromJsonString(jsonString, options);
  }

  static equals(a: V1MessageLite | PlainMessage<V1MessageLite> | undefined, b: V1MessageLite | PlainMessage<V1MessageLite> | undefined): boolean {
    return proto2.util.equals(V1MessageLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.V2MessageLite
 */
export class V2MessageLite extends Message<V2MessageLite> {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField?: number;

  /**
   * @generated from field: optional protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
   */
  enumField?: V2EnumLite;

  constructor(data?: PartialMessage<V2MessageLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.V2MessageLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "int_field", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "enum_field", kind: "enum", T: proto2.getEnumType(V2EnumLite), opt: true, default: V2EnumLite.V2_FIRST },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V2MessageLite {
    return new V2MessageLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V2MessageLite {
    return new V2MessageLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V2MessageLite {
    return new V2MessageLite().fromJsonString(jsonString, options);
  }

  static equals(a: V2MessageLite | PlainMessage<V2MessageLite> | undefined, b: V2MessageLite | PlainMessage<V2MessageLite> | undefined): boolean {
    return proto2.util.equals(V2MessageLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite
 */
export class TestHugeFieldNumbersLite extends Message<TestHugeFieldNumbersLite> {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32?: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[] = [];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[] = [];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
   */
  optionalEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_message = 536870007;
   */
  optionalMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbersLite_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string } = {};

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbersLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
     */
    value: TestAllTypesLite;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TestHugeFieldNumbersLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbersLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 536870000, name: "optional_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 536870001, name: "fixed_32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 536870002, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 536870003, name: "packed_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },
    { no: 536870004, name: "optional_enum", kind: "enum", T: proto2.getEnumType(ForeignEnumLite), opt: true },
    { no: 536870005, name: "optional_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 536870006, name: "optional_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 536870007, name: "optional_message", kind: "message", T: ForeignMessageLite, opt: true },
    { no: 536870008, name: "optionalgroup", kind: "message", T: TestHugeFieldNumbersLite_OptionalGroup, opt: true },
    { no: 536870010, name: "string_string_map", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 536870011, name: "oneof_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "oneof_field" },
    { no: 536870012, name: "oneof_test_all_types", kind: "message", T: TestAllTypesLite, oneof: "oneof_field" },
    { no: 536870013, name: "oneof_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 536870014, name: "oneof_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "oneof_field" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbersLite {
    return new TestHugeFieldNumbersLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite {
    return new TestHugeFieldNumbersLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite {
    return new TestHugeFieldNumbersLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestHugeFieldNumbersLite | PlainMessage<TestHugeFieldNumbersLite> | undefined, b: TestHugeFieldNumbersLite | PlainMessage<TestHugeFieldNumbersLite> | undefined): boolean {
    return proto2.util.equals(TestHugeFieldNumbersLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup
 */
export class TestHugeFieldNumbersLite_OptionalGroup extends Message<TestHugeFieldNumbersLite_OptionalGroup> {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA?: number;

  constructor(data?: PartialMessage<TestHugeFieldNumbersLite_OptionalGroup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 536870009, name: "group_a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbersLite_OptionalGroup {
    return new TestHugeFieldNumbersLite_OptionalGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite_OptionalGroup {
    return new TestHugeFieldNumbersLite_OptionalGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite_OptionalGroup {
    return new TestHugeFieldNumbersLite_OptionalGroup().fromJsonString(jsonString, options);
  }

  static equals(a: TestHugeFieldNumbersLite_OptionalGroup | PlainMessage<TestHugeFieldNumbersLite_OptionalGroup> | undefined, b: TestHugeFieldNumbersLite_OptionalGroup | PlainMessage<TestHugeFieldNumbersLite_OptionalGroup> | undefined): boolean {
    return proto2.util.equals(TestHugeFieldNumbersLite_OptionalGroup, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestOneofParsingLite
 */
export class TestOneofParsingLite extends Message<TestOneofParsingLite> {
  /**
   * @generated from oneof protobuf_unittest.TestOneofParsingLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: int32 oneof_int32 = 1;
     */
    value: number;
    case: "oneofInt32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_submessage = 2;
     */
    value: TestAllTypesLite;
    case: "oneofSubmessage";
  } | {
    /**
     * @generated from field: string oneof_string = 3;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 4 [default = "default bytes"];
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_string_cord = 5 [default = "default Cord"];
     */
    value: string;
    case: "oneofStringCord";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_cord = 6;
     */
    value: Uint8Array;
    case: "oneofBytesCord";
  } | {
    /**
     * @generated from field: string oneof_string_string_piece = 7;
     */
    value: string;
    case: "oneofStringStringPiece";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_string_piece = 8 [default = "default StringPiece"];
     */
    value: Uint8Array;
    case: "oneofBytesStringPiece";
  } | {
    /**
     * @generated from field: protobuf_unittest.V2EnumLite oneof_enum = 9;
     */
    value: V2EnumLite;
    case: "oneofEnum";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TestOneofParsingLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestOneofParsingLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "oneof_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "oneof_field" },
    { no: 2, name: "oneof_submessage", kind: "message", T: TestAllTypesLite, oneof: "oneof_field" },
    { no: 3, name: "oneof_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 4, name: "oneof_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, default: new Uint8Array([0x64, 0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73]), oneof: "oneof_field" },
    { no: 5, name: "oneof_string_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "default Cord", oneof: "oneof_field" },
    { no: 6, name: "oneof_bytes_cord", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "oneof_field" },
    { no: 7, name: "oneof_string_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 8, name: "oneof_bytes_string_piece", kind: "scalar", T: 12 /* ScalarType.BYTES */, default: new Uint8Array([0x64, 0x65, 0x66, 0x61, 0x75, 0x6C, 0x74, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x50, 0x69, 0x65, 0x63, 0x65]), oneof: "oneof_field" },
    { no: 9, name: "oneof_enum", kind: "enum", T: proto2.getEnumType(V2EnumLite), oneof: "oneof_field" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneofParsingLite {
    return new TestOneofParsingLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneofParsingLite {
    return new TestOneofParsingLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneofParsingLite {
    return new TestOneofParsingLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestOneofParsingLite | PlainMessage<TestOneofParsingLite> | undefined, b: TestOneofParsingLite | PlainMessage<TestOneofParsingLite> | undefined): boolean {
    return proto2.util.equals(TestOneofParsingLite, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.TestMessageSetLite
 */
export class TestMessageSetLite extends Message<TestMessageSetLite> {
  constructor(data?: PartialMessage<TestMessageSetLite>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.TestMessageSetLite";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMessageSetLite {
    return new TestMessageSetLite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMessageSetLite {
    return new TestMessageSetLite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMessageSetLite {
    return new TestMessageSetLite().fromJsonString(jsonString, options);
  }

  static equals(a: TestMessageSetLite | PlainMessage<TestMessageSetLite> | undefined, b: TestMessageSetLite | PlainMessage<TestMessageSetLite> | undefined): boolean {
    return proto2.util.equals(TestMessageSetLite, a, b);
  }
}

/**
 * The following four messages are set up to test for wire compatibility between
 * packed and non-packed repeated fields. We use the field number 2048, because
 * that is large enough to require a 3-byte varint for the tag.
 *
 * @generated from message protobuf_unittest.PackedInt32
 */
export class PackedInt32 extends Message<PackedInt32> {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048 [packed = true];
   */
  repeatedInt32: number[] = [];

  constructor(data?: PartialMessage<PackedInt32>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.PackedInt32";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2048, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PackedInt32 {
    return new PackedInt32().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PackedInt32 {
    return new PackedInt32().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PackedInt32 {
    return new PackedInt32().fromJsonString(jsonString, options);
  }

  static equals(a: PackedInt32 | PlainMessage<PackedInt32> | undefined, b: PackedInt32 | PlainMessage<PackedInt32> | undefined): boolean {
    return proto2.util.equals(PackedInt32, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.NonPackedInt32
 */
export class NonPackedInt32 extends Message<NonPackedInt32> {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048;
   */
  repeatedInt32: number[] = [];

  constructor(data?: PartialMessage<NonPackedInt32>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.NonPackedInt32";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2048, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NonPackedInt32 {
    return new NonPackedInt32().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NonPackedInt32 {
    return new NonPackedInt32().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NonPackedInt32 {
    return new NonPackedInt32().fromJsonString(jsonString, options);
  }

  static equals(a: NonPackedInt32 | PlainMessage<NonPackedInt32> | undefined, b: NonPackedInt32 | PlainMessage<NonPackedInt32> | undefined): boolean {
    return proto2.util.equals(NonPackedInt32, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.PackedFixed32
 */
export class PackedFixed32 extends Message<PackedFixed32> {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048 [packed = true];
   */
  repeatedFixed32: number[] = [];

  constructor(data?: PartialMessage<PackedFixed32>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.PackedFixed32";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2048, name: "repeated_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true, packed: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PackedFixed32 {
    return new PackedFixed32().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PackedFixed32 {
    return new PackedFixed32().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PackedFixed32 {
    return new PackedFixed32().fromJsonString(jsonString, options);
  }

  static equals(a: PackedFixed32 | PlainMessage<PackedFixed32> | undefined, b: PackedFixed32 | PlainMessage<PackedFixed32> | undefined): boolean {
    return proto2.util.equals(PackedFixed32, a, b);
  }
}

/**
 * @generated from message protobuf_unittest.NonPackedFixed32
 */
export class NonPackedFixed32 extends Message<NonPackedFixed32> {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048;
   */
  repeatedFixed32: number[] = [];

  constructor(data?: PartialMessage<NonPackedFixed32>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.NonPackedFixed32";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2048, name: "repeated_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NonPackedFixed32 {
    return new NonPackedFixed32().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NonPackedFixed32 {
    return new NonPackedFixed32().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NonPackedFixed32 {
    return new NonPackedFixed32().fromJsonString(jsonString, options);
  }

  static equals(a: NonPackedFixed32 | PlainMessage<NonPackedFixed32> | undefined, b: NonPackedFixed32 | PlainMessage<NonPackedFixed32> | undefined): boolean {
    return proto2.util.equals(NonPackedFixed32, a, b);
  }
}

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from message protobuf_unittest.DupEnum
 */
export class DupEnum extends Message<DupEnum> {
  constructor(data?: PartialMessage<DupEnum>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.DupEnum";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DupEnum {
    return new DupEnum().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DupEnum {
    return new DupEnum().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DupEnum {
    return new DupEnum().fromJsonString(jsonString, options);
  }

  static equals(a: DupEnum | PlainMessage<DupEnum> | undefined, b: DupEnum | PlainMessage<DupEnum> | undefined): boolean {
    return proto2.util.equals(DupEnum, a, b);
  }
}

/**
 * @generated from enum protobuf_unittest.DupEnum.TestEnumWithDupValueLite
 */
export enum DupEnum_TestEnumWithDupValueLite {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}
// Retrieve enum metadata with: proto2.getEnumType(DupEnum_TestEnumWithDupValueLite)
proto2.util.setEnumType(DupEnum_TestEnumWithDupValueLite, "protobuf_unittest.DupEnum.TestEnumWithDupValueLite", [
  { no: 1, name: "FOO1" },
  { no: 2, name: "BAR1" },
  { no: 3, name: "BAZ" },
  { no: 1, name: "FOO2" },
  { no: 2, name: "BAR2" },
]);

/**
 * @generated from message protobuf_unittest.RecursiveMessage
 */
export class RecursiveMessage extends Message<RecursiveMessage> {
  /**
   * @generated from field: optional protobuf_unittest.RecursiveMessage recurse = 1;
   */
  recurse?: RecursiveMessage;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload?: Uint8Array;

  constructor(data?: PartialMessage<RecursiveMessage>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "protobuf_unittest.RecursiveMessage";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "recurse", kind: "message", T: RecursiveMessage, opt: true },
    { no: 2, name: "payload", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecursiveMessage {
    return new RecursiveMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecursiveMessage {
    return new RecursiveMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecursiveMessage {
    return new RecursiveMessage().fromJsonString(jsonString, options);
  }

  static equals(a: RecursiveMessage | PlainMessage<RecursiveMessage> | undefined, b: RecursiveMessage | PlainMessage<RecursiveMessage> | undefined): boolean {
    return proto2.util.equals(RecursiveMessage, a, b);
  }
}

