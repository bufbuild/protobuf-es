// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=js+dts,import_extension=js"
// @generated from file extra/edition2023.proto (package spec, edition 2023)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file extra/edition2023.proto.
 */
export const file_extra_edition2023 = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_wrappers]);

/**
 * Describes the message spec.Edition2023Message.
 * Use `create(Edition2023MessageSchema)` to create a new message.
 */
export const Edition2023MessageSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 0);

/**
 * Describes the message spec.Edition2023Message.Child.
 * Use `create(Edition2023Message_ChildSchema)` to create a new message.
 */
export const Edition2023Message_ChildSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 0, 0);

/**
 * Describes the message spec.Edition2023FromProto2Message.
 * Use `create(Edition2023FromProto2MessageSchema)` to create a new message.
 */
export const Edition2023FromProto2MessageSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 1);

/**
 * Describes the message spec.Edition2023FromProto2Message.OptionalGroup.
 * Use `create(Edition2023FromProto2Message_OptionalGroupSchema)` to create a new message.
 */
export const Edition2023FromProto2Message_OptionalGroupSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 1, 0);

/**
 * Describes the message spec.Edition2023FromProto2Message.RequiredGroup.
 * Use `create(Edition2023FromProto2Message_RequiredGroupSchema)` to create a new message.
 */
export const Edition2023FromProto2Message_RequiredGroupSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 1, 1);

/**
 * Describes the message spec.Edition2023FromProto3Message.
 * Use `create(Edition2023FromProto3MessageSchema)` to create a new message.
 */
export const Edition2023FromProto3MessageSchema = /*@__PURE__*/
  messageDesc(file_extra_edition2023, 2);

/**
 * Describes the enum spec.Edition2023EnumOpen.
 */
export const Edition2023EnumOpenSchema = /*@__PURE__*/
  enumDesc(file_extra_edition2023, 0);

/**
 * @generated from enum spec.Edition2023EnumOpen
 */
export const Edition2023EnumOpen = /*@__PURE__*/
  tsEnum(Edition2023EnumOpenSchema);

/**
 * Describes the enum spec.Edition2023EnumClosed.
 */
export const Edition2023EnumClosedSchema = /*@__PURE__*/
  enumDesc(file_extra_edition2023, 1);

/**
 * @generated from enum spec.Edition2023EnumClosed
 * @generated with option features.enum_type = CLOSED
 */
export const Edition2023EnumClosed = /*@__PURE__*/
  tsEnum(Edition2023EnumClosedSchema);

