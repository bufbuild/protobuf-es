// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.6.0 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file extra/extensions-proto2.proto (package proto2ext, syntax proto2)
/* eslint-disable */

import type { BinaryReadOptions, Extension, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import type { User } from "./example_pb.js";

/**
 * An enumeration used in extensions
 *
 * @generated from enum proto2ext.Proto2ExtEnum
 */
export declare enum Proto2ExtEnum {
  /**
   * @generated from enum value: PROTO2_EXT_ENUM_YES = 1;
   */
  YES = 1,

  /**
   * @generated from enum value: PROTO2_EXT_ENUM_NO = 2;
   */
  NO = 2,
}

/**
 * The message we're going to extend
 *
 * @generated from message proto2ext.Proto2Extendee
 */
export declare class Proto2Extendee extends Message<Proto2Extendee> {
  /**
   * @generated from field: optional int32 own_field = 1;
   */
  ownField?: number;

  constructor(data?: PartialMessage<Proto2Extendee>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "proto2ext.Proto2Extendee";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2Extendee;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2Extendee;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2Extendee;

  static equals(a: Proto2Extendee | PlainMessage<Proto2Extendee> | undefined, b: Proto2Extendee | PlainMessage<Proto2Extendee> | undefined): boolean;
}

/**
 * A message used in extensions
 *
 * @generated from message proto2ext.Proto2ExtMessage
 */
export declare class Proto2ExtMessage extends Message<Proto2ExtMessage> {
  /**
   * @generated from field: optional string string_field = 1;
   */
  stringField?: string;

  constructor(data?: PartialMessage<Proto2ExtMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "proto2ext.Proto2ExtMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2ExtMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2ExtMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2ExtMessage;

  static equals(a: Proto2ExtMessage | PlainMessage<Proto2ExtMessage> | undefined, b: Proto2ExtMessage | PlainMessage<Proto2ExtMessage> | undefined): boolean;
}

/**
 * A container for nested extensions
 *
 * @generated from message proto2ext.Proto2ExtContainer
 */
export declare class Proto2ExtContainer extends Message<Proto2ExtContainer> {
  constructor(data?: PartialMessage<Proto2ExtContainer>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "proto2ext.Proto2ExtContainer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2ExtContainer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2ExtContainer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2ExtContainer;

  static equals(a: Proto2ExtContainer | PlainMessage<Proto2ExtContainer> | undefined, b: Proto2ExtContainer | PlainMessage<Proto2ExtContainer> | undefined): boolean;
}

/**
 * @generated from message proto2ext.Proto2ExtContainer.Child
 */
export declare class Proto2ExtContainer_Child extends Message<Proto2ExtContainer_Child> {
  constructor(data?: PartialMessage<Proto2ExtContainer_Child>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "proto2ext.Proto2ExtContainer.Child";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proto2ExtContainer_Child;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proto2ExtContainer_Child;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proto2ExtContainer_Child;

  static equals(a: Proto2ExtContainer_Child | PlainMessage<Proto2ExtContainer_Child> | undefined, b: Proto2ExtContainer_Child | PlainMessage<Proto2ExtContainer_Child> | undefined): boolean;
}

/**
 * @generated from extension: optional uint32 uint32_ext = 9010;
 */
export declare const Proto2ExtContainer_Child_uint32_ext: Extension<Proto2Extendee, number>;

/**
 * @generated from extension: optional uint32 uint32_ext = 9001;
 */
export declare const Proto2ExtContainer_uint32_ext: Extension<Proto2Extendee, number>;

/**
 * @generated from extension: optional uint32 uint32_ext = 1001;
 */
export declare const uint32_ext: Extension<Proto2Extendee, number>;

/**
 * @generated from extension: optional uint32 uint32_ext_with_default = 1002 [default = 999];
 */
export declare const uint32_ext_with_default: Extension<Proto2Extendee, number>;

/**
 * @generated from extension: optional string string_ext = 2001;
 */
export declare const string_ext: Extension<Proto2Extendee, string>;

/**
 * @generated from extension: optional string string_ext_with_default = 2002 [default = "hello \" *\/ "];
 */
export declare const string_ext_with_default: Extension<Proto2Extendee, string>;

/**
 * @generated from extension: optional uint64 uint64_ext = 3001;
 */
export declare const uint64_ext: Extension<Proto2Extendee, bigint>;

/**
 * @generated from extension: optional uint64 uint64_ext_js_string = 3002 [jstype = JS_STRING];
 */
export declare const uint64_ext_js_string: Extension<Proto2Extendee, string>;

/**
 * @generated from extension: optional bytes bytes_ext = 4001;
 */
export declare const bytes_ext: Extension<Proto2Extendee, Uint8Array>;

/**
 * @generated from extension: optional bytes bytes_ext_with_default = 4002 [default = "\000x\\x\\"x\'AAAAAA\010\014\n\r\t\013"];
 */
export declare const bytes_ext_with_default: Extension<Proto2Extendee, Uint8Array>;

/**
 * @generated from extension: optional proto2ext.Proto2ExtEnum enum_ext = 5001;
 */
export declare const enum_ext: Extension<Proto2Extendee, Proto2ExtEnum>;

/**
 * @generated from extension: optional proto2ext.Proto2ExtEnum enum_ext_with_default = 5002 [default = PROTO2_EXT_ENUM_NO];
 */
export declare const enum_ext_with_default: Extension<Proto2Extendee, Proto2ExtEnum>;

/**
 * @generated from extension: optional proto2ext.Proto2ExtMessage message_ext = 6001;
 */
export declare const message_ext: Extension<Proto2Extendee, Proto2ExtMessage>;

/**
 * @generated from extension: optional docs.User message_ext_proto3 = 6002;
 */
export declare const message_ext_proto3: Extension<Proto2Extendee, User>;

/**
 * @generated from extension: repeated proto2ext.Proto2ExtMessage repeated_message_ext = 7001;
 */
export declare const repeated_message_ext: Extension<Proto2Extendee, Proto2ExtMessage[]>;

/**
 * @generated from extension: repeated proto2ext.Proto2ExtEnum repeated_enum_ext = 7005;
 */
export declare const repeated_enum_ext: Extension<Proto2Extendee, Proto2ExtEnum[]>;

/**
 * @generated from extension: repeated string repeated_string_ext = 7002;
 */
export declare const repeated_string_ext: Extension<Proto2Extendee, string[]>;

/**
 * @generated from extension: repeated uint32 packed_uint32_ext = 7003 [packed = true];
 */
export declare const packed_uint32_ext: Extension<Proto2Extendee, number[]>;

/**
 * unpacked by default in proto2
 *
 * @generated from extension: repeated uint32 unpacked_uint32_ext = 7004;
 */
export declare const unpacked_uint32_ext: Extension<Proto2Extendee, number[]>;

/**
 * @generated from extension: optional google.protobuf.UInt32Value wrapper_ext = 8001;
 */
export declare const wrapper_ext: Extension<Proto2Extendee, number>;

