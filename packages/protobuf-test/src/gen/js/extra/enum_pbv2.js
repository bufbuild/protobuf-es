// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es-next v1.7.2 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file extra/enum.proto (package spec, syntax proto3)
/* eslint-disable */

import { enumDesc, extDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/next/codegenv1";
import { fileDesc_google_protobuf_descriptor } from "@bufbuild/protobuf/next";

export const fileDesc_extra_enum = fileDesc("ChBleHRyYS9lbnVtLnByb3RvEgRzcGVjIm4KC0VudW1NZXNzYWdlEjAKCmVudW1fZmllbGQYASABKA4yHC5zcGVjLkVudW1NZXNzYWdlLk5lc3RlZEVudW0iLQoKTmVzdGVkRW51bRIPCgtORVNURURfWkVSTxAAEg4KCk5FU1RFRF9PTkUQASo0Cg1Bbm5vdGF0ZWRFbnVtEg8KC1VOU1BFQ0lGSUVEEAASDQoDRk9PEAEaBMi7AQEaA4h9ASotCgpTaW1wbGVFbnVtEg8KC1NJTVBMRV9aRVJPEAASDgoKU0lNUExFX09ORRABKkUKCUFsaWFzRW51bRIOCgpBTElBU19aRVJPEAASDQoJQUxJQVNfT05FEAESFQoRQUxJQVNfT05FX0FMSUFTRUQQARoCEAEqNwoKUHJlZml4RW51bRIUChBQUkVGSVhfRU5VTV9aRVJPEAASEwoPUFJFRklYX0VOVU1fT05FEAE6QQoNZW51bV9vcHRfYm9vbBIcLmdvb2dsZS5wcm90b2J1Zi5FbnVtT3B0aW9ucxjRDyABKAhSC2VudW1PcHRCb29sOlEKE2VudW1fdmFsdWVfb3B0X2Jvb2wSIS5nb29nbGUucHJvdG9idWYuRW51bVZhbHVlT3B0aW9ucxi5FyABKAhSEGVudW1WYWx1ZU9wdEJvb2xiBnByb3RvMw", [fileDesc_google_protobuf_descriptor]);

// Describes the message spec.EnumMessage. Use `create(EnumMessageDesc)` to create a new EnumMessage.
export const EnumMessageDesc = messageDesc(fileDesc_extra_enum, 0);

// Describes the enum spec.EnumMessage.NestedEnum.
export const EnumMessage_NestedEnumDesc = enumDesc(fileDesc_extra_enum, 0, 0);

/**
 * @generated from enum spec.EnumMessage.NestedEnum
 */
export const EnumMessage_NestedEnum = tsEnum(EnumMessage_NestedEnumDesc);

// Describes the enum spec.AnnotatedEnum.
export const AnnotatedEnumDesc = enumDesc(fileDesc_extra_enum, 0);

/**
 * @generated from enum spec.AnnotatedEnum
 */
export const AnnotatedEnum = tsEnum(AnnotatedEnumDesc);

// Describes the enum spec.SimpleEnum.
export const SimpleEnumDesc = enumDesc(fileDesc_extra_enum, 1);

/**
 * @generated from enum spec.SimpleEnum
 */
export const SimpleEnum = tsEnum(SimpleEnumDesc);

// Describes the enum spec.AliasEnum.
export const AliasEnumDesc = enumDesc(fileDesc_extra_enum, 2);

/**
 * @generated from enum spec.AliasEnum
 */
export const AliasEnum = tsEnum(AliasEnumDesc);

// Describes the enum spec.PrefixEnum.
export const PrefixEnumDesc = enumDesc(fileDesc_extra_enum, 3);

/**
 * The generated enum values should drop the "PREFIX_"
 * part at the top if the target language allows
 * (basically every language except C++).
 *
 * @generated from enum spec.PrefixEnum
 */
export const PrefixEnum = tsEnum(PrefixEnumDesc);

/**
 * @generated from extension: bool enum_opt_bool = 2001;
 */
export const enum_opt_bool = extDesc(fileDesc_extra_enum, 0);

/**
 * @generated from extension: bool enum_value_opt_bool = 3001;
 */
export const enum_value_opt_bool = extDesc(fileDesc_extra_enum, 1);

