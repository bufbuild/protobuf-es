// Protocol Buffers - Google's data interchange format
// Copyright 2023 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// @generated by protoc-gen-es v1.3.2 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest_proto3_bad_macros.proto (package protobuf_unittest, syntax proto3)
/* eslint-disable */

import { proto3 } from "@bufbuild/protobuf";

/**
 * This generates `GID_MAX`, which is a macro in some circumstances.
 *
 * @generated from enum protobuf_unittest.GID
 */
export const GID = proto3.makeEnum(
  "protobuf_unittest.GID",
  [
    {no: 0, name: "GID_UNUSED"},
  ],
);

/**
 * This generates `UID_MAX`, which is a mcro in some circumstances.
 *
 * @generated from enum protobuf_unittest.UID
 */
export const UID = proto3.makeEnum(
  "protobuf_unittest.UID",
  [
    {no: 0, name: "UID_UNUSED"},
  ],
);

/**
 * Just a container for bad macro names. Some of these do not follow the normal
 * naming conventions, this is intentional, we just want to trigger a build
 * failure if the macro is left defined.
 *
 * @generated from enum protobuf_unittest.BadNames
 */
export const BadNames = proto3.makeEnum(
  "protobuf_unittest.BadNames",
  [
    {no: 0, name: "PACKAGE"},
    {no: 1, name: "PACKED"},
    {no: 2, name: "linux"},
    {no: 3, name: "DOMAIN"},
    {no: 4, name: "TRUE"},
    {no: 5, name: "FALSE"},
    {no: 6, name: "CREATE_NEW"},
    {no: 7, name: "DELETE"},
    {no: 8, name: "DOUBLE_CLICK"},
    {no: 9, name: "ERROR"},
    {no: 10, name: "ERROR_BUSY"},
    {no: 11, name: "ERROR_INSTALL_FAILED"},
    {no: 12, name: "ERROR_NOT_FOUND"},
    {no: 13, name: "GetClassName"},
    {no: 14, name: "GetCurrentTime"},
    {no: 15, name: "GetMessage"},
    {no: 16, name: "GetObject"},
    {no: 17, name: "IGNORE"},
    {no: 18, name: "IN"},
    {no: 19, name: "INPUT_KEYBOARD"},
    {no: 20, name: "NO_ERROR"},
    {no: 21, name: "OUT"},
    {no: 22, name: "OPTIONAL"},
    {no: 23, name: "NEAR"},
    {no: 24, name: "NO_DATA"},
    {no: 25, name: "REASON_UNKNOWN"},
    {no: 26, name: "SERVICE_DISABLED"},
    {no: 27, name: "SEVERITY_ERROR"},
    {no: 28, name: "STATUS_PENDING"},
    {no: 29, name: "STRICT"},
    {no: 30, name: "TYPE_BOOL"},
    {no: 31, name: "DEBUG"},
  ],
);

