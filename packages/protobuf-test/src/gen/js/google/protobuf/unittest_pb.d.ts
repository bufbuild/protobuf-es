// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file we will use for unit testing.
//
// LINT: ALLOW_GROUPS, LEGACY_NAMES

// @generated by protoc-gen-es v2.2.0 with parameter "target=js+dts,import_extension=js"
// @generated from file google/protobuf/unittest.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In test_util.h we do "using namespace unittest = protobuf_unittest".

import type { GenEnum, GenExtension, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ImportEnum, ImportMessage } from "./unittest_import_pb.js";
import type { PublicImportMessage } from "./unittest_import_public_pb.js";

/**
 * Describes the file google/protobuf/unittest.proto.
 */
export declare const file_google_protobuf_unittest: GenFile;

/**
 * This proto includes every type of field in both singular and repeated
 * forms.
 *
 * @generated from message protobuf_unittest.TestAllTypes
 */
export declare type TestAllTypes = Message<"protobuf_unittest.TestAllTypes"> & {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypes_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessage optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum optional_import_enum = 23;
   */
  optionalImportEnum: ImportEnum;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypes_RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypes_NestedMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessage[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessage repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypes_NestedEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnum[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypes_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
   */
  defaultForeignEnum: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
   */
  defaultImportEnum: ImportEnum;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypes.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypes_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_cord = 115;
     */
    value: string;
    case: "oneofCord";
  } | {
    /**
     * @generated from field: string oneof_string_piece = 116;
     */
    value: string;
    case: "oneofStringPiece";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes.NestedMessage oneof_lazy_nested_message = 117;
     */
    value: TestAllTypes_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protobuf_unittest.TestAllTypes.
 * Use `create(TestAllTypesSchema)` to create a new message.
 */
export declare const TestAllTypesSchema: GenMessage<TestAllTypes>;

/**
 * @generated from message protobuf_unittest.TestAllTypes.NestedMessage
 */
export declare type TestAllTypes_NestedMessage = Message<"protobuf_unittest.TestAllTypes.NestedMessage"> & {
  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

/**
 * Describes the message protobuf_unittest.TestAllTypes.NestedMessage.
 * Use `create(TestAllTypes_NestedMessageSchema)` to create a new message.
 */
export declare const TestAllTypes_NestedMessageSchema: GenMessage<TestAllTypes_NestedMessage>;

/**
 * @generated from message protobuf_unittest.TestAllTypes.OptionalGroup
 */
export declare type TestAllTypes_OptionalGroup = Message<"protobuf_unittest.TestAllTypes.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestAllTypes.OptionalGroup.
 * Use `create(TestAllTypes_OptionalGroupSchema)` to create a new message.
 */
export declare const TestAllTypes_OptionalGroupSchema: GenMessage<TestAllTypes_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestAllTypes.RepeatedGroup
 */
export declare type TestAllTypes_RepeatedGroup = Message<"protobuf_unittest.TestAllTypes.RepeatedGroup"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestAllTypes.RepeatedGroup.
 * Use `create(TestAllTypes_RepeatedGroupSchema)` to create a new message.
 */
export declare const TestAllTypes_RepeatedGroupSchema: GenMessage<TestAllTypes_RepeatedGroup>;

/**
 * @generated from enum protobuf_unittest.TestAllTypes.NestedEnum
 */
export enum TestAllTypes_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * Intentionally negative.
   *
   * @generated from enum value: NEG = -1;
   */
  NEG = -1,
}

/**
 * Describes the enum protobuf_unittest.TestAllTypes.NestedEnum.
 */
export declare const TestAllTypes_NestedEnumSchema: GenEnum<TestAllTypes_NestedEnum>;

/**
 * This proto includes a recursively nested message.
 *
 * @generated from message protobuf_unittest.NestedTestAllTypes
 */
export declare type NestedTestAllTypes = Message<"protobuf_unittest.NestedTestAllTypes"> & {
  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes child = 1;
   */
  child?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes payload = 2;
   */
  payload?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.NestedTestAllTypes repeated_child = 3;
   */
  repeatedChild: NestedTestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes lazy_child = 4;
   */
  lazyChild?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes eager_child = 5;
   */
  eagerChild?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.NestedTestAllTypes.
 * Use `create(NestedTestAllTypesSchema)` to create a new message.
 */
export declare const NestedTestAllTypesSchema: GenMessage<NestedTestAllTypes>;

/**
 * @generated from message protobuf_unittest.TestDeprecatedFields
 */
export declare type TestDeprecatedFields = Message<"protobuf_unittest.TestDeprecatedFields"> & {
  /**
   * @generated from field: optional int32 deprecated_int32 = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedInt32: number;

  /**
   * @generated from field: repeated string deprecated_repeated_string = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedRepeatedString: string[];

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from oneof protobuf_unittest.TestDeprecatedFields.oneof_fields
   */
  oneofFields: {
    /**
     * @generated from field: int32 deprecated_int32_in_oneof = 2 [deprecated = true];
     * @deprecated
     */
    value: number;
    case: "deprecatedInt32InOneof";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional protobuf_unittest.TestDeprecatedFields nested = 5;
   */
  nested?: TestDeprecatedFields;
};

/**
 * Describes the message protobuf_unittest.TestDeprecatedFields.
 * Use `create(TestDeprecatedFieldsSchema)` to create a new message.
 */
export declare const TestDeprecatedFieldsSchema: GenMessage<TestDeprecatedFields>;

/**
 * @generated from message protobuf_unittest.TestDeprecatedMessage
 * @deprecated
 */
export declare type TestDeprecatedMessage = Message<"protobuf_unittest.TestDeprecatedMessage"> & {
};

/**
 * Describes the message protobuf_unittest.TestDeprecatedMessage.
 * Use `create(TestDeprecatedMessageSchema)` to create a new message.
 * @deprecated
 */
export declare const TestDeprecatedMessageSchema: GenMessage<TestDeprecatedMessage>;

/**
 * Define these after TestAllTypes to make sure the compiler can handle
 * that.
 *
 * @generated from message protobuf_unittest.ForeignMessage
 */
export declare type ForeignMessage = Message<"protobuf_unittest.ForeignMessage"> & {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c: number;

  /**
   * @generated from field: optional int32 d = 2;
   */
  d: number;
};

/**
 * Describes the message protobuf_unittest.ForeignMessage.
 * Use `create(ForeignMessageSchema)` to create a new message.
 */
export declare const ForeignMessageSchema: GenMessage<ForeignMessage>;

/**
 * @generated from message protobuf_unittest.TestReservedFields
 */
export declare type TestReservedFields = Message<"protobuf_unittest.TestReservedFields"> & {
};

/**
 * Describes the message protobuf_unittest.TestReservedFields.
 * Use `create(TestReservedFieldsSchema)` to create a new message.
 */
export declare const TestReservedFieldsSchema: GenMessage<TestReservedFields>;

/**
 * @generated from message protobuf_unittest.TestAllExtensions
 */
export declare type TestAllExtensions = Message<"protobuf_unittest.TestAllExtensions"> & {
};

/**
 * Describes the message protobuf_unittest.TestAllExtensions.
 * Use `create(TestAllExtensionsSchema)` to create a new message.
 */
export declare const TestAllExtensionsSchema: GenMessage<TestAllExtensions>;

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension
 */
export declare type OptionalGroup_extension = Message<"protobuf_unittest.OptionalGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.OptionalGroup_extension.
 * Use `create(OptionalGroup_extensionSchema)` to create a new message.
 */
export declare const OptionalGroup_extensionSchema: GenMessage<OptionalGroup_extension>;

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension
 */
export declare type RepeatedGroup_extension = Message<"protobuf_unittest.RepeatedGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.RepeatedGroup_extension.
 * Use `create(RepeatedGroup_extensionSchema)` to create a new message.
 */
export declare const RepeatedGroup_extensionSchema: GenMessage<RepeatedGroup_extension>;

/**
 * @generated from message protobuf_unittest.TestMixedFieldsAndExtensions
 */
export declare type TestMixedFieldsAndExtensions = Message<"protobuf_unittest.TestMixedFieldsAndExtensions"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: repeated fixed32 b = 3;
   */
  b: number[];
};

/**
 * Describes the message protobuf_unittest.TestMixedFieldsAndExtensions.
 * Use `create(TestMixedFieldsAndExtensionsSchema)` to create a new message.
 */
export declare const TestMixedFieldsAndExtensionsSchema: GenMessage<TestMixedFieldsAndExtensions>;

/**
 * @generated from extension: optional int32 c = 2;
 */
export declare const TestMixedFieldsAndExtensions_c: GenExtension<TestMixedFieldsAndExtensions, number>;

/**
 * @generated from extension: repeated fixed32 d = 4;
 */
export declare const TestMixedFieldsAndExtensions_d: GenExtension<TestMixedFieldsAndExtensions, number[]>;

/**
 * @generated from message protobuf_unittest.TestGroup
 */
export declare type TestGroup = Message<"protobuf_unittest.TestGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestGroup.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestGroup_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnum;
};

/**
 * Describes the message protobuf_unittest.TestGroup.
 * Use `create(TestGroupSchema)` to create a new message.
 */
export declare const TestGroupSchema: GenMessage<TestGroup>;

/**
 * @generated from message protobuf_unittest.TestGroup.OptionalGroup
 */
export declare type TestGroup_OptionalGroup = Message<"protobuf_unittest.TestGroup.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;

  /**
   * fast table size must be at least 16, for this
   *
   * @generated from field: optional int32 zz = 89;
   */
  zz: number;
};

/**
 * Describes the message protobuf_unittest.TestGroup.OptionalGroup.
 * Use `create(TestGroup_OptionalGroupSchema)` to create a new message.
 */
export declare const TestGroup_OptionalGroupSchema: GenMessage<TestGroup_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestGroupExtension
 */
export declare type TestGroupExtension = Message<"protobuf_unittest.TestGroupExtension"> & {
};

/**
 * Describes the message protobuf_unittest.TestGroupExtension.
 * Use `create(TestGroupExtensionSchema)` to create a new message.
 */
export declare const TestGroupExtensionSchema: GenMessage<TestGroupExtension>;

/**
 * @generated from message protobuf_unittest.TestNestedExtension
 */
export declare type TestNestedExtension = Message<"protobuf_unittest.TestNestedExtension"> & {
};

/**
 * Describes the message protobuf_unittest.TestNestedExtension.
 * Use `create(TestNestedExtensionSchema)` to create a new message.
 */
export declare const TestNestedExtensionSchema: GenMessage<TestNestedExtension>;

/**
 * @generated from message protobuf_unittest.TestNestedExtension.OptionalGroup_extension
 */
export declare type TestNestedExtension_OptionalGroup_extension = Message<"protobuf_unittest.TestNestedExtension.OptionalGroup_extension"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestNestedExtension.OptionalGroup_extension.
 * Use `create(TestNestedExtension_OptionalGroup_extensionSchema)` to create a new message.
 */
export declare const TestNestedExtension_OptionalGroup_extensionSchema: GenMessage<TestNestedExtension_OptionalGroup_extension>;

/**
 * Check for bug where string extensions declared in tested scope did not
 * compile.
 *
 * @generated from extension: optional string test = 1002 [default = "test"];
 */
export declare const TestNestedExtension_test: GenExtension<TestAllExtensions, string>;

/**
 * Used to test if generated extension name is correct when there are
 * underscores.
 *
 * @generated from extension: optional string nested_string_extension = 1003;
 */
export declare const TestNestedExtension_nested_string_extension: GenExtension<TestAllExtensions, string>;

/**
 * @generated from extension: optional protobuf_unittest.TestNestedExtension.OptionalGroup_extension optionalgroup_extension = 16;
 */
export declare const TestNestedExtension_optionalgroup_extension: GenExtension<TestGroupExtension, TestNestedExtension_OptionalGroup_extension>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum optional_foreign_enum_extension = 22;
 */
export declare const TestNestedExtension_optional_foreign_enum_extension: GenExtension<TestGroupExtension, ForeignEnum>;

/**
 * @generated from message protobuf_unittest.TestChildExtension
 */
export declare type TestChildExtension = Message<"protobuf_unittest.TestChildExtension"> & {
  /**
   * @generated from field: optional string a = 1;
   */
  a: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions optional_extension = 3;
   */
  optionalExtension?: TestAllExtensions;
};

/**
 * Describes the message protobuf_unittest.TestChildExtension.
 * Use `create(TestChildExtensionSchema)` to create a new message.
 */
export declare const TestChildExtensionSchema: GenMessage<TestChildExtension>;

/**
 * Emulates wireformat data of TestChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestChildExtensionData
 */
export declare type TestChildExtensionData = Message<"protobuf_unittest.TestChildExtensionData"> & {
  /**
   * @generated from field: optional string a = 1;
   */
  a: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b: string;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
   */
  optionalExtension?: TestChildExtensionData_NestedTestAllExtensionsData;
};

/**
 * Describes the message protobuf_unittest.TestChildExtensionData.
 * Use `create(TestChildExtensionDataSchema)` to create a new message.
 */
export declare const TestChildExtensionDataSchema: GenMessage<TestChildExtensionData>;

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData
 */
export declare type TestChildExtensionData_NestedTestAllExtensionsData = Message<"protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
   */
  dynamic?: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;
};

/**
 * Describes the message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.
 * Use `create(TestChildExtensionData_NestedTestAllExtensionsDataSchema)` to create a new message.
 */
export declare const TestChildExtensionData_NestedTestAllExtensionsDataSchema: GenMessage<TestChildExtensionData_NestedTestAllExtensionsData>;

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions
 */
export declare type TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions = Message<"protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions.
 * Use `create(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsSchema)` to create a new message.
 */
export declare const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsSchema: GenMessage<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>;

/**
 * @generated from message protobuf_unittest.TestNestedChildExtension
 */
export declare type TestNestedChildExtension = Message<"protobuf_unittest.TestNestedChildExtension"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtension child = 2;
   */
  child?: TestChildExtension;
};

/**
 * Describes the message protobuf_unittest.TestNestedChildExtension.
 * Use `create(TestNestedChildExtensionSchema)` to create a new message.
 */
export declare const TestNestedChildExtensionSchema: GenMessage<TestNestedChildExtension>;

/**
 * Emulates wireformat data of TestNestedChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestNestedChildExtensionData
 */
export declare type TestNestedChildExtensionData = Message<"protobuf_unittest.TestNestedChildExtensionData"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData child = 2;
   */
  child?: TestChildExtensionData;
};

/**
 * Describes the message protobuf_unittest.TestNestedChildExtensionData.
 * Use `create(TestNestedChildExtensionDataSchema)` to create a new message.
 */
export declare const TestNestedChildExtensionDataSchema: GenMessage<TestNestedChildExtensionData>;

/**
 * Required and closed enum fields are considered unknown fields if the value is
 * not valid. We need to make sure it functions as expected.
 *
 * @generated from message protobuf_unittest.TestRequiredEnum
 */
export declare type TestRequiredEnum = Message<"protobuf_unittest.TestRequiredEnum"> & {
  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum = 1;
   */
  requiredEnum: ForeignEnum;

  /**
   * A dummy optional field.
   *
   * @generated from field: optional int32 a = 2;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestRequiredEnum.
 * Use `create(TestRequiredEnumSchema)` to create a new message.
 */
export declare const TestRequiredEnumSchema: GenMessage<TestRequiredEnum>;

/**
 * TestRequiredEnum + using enum values that won't fit to 64 bitmask.
 *
 * @generated from message protobuf_unittest.TestRequiredEnumNoMask
 */
export declare type TestRequiredEnumNoMask = Message<"protobuf_unittest.TestRequiredEnumNoMask"> & {
  /**
   * @generated from field: required protobuf_unittest.TestRequiredEnumNoMask.NestedEnum required_enum = 1;
   */
  requiredEnum: TestRequiredEnumNoMask_NestedEnum;

  /**
   * A dummy optional field.
   *
   * @generated from field: optional int32 a = 2;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestRequiredEnumNoMask.
 * Use `create(TestRequiredEnumNoMaskSchema)` to create a new message.
 */
export declare const TestRequiredEnumNoMaskSchema: GenMessage<TestRequiredEnumNoMask>;

/**
 * @generated from enum protobuf_unittest.TestRequiredEnumNoMask.NestedEnum
 */
export enum TestRequiredEnumNoMask_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 2;
   */
  FOO = 2,

  /**
   * @generated from enum value: BAR = 100;
   */
  BAR = 100,

  /**
   * Intentionally negative.
   *
   * @generated from enum value: BAZ = -1;
   */
  BAZ = -1,
}

/**
 * Describes the enum protobuf_unittest.TestRequiredEnumNoMask.NestedEnum.
 */
export declare const TestRequiredEnumNoMask_NestedEnumSchema: GenEnum<TestRequiredEnumNoMask_NestedEnum>;

/**
 * @generated from message protobuf_unittest.TestRequiredEnumMulti
 */
export declare type TestRequiredEnumMulti = Message<"protobuf_unittest.TestRequiredEnumMulti"> & {
  /**
   * Intentionally placed in descending field number to force sorting in closed
   * enum verification.
   *
   * @generated from field: required protobuf_unittest.TestRequiredEnumMulti.NestedEnum required_enum_4 = 4;
   */
  requiredEnum4: TestRequiredEnumMulti_NestedEnum;

  /**
   * @generated from field: optional int32 a_3 = 3;
   */
  a3: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredEnumMulti.NestedEnum required_enum_2 = 2;
   */
  requiredEnum2: TestRequiredEnumMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum_1 = 1;
   */
  requiredEnum1: ForeignEnum;
};

/**
 * Describes the message protobuf_unittest.TestRequiredEnumMulti.
 * Use `create(TestRequiredEnumMultiSchema)` to create a new message.
 */
export declare const TestRequiredEnumMultiSchema: GenMessage<TestRequiredEnumMulti>;

/**
 * @generated from enum protobuf_unittest.TestRequiredEnumMulti.NestedEnum
 */
export enum TestRequiredEnumMulti_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 100;
   */
  BAZ = 100,
}

/**
 * Describes the enum protobuf_unittest.TestRequiredEnumMulti.NestedEnum.
 */
export declare const TestRequiredEnumMulti_NestedEnumSchema: GenEnum<TestRequiredEnumMulti_NestedEnum>;

/**
 * @generated from message protobuf_unittest.TestRequiredNoMaskMulti
 */
export declare type TestRequiredNoMaskMulti = Message<"protobuf_unittest.TestRequiredNoMaskMulti"> & {
  /**
   * Intentionally placed in descending field number to force sorting in closed
   * enum verification. Also, using large field numbers to use tag only
   * matching for required fields.
   *
   * @generated from field: required fixed32 required_fixed32_80 = 80;
   */
  requiredFixed3280: number;

  /**
   * @generated from field: required fixed32 required_fixed32_70 = 70;
   */
  requiredFixed3270: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_64 = 64;
   */
  requiredEnum64: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_4 = 4;
   */
  requiredEnum4: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: optional int32 a_3 = 3;
   */
  a3: number;

  /**
   * @generated from field: required protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum required_enum_2 = 2;
   */
  requiredEnum2: TestRequiredNoMaskMulti_NestedEnum;

  /**
   * @generated from field: required protobuf_unittest.ForeignEnum required_enum_1 = 1;
   */
  requiredEnum1: ForeignEnum;
};

/**
 * Describes the message protobuf_unittest.TestRequiredNoMaskMulti.
 * Use `create(TestRequiredNoMaskMultiSchema)` to create a new message.
 */
export declare const TestRequiredNoMaskMultiSchema: GenMessage<TestRequiredNoMaskMulti>;

/**
 * @generated from enum protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum
 */
export enum TestRequiredNoMaskMulti_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 100;
   */
  BAZ = 100,
}

/**
 * Describes the enum protobuf_unittest.TestRequiredNoMaskMulti.NestedEnum.
 */
export declare const TestRequiredNoMaskMulti_NestedEnumSchema: GenEnum<TestRequiredNoMaskMulti_NestedEnum>;

/**
 * We have separate messages for testing required fields because it's
 * annoying to have to fill in required fields in TestProto in order to
 * do anything with it.  Note that we don't need to test every type of
 * required filed because the code output is basically identical to
 * optional fields for all types.
 *
 * @generated from message protobuf_unittest.TestRequired
 */
export declare type TestRequired = Message<"protobuf_unittest.TestRequired"> & {
  /**
   * @generated from field: required int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 dummy2 = 2;
   */
  dummy2: number;

  /**
   * @generated from field: required int32 b = 3;
   */
  b: number;

  /**
   * Pad the field count to 32 so that we can test that IsInitialized()
   * properly checks multiple elements of has_bits_.
   *
   * @generated from field: optional int32 dummy4 = 4;
   */
  dummy4: number;

  /**
   * @generated from field: optional int32 dummy5 = 5;
   */
  dummy5: number;

  /**
   * @generated from field: optional int32 dummy6 = 6;
   */
  dummy6: number;

  /**
   * @generated from field: optional int32 dummy7 = 7;
   */
  dummy7: number;

  /**
   * @generated from field: optional int32 dummy8 = 8;
   */
  dummy8: number;

  /**
   * @generated from field: optional int32 dummy9 = 9;
   */
  dummy9: number;

  /**
   * @generated from field: optional int32 dummy10 = 10;
   */
  dummy10: number;

  /**
   * @generated from field: optional int32 dummy11 = 11;
   */
  dummy11: number;

  /**
   * @generated from field: optional int32 dummy12 = 12;
   */
  dummy12: number;

  /**
   * @generated from field: optional int32 dummy13 = 13;
   */
  dummy13: number;

  /**
   * @generated from field: optional int32 dummy14 = 14;
   */
  dummy14: number;

  /**
   * @generated from field: optional int32 dummy15 = 15;
   */
  dummy15: number;

  /**
   * @generated from field: optional int32 dummy16 = 16;
   */
  dummy16: number;

  /**
   * @generated from field: optional int32 dummy17 = 17;
   */
  dummy17: number;

  /**
   * @generated from field: optional int32 dummy18 = 18;
   */
  dummy18: number;

  /**
   * @generated from field: optional int32 dummy19 = 19;
   */
  dummy19: number;

  /**
   * @generated from field: optional int32 dummy20 = 20;
   */
  dummy20: number;

  /**
   * @generated from field: optional int32 dummy21 = 21;
   */
  dummy21: number;

  /**
   * @generated from field: optional int32 dummy22 = 22;
   */
  dummy22: number;

  /**
   * @generated from field: optional int32 dummy23 = 23;
   */
  dummy23: number;

  /**
   * @generated from field: optional int32 dummy24 = 24;
   */
  dummy24: number;

  /**
   * @generated from field: optional int32 dummy25 = 25;
   */
  dummy25: number;

  /**
   * @generated from field: optional int32 dummy26 = 26;
   */
  dummy26: number;

  /**
   * @generated from field: optional int32 dummy27 = 27;
   */
  dummy27: number;

  /**
   * @generated from field: optional int32 dummy28 = 28;
   */
  dummy28: number;

  /**
   * @generated from field: optional int32 dummy29 = 29;
   */
  dummy29: number;

  /**
   * @generated from field: optional int32 dummy30 = 30;
   */
  dummy30: number;

  /**
   * @generated from field: optional int32 dummy31 = 31;
   */
  dummy31: number;

  /**
   * @generated from field: optional int32 dummy32 = 32;
   */
  dummy32: number;

  /**
   * @generated from field: required int32 c = 33;
   */
  c: number;

  /**
   * Add an optional child message to make this non-trivial for go/pdlazy.
   *
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign = 34;
   */
  optionalForeign?: ForeignMessage;
};

/**
 * Describes the message protobuf_unittest.TestRequired.
 * Use `create(TestRequiredSchema)` to create a new message.
 */
export declare const TestRequiredSchema: GenMessage<TestRequired>;

/**
 * @generated from extension: optional protobuf_unittest.TestRequired single = 1000;
 */
export declare const TestRequired_single: GenExtension<TestAllExtensions, TestRequired>;

/**
 * @generated from extension: repeated protobuf_unittest.TestRequired multi = 1001;
 */
export declare const TestRequired_multi: GenExtension<TestAllExtensions, TestRequired[]>;

/**
 * @generated from message protobuf_unittest.TestRequiredForeign
 */
export declare type TestRequiredForeign = Message<"protobuf_unittest.TestRequiredForeign"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy: number;

  /**
   * Missing required fields must not affect verification of child messages.
   *
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4;
   */
  optionalLazyMessage?: NestedTestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestRequiredForeign.
 * Use `create(TestRequiredForeignSchema)` to create a new message.
 */
export declare const TestRequiredForeignSchema: GenMessage<TestRequiredForeign>;

/**
 * @generated from message protobuf_unittest.TestRequiredMessage
 */
export declare type TestRequiredMessage = Message<"protobuf_unittest.TestRequiredMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: required protobuf_unittest.TestRequired required_message = 3;
   */
  requiredMessage?: TestRequired;
};

/**
 * Describes the message protobuf_unittest.TestRequiredMessage.
 * Use `create(TestRequiredMessageSchema)` to create a new message.
 */
export declare const TestRequiredMessageSchema: GenMessage<TestRequiredMessage>;

/**
 * @generated from message protobuf_unittest.TestNestedRequiredForeign
 */
export declare type TestNestedRequiredForeign = Message<"protobuf_unittest.TestNestedRequiredForeign"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedRequiredForeign child = 1;
   */
  child?: TestNestedRequiredForeign;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredForeign payload = 2;
   */
  payload?: TestRequiredForeign;

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy: number;

  /**
   * optional message to test required closed enum.
   *
   * @generated from field: optional protobuf_unittest.TestRequiredEnum required_enum = 5;
   */
  requiredEnum?: TestRequiredEnum;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredEnumNoMask required_enum_no_mask = 6;
   */
  requiredEnumNoMask?: TestRequiredEnumNoMask;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredEnumMulti required_enum_multi = 7;
   */
  requiredEnumMulti?: TestRequiredEnumMulti;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredNoMaskMulti required_no_mask = 9;
   */
  requiredNoMask?: TestRequiredNoMaskMulti;
};

/**
 * Describes the message protobuf_unittest.TestNestedRequiredForeign.
 * Use `create(TestNestedRequiredForeignSchema)` to create a new message.
 */
export declare const TestNestedRequiredForeignSchema: GenMessage<TestNestedRequiredForeign>;

/**
 * Test that we can use NestedMessage from outside TestAllTypes.
 *
 * @generated from message protobuf_unittest.TestForeignNested
 */
export declare type TestForeignNested = Message<"protobuf_unittest.TestForeignNested"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
   */
  foreignNested?: TestAllTypes_NestedMessage;
};

/**
 * Describes the message protobuf_unittest.TestForeignNested.
 * Use `create(TestForeignNestedSchema)` to create a new message.
 */
export declare const TestForeignNestedSchema: GenMessage<TestForeignNested>;

/**
 * TestEmptyMessage is used to test unknown field support.
 *
 * @generated from message protobuf_unittest.TestEmptyMessage
 */
export declare type TestEmptyMessage = Message<"protobuf_unittest.TestEmptyMessage"> & {
};

/**
 * Describes the message protobuf_unittest.TestEmptyMessage.
 * Use `create(TestEmptyMessageSchema)` to create a new message.
 */
export declare const TestEmptyMessageSchema: GenMessage<TestEmptyMessage>;

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensions
 */
export declare type TestEmptyMessageWithExtensions = Message<"protobuf_unittest.TestEmptyMessageWithExtensions"> & {
};

/**
 * Describes the message protobuf_unittest.TestEmptyMessageWithExtensions.
 * Use `create(TestEmptyMessageWithExtensionsSchema)` to create a new message.
 */
export declare const TestEmptyMessageWithExtensionsSchema: GenMessage<TestEmptyMessageWithExtensions>;

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestPickleNestedMessage
 */
export declare type TestPickleNestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage"> & {
};

/**
 * Describes the message protobuf_unittest.TestPickleNestedMessage.
 * Use `create(TestPickleNestedMessageSchema)` to create a new message.
 */
export declare const TestPickleNestedMessageSchema: GenMessage<TestPickleNestedMessage>;

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage
 */
export declare type TestPickleNestedMessage_NestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage.NestedMessage"> & {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

/**
 * Describes the message protobuf_unittest.TestPickleNestedMessage.NestedMessage.
 * Use `create(TestPickleNestedMessage_NestedMessageSchema)` to create a new message.
 */
export declare const TestPickleNestedMessage_NestedMessageSchema: GenMessage<TestPickleNestedMessage_NestedMessage>;

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage
 */
export declare type TestPickleNestedMessage_NestedMessage_NestedNestedMessage = Message<"protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage"> & {
  /**
   * @generated from field: optional int32 cc = 1;
   */
  cc: number;
};

/**
 * Describes the message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage.
 * Use `create(TestPickleNestedMessage_NestedMessage_NestedNestedMessageSchema)` to create a new message.
 */
export declare const TestPickleNestedMessage_NestedMessage_NestedNestedMessageSchema: GenMessage<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>;

/**
 * @generated from message protobuf_unittest.TestMultipleExtensionRanges
 */
export declare type TestMultipleExtensionRanges = Message<"protobuf_unittest.TestMultipleExtensionRanges"> & {
};

/**
 * Describes the message protobuf_unittest.TestMultipleExtensionRanges.
 * Use `create(TestMultipleExtensionRangesSchema)` to create a new message.
 */
export declare const TestMultipleExtensionRangesSchema: GenMessage<TestMultipleExtensionRanges>;

/**
 * Test that really large tag numbers don't break anything.
 *
 * @generated from message protobuf_unittest.TestReallyLargeTagNumber
 */
export declare type TestReallyLargeTagNumber = Message<"protobuf_unittest.TestReallyLargeTagNumber"> & {
  /**
   * The largest possible tag number is 2^28 - 1, since the wire format uses
   * three bits to communicate wire type.
   *
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 bb = 268435455;
   */
  bb: number;
};

/**
 * Describes the message protobuf_unittest.TestReallyLargeTagNumber.
 * Use `create(TestReallyLargeTagNumberSchema)` to create a new message.
 */
export declare const TestReallyLargeTagNumberSchema: GenMessage<TestReallyLargeTagNumber>;

/**
 * @generated from message protobuf_unittest.TestRecursiveMessage
 */
export declare type TestRecursiveMessage = Message<"protobuf_unittest.TestRecursiveMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestRecursiveMessage a = 1;
   */
  a?: TestRecursiveMessage;

  /**
   * @generated from field: optional int32 i = 2;
   */
  i: number;
};

/**
 * Describes the message protobuf_unittest.TestRecursiveMessage.
 * Use `create(TestRecursiveMessageSchema)` to create a new message.
 */
export declare const TestRecursiveMessageSchema: GenMessage<TestRecursiveMessage>;

/**
 * Test that mutual recursion works.
 *
 * @generated from message protobuf_unittest.TestMutualRecursionA
 */
export declare type TestMutualRecursionA = Message<"protobuf_unittest.TestMutualRecursionA"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB bb = 1;
   */
  bb?: TestMutualRecursionB;

  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubGroup subgroup = 2;
   */
  subgroup?: TestMutualRecursionA_SubGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestMutualRecursionA.SubGroupR subgroupr = 5;
   */
  subgroupr: TestMutualRecursionA_SubGroupR[];
};

/**
 * Describes the message protobuf_unittest.TestMutualRecursionA.
 * Use `create(TestMutualRecursionASchema)` to create a new message.
 */
export declare const TestMutualRecursionASchema: GenMessage<TestMutualRecursionA>;

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubMessage
 */
export declare type TestMutualRecursionA_SubMessage = Message<"protobuf_unittest.TestMutualRecursionA.SubMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB b = 1;
   */
  b?: TestMutualRecursionB;
};

/**
 * Describes the message protobuf_unittest.TestMutualRecursionA.SubMessage.
 * Use `create(TestMutualRecursionA_SubMessageSchema)` to create a new message.
 */
export declare const TestMutualRecursionA_SubMessageSchema: GenMessage<TestMutualRecursionA_SubMessage>;

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroup
 */
export declare type TestMutualRecursionA_SubGroup = Message<"protobuf_unittest.TestMutualRecursionA.SubGroup"> & {
  /**
   * Needed because of bug in javatest
   *
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
   */
  subMessage?: TestMutualRecursionA_SubMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes not_in_this_scc = 4;
   */
  notInThisScc?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestMutualRecursionA.SubGroup.
 * Use `create(TestMutualRecursionA_SubGroupSchema)` to create a new message.
 */
export declare const TestMutualRecursionA_SubGroupSchema: GenMessage<TestMutualRecursionA_SubGroup>;

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroupR
 */
export declare type TestMutualRecursionA_SubGroupR = Message<"protobuf_unittest.TestMutualRecursionA.SubGroupR"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes payload = 6;
   */
  payload?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestMutualRecursionA.SubGroupR.
 * Use `create(TestMutualRecursionA_SubGroupRSchema)` to create a new message.
 */
export declare const TestMutualRecursionA_SubGroupRSchema: GenMessage<TestMutualRecursionA_SubGroupR>;

/**
 * @generated from message protobuf_unittest.TestMutualRecursionB
 */
export declare type TestMutualRecursionB = Message<"protobuf_unittest.TestMutualRecursionB"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA a = 1;
   */
  a?: TestMutualRecursionA;

  /**
   * @generated from field: optional int32 optional_int32 = 2;
   */
  optionalInt32: number;
};

/**
 * Describes the message protobuf_unittest.TestMutualRecursionB.
 * Use `create(TestMutualRecursionBSchema)` to create a new message.
 */
export declare const TestMutualRecursionBSchema: GenMessage<TestMutualRecursionB>;

/**
 * @generated from message protobuf_unittest.TestIsInitialized
 */
export declare type TestIsInitialized = Message<"protobuf_unittest.TestIsInitialized"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
   */
  subMessage?: TestIsInitialized_SubMessage;
};

/**
 * Describes the message protobuf_unittest.TestIsInitialized.
 * Use `create(TestIsInitializedSchema)` to create a new message.
 */
export declare const TestIsInitializedSchema: GenMessage<TestIsInitialized>;

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage
 */
export declare type TestIsInitialized_SubMessage = Message<"protobuf_unittest.TestIsInitialized.SubMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage.SubGroup subgroup = 1;
   */
  subgroup?: TestIsInitialized_SubMessage_SubGroup;
};

/**
 * Describes the message protobuf_unittest.TestIsInitialized.SubMessage.
 * Use `create(TestIsInitialized_SubMessageSchema)` to create a new message.
 */
export declare const TestIsInitialized_SubMessageSchema: GenMessage<TestIsInitialized_SubMessage>;

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup
 */
export declare type TestIsInitialized_SubMessage_SubGroup = Message<"protobuf_unittest.TestIsInitialized.SubMessage.SubGroup"> & {
  /**
   * @generated from field: required int32 i = 2;
   */
  i: number;
};

/**
 * Describes the message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup.
 * Use `create(TestIsInitialized_SubMessage_SubGroupSchema)` to create a new message.
 */
export declare const TestIsInitialized_SubMessage_SubGroupSchema: GenMessage<TestIsInitialized_SubMessage_SubGroup>;

/**
 * Test that groups have disjoint field numbers from their siblings and
 * parents.  This is NOT possible in proto1; only google.protobuf.  When attempting
 * to compile with proto1, this will emit an error; so we only include it
 * in protobuf_unittest_proto.
 *
 * NO_PROTO1
 *
 * @generated from message protobuf_unittest.TestDupFieldNumber
 */
export declare type TestDupFieldNumber = Message<"protobuf_unittest.TestDupFieldNumber"> & {
  /**
   * NO_PROTO1
   *
   * @generated from field: optional int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Foo foo = 2;
   */
  foo?: TestDupFieldNumber_Foo;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Bar bar = 3;
   */
  bar?: TestDupFieldNumber_Bar;
};

/**
 * Describes the message protobuf_unittest.TestDupFieldNumber.
 * Use `create(TestDupFieldNumberSchema)` to create a new message.
 */
export declare const TestDupFieldNumberSchema: GenMessage<TestDupFieldNumber>;

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Foo
 */
export declare type TestDupFieldNumber_Foo = Message<"protobuf_unittest.TestDupFieldNumber.Foo"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestDupFieldNumber.Foo.
 * Use `create(TestDupFieldNumber_FooSchema)` to create a new message.
 */
export declare const TestDupFieldNumber_FooSchema: GenMessage<TestDupFieldNumber_Foo>;

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Bar
 */
export declare type TestDupFieldNumber_Bar = Message<"protobuf_unittest.TestDupFieldNumber.Bar"> & {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a: number;
};

/**
 * Describes the message protobuf_unittest.TestDupFieldNumber.Bar.
 * Use `create(TestDupFieldNumber_BarSchema)` to create a new message.
 */
export declare const TestDupFieldNumber_BarSchema: GenMessage<TestDupFieldNumber_Bar>;

/**
 * Additional messages for testing lazy fields.
 *
 * @generated from message protobuf_unittest.TestEagerMessage
 */
export declare type TestEagerMessage = Message<"protobuf_unittest.TestEagerMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestEagerMessage.
 * Use `create(TestEagerMessageSchema)` to create a new message.
 */
export declare const TestEagerMessageSchema: GenMessage<TestEagerMessage>;

/**
 * @generated from message protobuf_unittest.TestLazyMessage
 */
export declare type TestLazyMessage = Message<"protobuf_unittest.TestLazyMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestLazyMessage.
 * Use `create(TestLazyMessageSchema)` to create a new message.
 */
export declare const TestLazyMessageSchema: GenMessage<TestLazyMessage>;

/**
 * @generated from message protobuf_unittest.TestLazyMessageRepeated
 */
export declare type TestLazyMessageRepeated = Message<"protobuf_unittest.TestLazyMessageRepeated"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestLazyMessage repeated_message = 1;
   */
  repeatedMessage: TestLazyMessage[];
};

/**
 * Describes the message protobuf_unittest.TestLazyMessageRepeated.
 * Use `create(TestLazyMessageRepeatedSchema)` to create a new message.
 */
export declare const TestLazyMessageRepeatedSchema: GenMessage<TestLazyMessageRepeated>;

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy
 */
export declare type TestEagerMaybeLazy = Message<"protobuf_unittest.TestEagerMaybeLazy"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_foo = 1;
   */
  messageFoo?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_bar = 2;
   */
  messageBar?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
   */
  messageBaz?: TestEagerMaybeLazy_NestedMessage;
};

/**
 * Describes the message protobuf_unittest.TestEagerMaybeLazy.
 * Use `create(TestEagerMaybeLazySchema)` to create a new message.
 */
export declare const TestEagerMaybeLazySchema: GenMessage<TestEagerMaybeLazy>;

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy.NestedMessage
 */
export declare type TestEagerMaybeLazy_NestedMessage = Message<"protobuf_unittest.TestEagerMaybeLazy.NestedMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestPackedTypes packed = 1;
   */
  packed?: TestPackedTypes;
};

/**
 * Describes the message protobuf_unittest.TestEagerMaybeLazy.NestedMessage.
 * Use `create(TestEagerMaybeLazy_NestedMessageSchema)` to create a new message.
 */
export declare const TestEagerMaybeLazy_NestedMessageSchema: GenMessage<TestEagerMaybeLazy_NestedMessage>;

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestNestedMessageHasBits
 */
export declare type TestNestedMessageHasBits = Message<"protobuf_unittest.TestNestedMessageHasBits"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
   */
  optionalNestedMessage?: TestNestedMessageHasBits_NestedMessage;
};

/**
 * Describes the message protobuf_unittest.TestNestedMessageHasBits.
 * Use `create(TestNestedMessageHasBitsSchema)` to create a new message.
 */
export declare const TestNestedMessageHasBitsSchema: GenMessage<TestNestedMessageHasBits>;

/**
 * @generated from message protobuf_unittest.TestNestedMessageHasBits.NestedMessage
 */
export declare type TestNestedMessageHasBits_NestedMessage = Message<"protobuf_unittest.TestNestedMessageHasBits.NestedMessage"> & {
  /**
   * @generated from field: repeated int32 nestedmessage_repeated_int32 = 1;
   */
  nestedmessageRepeatedInt32: number[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
   */
  nestedmessageRepeatedForeignmessage: ForeignMessage[];
};

/**
 * Describes the message protobuf_unittest.TestNestedMessageHasBits.NestedMessage.
 * Use `create(TestNestedMessageHasBits_NestedMessageSchema)` to create a new message.
 */
export declare const TestNestedMessageHasBits_NestedMessageSchema: GenMessage<TestNestedMessageHasBits_NestedMessage>;

/**
 * Test message with CamelCase field names.  This violates Protocol Buffer
 * standard style.
 *
 * @generated from message protobuf_unittest.TestCamelCaseFieldNames
 */
export declare type TestCamelCaseFieldNames = Message<"protobuf_unittest.TestCamelCaseFieldNames"> & {
  /**
   * @generated from field: optional int32 PrimitiveField = 1;
   */
  PrimitiveField: number;

  /**
   * @generated from field: optional string StringField = 2;
   */
  StringField: string;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum EnumField = 3;
   */
  EnumField: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage MessageField = 4;
   */
  MessageField?: ForeignMessage;

  /**
   * @generated from field: optional string StringPieceField = 5;
   */
  StringPieceField: string;

  /**
   * @generated from field: optional string CordField = 6;
   */
  CordField: string;

  /**
   * @generated from field: repeated int32 RepeatedPrimitiveField = 7;
   */
  RepeatedPrimitiveField: number[];

  /**
   * @generated from field: repeated string RepeatedStringField = 8;
   */
  RepeatedStringField: string[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
   */
  RepeatedEnumField: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
   */
  RepeatedMessageField: ForeignMessage[];

  /**
   * @generated from field: repeated string RepeatedStringPieceField = 11;
   */
  RepeatedStringPieceField: string[];

  /**
   * @generated from field: repeated string RepeatedCordField = 12;
   */
  RepeatedCordField: string[];
};

/**
 * Describes the message protobuf_unittest.TestCamelCaseFieldNames.
 * Use `create(TestCamelCaseFieldNamesSchema)` to create a new message.
 */
export declare const TestCamelCaseFieldNamesSchema: GenMessage<TestCamelCaseFieldNames>;

/**
 * We list fields out of order, to ensure that we're using field number and not
 * field index to determine serialization order.
 *
 * @generated from message protobuf_unittest.TestFieldOrderings
 */
export declare type TestFieldOrderings = Message<"protobuf_unittest.TestFieldOrderings"> & {
  /**
   * @generated from field: optional string my_string = 11;
   */
  myString: string;

  /**
   * @generated from field: optional int64 my_int = 1;
   */
  myInt: bigint;

  /**
   * @generated from field: optional float my_float = 101;
   */
  myFloat: number;

  /**
   * @generated from field: optional protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
   */
  optionalNestedMessage?: TestFieldOrderings_NestedMessage;
};

/**
 * Describes the message protobuf_unittest.TestFieldOrderings.
 * Use `create(TestFieldOrderingsSchema)` to create a new message.
 */
export declare const TestFieldOrderingsSchema: GenMessage<TestFieldOrderings>;

/**
 * @generated from message protobuf_unittest.TestFieldOrderings.NestedMessage
 */
export declare type TestFieldOrderings_NestedMessage = Message<"protobuf_unittest.TestFieldOrderings.NestedMessage"> & {
  /**
   * @generated from field: optional int64 oo = 2;
   */
  oo: bigint;

  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;
};

/**
 * Describes the message protobuf_unittest.TestFieldOrderings.NestedMessage.
 * Use `create(TestFieldOrderings_NestedMessageSchema)` to create a new message.
 */
export declare const TestFieldOrderings_NestedMessageSchema: GenMessage<TestFieldOrderings_NestedMessage>;

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings1
 */
export declare type TestExtensionOrderings1 = Message<"protobuf_unittest.TestExtensionOrderings1"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

/**
 * Describes the message protobuf_unittest.TestExtensionOrderings1.
 * Use `create(TestExtensionOrderings1Schema)` to create a new message.
 */
export declare const TestExtensionOrderings1Schema: GenMessage<TestExtensionOrderings1>;

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings1 test_ext_orderings1 = 13;
 */
export declare const TestExtensionOrderings1_test_ext_orderings1: GenExtension<TestFieldOrderings, TestExtensionOrderings1>;

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2
 */
export declare type TestExtensionOrderings2 = Message<"protobuf_unittest.TestExtensionOrderings2"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

/**
 * Describes the message protobuf_unittest.TestExtensionOrderings2.
 * Use `create(TestExtensionOrderings2Schema)` to create a new message.
 */
export declare const TestExtensionOrderings2Schema: GenMessage<TestExtensionOrderings2>;

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3
 */
export declare type TestExtensionOrderings2_TestExtensionOrderings3 = Message<"protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3"> & {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString: string;
};

/**
 * Describes the message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.
 * Use `create(TestExtensionOrderings2_TestExtensionOrderings3Schema)` to create a new message.
 */
export declare const TestExtensionOrderings2_TestExtensionOrderings3Schema: GenMessage<TestExtensionOrderings2_TestExtensionOrderings3>;

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3 test_ext_orderings3 = 14;
 */
export declare const TestExtensionOrderings2_TestExtensionOrderings3_test_ext_orderings3: GenExtension<TestFieldOrderings, TestExtensionOrderings2_TestExtensionOrderings3>;

/**
 * @generated from extension: optional protobuf_unittest.TestExtensionOrderings2 test_ext_orderings2 = 12;
 */
export declare const TestExtensionOrderings2_test_ext_orderings2: GenExtension<TestFieldOrderings, TestExtensionOrderings2>;

/**
 * @generated from message protobuf_unittest.TestExtremeDefaultValues
 */
export declare type TestExtremeDefaultValues = Message<"protobuf_unittest.TestExtremeDefaultValues"> & {
  /**
   * @generated from field: optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\\"\376"];
   */
  escapedBytes: Uint8Array;

  /**
   * @generated from field: optional uint32 large_uint32 = 2 [default = 4294967295];
   */
  largeUint32: number;

  /**
   * @generated from field: optional uint64 large_uint64 = 3 [default = 18446744073709551615];
   */
  largeUint64: bigint;

  /**
   * @generated from field: optional int32 small_int32 = 4 [default = -2147483647];
   */
  smallInt32: number;

  /**
   * @generated from field: optional int64 small_int64 = 5 [default = -9223372036854775807];
   */
  smallInt64: bigint;

  /**
   * @generated from field: optional int32 really_small_int32 = 21 [default = -2147483648];
   */
  reallySmallInt32: number;

  /**
   * @generated from field: optional int64 really_small_int64 = 22 [default = -9223372036854775808];
   */
  reallySmallInt64: bigint;

  /**
   * The default value here is UTF-8 for "\u1234".  (We could also just type
   * the UTF-8 text directly into this text file rather than escape it, but
   * lots of people use editors that would be confused by this.)
   *
   * @generated from field: optional string utf8_string = 6 [default = "ሴ"];
   */
  utf8String: string;

  /**
   * Tests for single-precision floating-point values.
   *
   * @generated from field: optional float zero_float = 7 [default = 0];
   */
  zeroFloat: number;

  /**
   * @generated from field: optional float one_float = 8 [default = 1];
   */
  oneFloat: number;

  /**
   * @generated from field: optional float small_float = 9 [default = 1.5];
   */
  smallFloat: number;

  /**
   * @generated from field: optional float negative_one_float = 10 [default = -1];
   */
  negativeOneFloat: number;

  /**
   * @generated from field: optional float negative_float = 11 [default = -1.5];
   */
  negativeFloat: number;

  /**
   * Using exponents
   *
   * @generated from field: optional float large_float = 12 [default = 2e+08];
   */
  largeFloat: number;

  /**
   * @generated from field: optional float small_negative_float = 13 [default = -8e-28];
   */
  smallNegativeFloat: number;

  /**
   * Text for nonfinite floating-point values.
   *
   * @generated from field: optional double inf_double = 14 [default = inf];
   */
  infDouble: number;

  /**
   * @generated from field: optional double neg_inf_double = 15 [default = -inf];
   */
  negInfDouble: number;

  /**
   * @generated from field: optional double nan_double = 16 [default = nan];
   */
  nanDouble: number;

  /**
   * @generated from field: optional float inf_float = 17 [default = inf];
   */
  infFloat: number;

  /**
   * @generated from field: optional float neg_inf_float = 18 [default = -inf];
   */
  negInfFloat: number;

  /**
   * @generated from field: optional float nan_float = 19 [default = nan];
   */
  nanFloat: number;

  /**
   * Tests for C++ trigraphs.
   * Trigraphs should be escaped in C++ generated files, but they should not be
   * escaped for other languages.
   * Note that in .proto file, "\?" is a valid way to escape ? in string
   * literals.
   *
   * @generated from field: optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
   */
  cppTrigraph: string;

  /**
   * String defaults containing the character '\000'
   *
   * @generated from field: optional string string_with_zero = 23 [default = "hel lo"];
   */
  stringWithZero: string;

  /**
   * @generated from field: optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
   */
  bytesWithZero: Uint8Array;

  /**
   * @generated from field: optional string string_piece_with_zero = 25 [default = "ab c"];
   */
  stringPieceWithZero: string;

  /**
   * @generated from field: optional string cord_with_zero = 26 [default = "12 3"];
   */
  cordWithZero: string;

  /**
   * @generated from field: optional string replacement_string = 27 [default = "${unknown}"];
   */
  replacementString: string;
};

/**
 * Describes the message protobuf_unittest.TestExtremeDefaultValues.
 * Use `create(TestExtremeDefaultValuesSchema)` to create a new message.
 */
export declare const TestExtremeDefaultValuesSchema: GenMessage<TestExtremeDefaultValues>;

/**
 * @generated from message protobuf_unittest.SparseEnumMessage
 */
export declare type SparseEnumMessage = Message<"protobuf_unittest.SparseEnumMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestSparseEnum sparse_enum = 1;
   */
  sparseEnum: TestSparseEnum;
};

/**
 * Describes the message protobuf_unittest.SparseEnumMessage.
 * Use `create(SparseEnumMessageSchema)` to create a new message.
 */
export declare const SparseEnumMessageSchema: GenMessage<SparseEnumMessage>;

/**
 * Test String and Bytes: string is for valid UTF-8 strings
 *
 * @generated from message protobuf_unittest.OneString
 */
export declare type OneString = Message<"protobuf_unittest.OneString"> & {
  /**
   * @generated from field: optional string data = 1;
   */
  data: string;
};

/**
 * Describes the message protobuf_unittest.OneString.
 * Use `create(OneStringSchema)` to create a new message.
 */
export declare const OneStringSchema: GenMessage<OneString>;

/**
 * @generated from message protobuf_unittest.MoreString
 */
export declare type MoreString = Message<"protobuf_unittest.MoreString"> & {
  /**
   * @generated from field: repeated string data = 1;
   */
  data: string[];
};

/**
 * Describes the message protobuf_unittest.MoreString.
 * Use `create(MoreStringSchema)` to create a new message.
 */
export declare const MoreStringSchema: GenMessage<MoreString>;

/**
 * @generated from message protobuf_unittest.OneBytes
 */
export declare type OneBytes = Message<"protobuf_unittest.OneBytes"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message protobuf_unittest.OneBytes.
 * Use `create(OneBytesSchema)` to create a new message.
 */
export declare const OneBytesSchema: GenMessage<OneBytes>;

/**
 * @generated from message protobuf_unittest.MoreBytes
 */
export declare type MoreBytes = Message<"protobuf_unittest.MoreBytes"> & {
  /**
   * @generated from field: repeated bytes data = 1;
   */
  data: Uint8Array[];
};

/**
 * Describes the message protobuf_unittest.MoreBytes.
 * Use `create(MoreBytesSchema)` to create a new message.
 */
export declare const MoreBytesSchema: GenMessage<MoreBytes>;

/**
 * @generated from message protobuf_unittest.ManyOptionalString
 */
export declare type ManyOptionalString = Message<"protobuf_unittest.ManyOptionalString"> & {
  /**
   * @generated from field: optional string str1 = 1;
   */
  str1: string;

  /**
   * @generated from field: optional string str2 = 2;
   */
  str2: string;

  /**
   * @generated from field: optional string str3 = 3;
   */
  str3: string;

  /**
   * @generated from field: optional string str4 = 4;
   */
  str4: string;

  /**
   * @generated from field: optional string str5 = 5;
   */
  str5: string;

  /**
   * @generated from field: optional string str6 = 6;
   */
  str6: string;

  /**
   * @generated from field: optional string str7 = 7;
   */
  str7: string;

  /**
   * @generated from field: optional string str8 = 8;
   */
  str8: string;

  /**
   * @generated from field: optional string str9 = 9;
   */
  str9: string;

  /**
   * @generated from field: optional string str10 = 10;
   */
  str10: string;

  /**
   * @generated from field: optional string str11 = 11;
   */
  str11: string;

  /**
   * @generated from field: optional string str12 = 12;
   */
  str12: string;

  /**
   * @generated from field: optional string str13 = 13;
   */
  str13: string;

  /**
   * @generated from field: optional string str14 = 14;
   */
  str14: string;

  /**
   * @generated from field: optional string str15 = 15;
   */
  str15: string;

  /**
   * @generated from field: optional string str16 = 16;
   */
  str16: string;

  /**
   * @generated from field: optional string str17 = 17;
   */
  str17: string;

  /**
   * @generated from field: optional string str18 = 18;
   */
  str18: string;

  /**
   * @generated from field: optional string str19 = 19;
   */
  str19: string;

  /**
   * @generated from field: optional string str20 = 20;
   */
  str20: string;

  /**
   * @generated from field: optional string str21 = 21;
   */
  str21: string;

  /**
   * @generated from field: optional string str22 = 22;
   */
  str22: string;

  /**
   * @generated from field: optional string str23 = 23;
   */
  str23: string;

  /**
   * @generated from field: optional string str24 = 24;
   */
  str24: string;

  /**
   * @generated from field: optional string str25 = 25;
   */
  str25: string;

  /**
   * @generated from field: optional string str26 = 26;
   */
  str26: string;

  /**
   * @generated from field: optional string str27 = 27;
   */
  str27: string;

  /**
   * @generated from field: optional string str28 = 28;
   */
  str28: string;

  /**
   * @generated from field: optional string str29 = 29;
   */
  str29: string;

  /**
   * @generated from field: optional string str30 = 30;
   */
  str30: string;

  /**
   * @generated from field: optional string str31 = 31;
   */
  str31: string;

  /**
   * @generated from field: optional string str32 = 32;
   */
  str32: string;
};

/**
 * Describes the message protobuf_unittest.ManyOptionalString.
 * Use `create(ManyOptionalStringSchema)` to create a new message.
 */
export declare const ManyOptionalStringSchema: GenMessage<ManyOptionalString>;

/**
 * Test int32, uint32, int64, uint64, and bool are all compatible
 *
 * @generated from message protobuf_unittest.Int32Message
 */
export declare type Int32Message = Message<"protobuf_unittest.Int32Message"> & {
  /**
   * @generated from field: optional int32 data = 1;
   */
  data: number;
};

/**
 * Describes the message protobuf_unittest.Int32Message.
 * Use `create(Int32MessageSchema)` to create a new message.
 */
export declare const Int32MessageSchema: GenMessage<Int32Message>;

/**
 * @generated from message protobuf_unittest.Uint32Message
 */
export declare type Uint32Message = Message<"protobuf_unittest.Uint32Message"> & {
  /**
   * @generated from field: optional uint32 data = 1;
   */
  data: number;
};

/**
 * Describes the message protobuf_unittest.Uint32Message.
 * Use `create(Uint32MessageSchema)` to create a new message.
 */
export declare const Uint32MessageSchema: GenMessage<Uint32Message>;

/**
 * @generated from message protobuf_unittest.Int64Message
 */
export declare type Int64Message = Message<"protobuf_unittest.Int64Message"> & {
  /**
   * @generated from field: optional int64 data = 1;
   */
  data: bigint;
};

/**
 * Describes the message protobuf_unittest.Int64Message.
 * Use `create(Int64MessageSchema)` to create a new message.
 */
export declare const Int64MessageSchema: GenMessage<Int64Message>;

/**
 * @generated from message protobuf_unittest.Uint64Message
 */
export declare type Uint64Message = Message<"protobuf_unittest.Uint64Message"> & {
  /**
   * @generated from field: optional uint64 data = 1;
   */
  data: bigint;
};

/**
 * Describes the message protobuf_unittest.Uint64Message.
 * Use `create(Uint64MessageSchema)` to create a new message.
 */
export declare const Uint64MessageSchema: GenMessage<Uint64Message>;

/**
 * @generated from message protobuf_unittest.BoolMessage
 */
export declare type BoolMessage = Message<"protobuf_unittest.BoolMessage"> & {
  /**
   * @generated from field: optional bool data = 1;
   */
  data: boolean;
};

/**
 * Describes the message protobuf_unittest.BoolMessage.
 * Use `create(BoolMessageSchema)` to create a new message.
 */
export declare const BoolMessageSchema: GenMessage<BoolMessage>;

/**
 * Test oneofs.
 *
 * @generated from message protobuf_unittest.TestOneof
 */
export declare type TestOneof = Message<"protobuf_unittest.TestOneof"> & {
  /**
   * @generated from oneof protobuf_unittest.TestOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes foo_message = 3;
     */
    value: TestAllTypes;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof.FooGroup foogroup = 4;
     */
    value: TestOneof_FooGroup;
    case: "foogroup";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protobuf_unittest.TestOneof.
 * Use `create(TestOneofSchema)` to create a new message.
 */
export declare const TestOneofSchema: GenMessage<TestOneof>;

/**
 * @generated from message protobuf_unittest.TestOneof.FooGroup
 */
export declare type TestOneof_FooGroup = Message<"protobuf_unittest.TestOneof.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b: string;
};

/**
 * Describes the message protobuf_unittest.TestOneof.FooGroup.
 * Use `create(TestOneof_FooGroupSchema)` to create a new message.
 */
export declare const TestOneof_FooGroupSchema: GenMessage<TestOneof_FooGroup>;

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible
 */
export declare type TestOneofBackwardsCompatible = Message<"protobuf_unittest.TestOneofBackwardsCompatible"> & {
  /**
   * @generated from field: optional int32 foo_int = 1;
   */
  fooInt: number;

  /**
   * @generated from field: optional string foo_string = 2;
   */
  fooString: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes foo_message = 3;
   */
  fooMessage?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestOneofBackwardsCompatible.FooGroup foogroup = 4;
   */
  foogroup?: TestOneofBackwardsCompatible_FooGroup;
};

/**
 * Describes the message protobuf_unittest.TestOneofBackwardsCompatible.
 * Use `create(TestOneofBackwardsCompatibleSchema)` to create a new message.
 */
export declare const TestOneofBackwardsCompatibleSchema: GenMessage<TestOneofBackwardsCompatible>;

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup
 */
export declare type TestOneofBackwardsCompatible_FooGroup = Message<"protobuf_unittest.TestOneofBackwardsCompatible.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b: string;
};

/**
 * Describes the message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.
 * Use `create(TestOneofBackwardsCompatible_FooGroupSchema)` to create a new message.
 */
export declare const TestOneofBackwardsCompatible_FooGroupSchema: GenMessage<TestOneofBackwardsCompatible_FooGroup>;

/**
 * @generated from message protobuf_unittest.TestOneof2
 */
export declare type TestOneof2 = Message<"protobuf_unittest.TestOneof2"> & {
  /**
   * @generated from oneof protobuf_unittest.TestOneof2.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: string foo_cord = 3;
     */
    value: string;
    case: "fooCord";
  } | {
    /**
     * @generated from field: string foo_string_piece = 4;
     */
    value: string;
    case: "fooStringPiece";
  } | {
    /**
     * @generated from field: bytes foo_bytes = 5;
     */
    value: Uint8Array;
    case: "fooBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
     */
    value: TestOneof2_NestedEnum;
    case: "fooEnum";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
     */
    value: TestOneof2_NestedMessage;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.FooGroup foogroup = 8;
     */
    value: TestOneof2_FooGroup;
    case: "foogroup";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11;
     */
    value: TestOneof2_NestedMessage;
    case: "fooLazyMessage";
  } | {
    /**
     * @generated from field: bytes foo_bytes_cord = 30;
     */
    value: Uint8Array;
    case: "fooBytesCord";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof protobuf_unittest.TestOneof2.bar
   */
  bar: {
    /**
     * @generated from field: int32 bar_int = 12 [default = 5];
     */
    value: number;
    case: "barInt";
  } | {
    /**
     * @generated from field: string bar_string = 13 [default = "STRING"];
     */
    value: string;
    case: "barString";
  } | {
    /**
     * @generated from field: string bar_cord = 14 [default = "CORD"];
     */
    value: string;
    case: "barCord";
  } | {
    /**
     * @generated from field: string bar_string_piece = 15 [default = "SPIECE"];
     */
    value: string;
    case: "barStringPiece";
  } | {
    /**
     * @generated from field: bytes bar_bytes = 16 [default = "BYTES"];
     */
    value: Uint8Array;
    case: "barBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
     */
    value: TestOneof2_NestedEnum;
    case: "barEnum";
  } | {
    /**
     * @generated from field: string bar_string_with_empty_default = 20 [default = ""];
     */
    value: string;
    case: "barStringWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_cord_with_empty_default = 21 [default = ""];
     */
    value: string;
    case: "barCordWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_string_piece_with_empty_default = 22 [default = ""];
     */
    value: string;
    case: "barStringPieceWithEmptyDefault";
  } | {
    /**
     * @generated from field: bytes bar_bytes_with_empty_default = 23 [default = ""];
     */
    value: Uint8Array;
    case: "barBytesWithEmptyDefault";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional int32 baz_int = 18;
   */
  bazInt: number;

  /**
   * @generated from field: optional string baz_string = 19 [default = "BAZ"];
   */
  bazString: string;
};

/**
 * Describes the message protobuf_unittest.TestOneof2.
 * Use `create(TestOneof2Schema)` to create a new message.
 */
export declare const TestOneof2Schema: GenMessage<TestOneof2>;

/**
 * @generated from message protobuf_unittest.TestOneof2.FooGroup
 */
export declare type TestOneof2_FooGroup = Message<"protobuf_unittest.TestOneof2.FooGroup"> & {
  /**
   * @generated from field: optional int32 a = 9;
   */
  a: number;

  /**
   * @generated from field: optional string b = 10;
   */
  b: string;
};

/**
 * Describes the message protobuf_unittest.TestOneof2.FooGroup.
 * Use `create(TestOneof2_FooGroupSchema)` to create a new message.
 */
export declare const TestOneof2_FooGroupSchema: GenMessage<TestOneof2_FooGroup>;

/**
 * @generated from message protobuf_unittest.TestOneof2.NestedMessage
 */
export declare type TestOneof2_NestedMessage = Message<"protobuf_unittest.TestOneof2.NestedMessage"> & {
  /**
   * @generated from field: optional int64 moo_int = 1;
   */
  mooInt: bigint;

  /**
   * @generated from field: repeated int32 corge_int = 2;
   */
  corgeInt: number[];

  /**
   * @generated from field: optional protobuf_unittest.TestOneof2.NestedMessage child = 3;
   */
  child?: TestOneof2_NestedMessage;
};

/**
 * Describes the message protobuf_unittest.TestOneof2.NestedMessage.
 * Use `create(TestOneof2_NestedMessageSchema)` to create a new message.
 */
export declare const TestOneof2_NestedMessageSchema: GenMessage<TestOneof2_NestedMessage>;

/**
 * @generated from enum protobuf_unittest.TestOneof2.NestedEnum
 */
export enum TestOneof2_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

/**
 * Describes the enum protobuf_unittest.TestOneof2.NestedEnum.
 */
export declare const TestOneof2_NestedEnumSchema: GenEnum<TestOneof2_NestedEnum>;

/**
 * @generated from message protobuf_unittest.TestRequiredOneof
 */
export declare type TestRequiredOneof = Message<"protobuf_unittest.TestRequiredOneof"> & {
  /**
   * @generated from oneof protobuf_unittest.TestRequiredOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
     */
    value: TestRequiredOneof_NestedMessage;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4;
     */
    value: TestRequiredOneof_NestedMessage;
    case: "fooLazyMessage";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protobuf_unittest.TestRequiredOneof.
 * Use `create(TestRequiredOneofSchema)` to create a new message.
 */
export declare const TestRequiredOneofSchema: GenMessage<TestRequiredOneof>;

/**
 * @generated from message protobuf_unittest.TestRequiredOneof.NestedMessage
 */
export declare type TestRequiredOneof_NestedMessage = Message<"protobuf_unittest.TestRequiredOneof.NestedMessage"> & {
  /**
   * @generated from field: required double required_double = 1;
   */
  requiredDouble: number;
};

/**
 * Describes the message protobuf_unittest.TestRequiredOneof.NestedMessage.
 * Use `create(TestRequiredOneof_NestedMessageSchema)` to create a new message.
 */
export declare const TestRequiredOneof_NestedMessageSchema: GenMessage<TestRequiredOneof_NestedMessage>;

/**
 * @generated from message protobuf_unittest.TestPackedTypes
 */
export declare type TestPackedTypes = Message<"protobuf_unittest.TestPackedTypes"> & {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnum[];
};

/**
 * Describes the message protobuf_unittest.TestPackedTypes.
 * Use `create(TestPackedTypesSchema)` to create a new message.
 */
export declare const TestPackedTypesSchema: GenMessage<TestPackedTypes>;

/**
 * A message with the same fields as TestPackedTypes, but without packing. Used
 * to test packed <-> unpacked wire compatibility.
 *
 * @generated from message protobuf_unittest.TestUnpackedTypes
 */
export declare type TestUnpackedTypes = Message<"protobuf_unittest.TestUnpackedTypes"> & {
  /**
   * @generated from field: repeated int32 unpacked_int32 = 90 [packed = false];
   */
  unpackedInt32: number[];

  /**
   * @generated from field: repeated int64 unpacked_int64 = 91 [packed = false];
   */
  unpackedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 unpacked_uint32 = 92 [packed = false];
   */
  unpackedUint32: number[];

  /**
   * @generated from field: repeated uint64 unpacked_uint64 = 93 [packed = false];
   */
  unpackedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 unpacked_sint32 = 94 [packed = false];
   */
  unpackedSint32: number[];

  /**
   * @generated from field: repeated sint64 unpacked_sint64 = 95 [packed = false];
   */
  unpackedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 unpacked_fixed32 = 96 [packed = false];
   */
  unpackedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 unpacked_fixed64 = 97 [packed = false];
   */
  unpackedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
   */
  unpackedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
   */
  unpackedSfixed64: bigint[];

  /**
   * @generated from field: repeated float unpacked_float = 100 [packed = false];
   */
  unpackedFloat: number[];

  /**
   * @generated from field: repeated double unpacked_double = 101 [packed = false];
   */
  unpackedDouble: number[];

  /**
   * @generated from field: repeated bool unpacked_bool = 102 [packed = false];
   */
  unpackedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
   */
  unpackedEnum: ForeignEnum[];
};

/**
 * Describes the message protobuf_unittest.TestUnpackedTypes.
 * Use `create(TestUnpackedTypesSchema)` to create a new message.
 */
export declare const TestUnpackedTypesSchema: GenMessage<TestUnpackedTypes>;

/**
 * @generated from message protobuf_unittest.TestPackedExtensions
 */
export declare type TestPackedExtensions = Message<"protobuf_unittest.TestPackedExtensions"> & {
};

/**
 * Describes the message protobuf_unittest.TestPackedExtensions.
 * Use `create(TestPackedExtensionsSchema)` to create a new message.
 */
export declare const TestPackedExtensionsSchema: GenMessage<TestPackedExtensions>;

/**
 * @generated from message protobuf_unittest.TestUnpackedExtensions
 */
export declare type TestUnpackedExtensions = Message<"protobuf_unittest.TestUnpackedExtensions"> & {
};

/**
 * Describes the message protobuf_unittest.TestUnpackedExtensions.
 * Use `create(TestUnpackedExtensionsSchema)` to create a new message.
 */
export declare const TestUnpackedExtensionsSchema: GenMessage<TestUnpackedExtensions>;

/**
 * Used by ExtensionSetTest/DynamicExtensions.  The test actually builds
 * a set of extensions to TestAllExtensions dynamically, based on the fields
 * of this message type.
 *
 * @generated from message protobuf_unittest.TestDynamicExtensions
 */
export declare type TestDynamicExtensions = Message<"protobuf_unittest.TestDynamicExtensions"> & {
  /**
   * @generated from field: optional fixed32 scalar_extension = 2000;
   */
  scalarExtension: number;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum enum_extension = 2001;
   */
  enumExtension: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
   */
  dynamicEnumExtension: TestDynamicExtensions_DynamicEnumType;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage message_extension = 2003;
   */
  messageExtension?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
   */
  dynamicMessageExtension?: TestDynamicExtensions_DynamicMessageType;

  /**
   * @generated from field: repeated string repeated_extension = 2005;
   */
  repeatedExtension: string[];

  /**
   * @generated from field: repeated sint32 packed_extension = 2006 [packed = true];
   */
  packedExtension: number[];
};

/**
 * Describes the message protobuf_unittest.TestDynamicExtensions.
 * Use `create(TestDynamicExtensionsSchema)` to create a new message.
 */
export declare const TestDynamicExtensionsSchema: GenMessage<TestDynamicExtensions>;

/**
 * @generated from message protobuf_unittest.TestDynamicExtensions.DynamicMessageType
 */
export declare type TestDynamicExtensions_DynamicMessageType = Message<"protobuf_unittest.TestDynamicExtensions.DynamicMessageType"> & {
  /**
   * @generated from field: optional int32 dynamic_field = 2100;
   */
  dynamicField: number;
};

/**
 * Describes the message protobuf_unittest.TestDynamicExtensions.DynamicMessageType.
 * Use `create(TestDynamicExtensions_DynamicMessageTypeSchema)` to create a new message.
 */
export declare const TestDynamicExtensions_DynamicMessageTypeSchema: GenMessage<TestDynamicExtensions_DynamicMessageType>;

/**
 * @generated from enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType
 */
export enum TestDynamicExtensions_DynamicEnumType {
  /**
   * @generated from enum value: DYNAMIC_FOO = 2200;
   */
  DYNAMIC_FOO = 2200,

  /**
   * @generated from enum value: DYNAMIC_BAR = 2201;
   */
  DYNAMIC_BAR = 2201,

  /**
   * @generated from enum value: DYNAMIC_BAZ = 2202;
   */
  DYNAMIC_BAZ = 2202,
}

/**
 * Describes the enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType.
 */
export declare const TestDynamicExtensions_DynamicEnumTypeSchema: GenEnum<TestDynamicExtensions_DynamicEnumType>;

/**
 * @generated from message protobuf_unittest.TestRepeatedString
 */
export declare type TestRepeatedString = Message<"protobuf_unittest.TestRepeatedString"> & {
  /**
   * @generated from field: repeated string repeated_string1 = 1;
   */
  repeatedString1: string[];

  /**
   * @generated from field: repeated string repeated_string2 = 2;
   */
  repeatedString2: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes11 = 11;
   */
  repeatedBytes11: Uint8Array[];

  /**
   * @generated from field: repeated bytes repeated_bytes12 = 12;
   */
  repeatedBytes12: Uint8Array[];
};

/**
 * Describes the message protobuf_unittest.TestRepeatedString.
 * Use `create(TestRepeatedStringSchema)` to create a new message.
 */
export declare const TestRepeatedStringSchema: GenMessage<TestRepeatedString>;

/**
 * @generated from message protobuf_unittest.TestRepeatedScalarDifferentTagSizes
 */
export declare type TestRepeatedScalarDifferentTagSizes = Message<"protobuf_unittest.TestRepeatedScalarDifferentTagSizes"> & {
  /**
   * Parsing repeated fixed size values used to fail. This message needs to be
   * used in order to get a tag of the right size; all of the repeated fields
   * in TestAllTypes didn't trigger the check.
   *
   * @generated from field: repeated fixed32 repeated_fixed32 = 12;
   */
  repeatedFixed32: number[];

  /**
   * Check for a varint type, just for good measure.
   *
   * @generated from field: repeated int32 repeated_int32 = 13;
   */
  repeatedInt32: number[];

  /**
   * These have two-byte tags.
   *
   * @generated from field: repeated fixed64 repeated_fixed64 = 2046;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 2047;
   */
  repeatedInt64: bigint[];

  /**
   * Three byte tags.
   *
   * @generated from field: repeated float repeated_float = 262142;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 262143;
   */
  repeatedUint64: bigint[];
};

/**
 * Describes the message protobuf_unittest.TestRepeatedScalarDifferentTagSizes.
 * Use `create(TestRepeatedScalarDifferentTagSizesSchema)` to create a new message.
 */
export declare const TestRepeatedScalarDifferentTagSizesSchema: GenMessage<TestRepeatedScalarDifferentTagSizes>;

/**
 * Test that if an optional or required message/group field appears multiple
 * times in the input, they need to be merged.
 *
 * @generated from message protobuf_unittest.TestParsingMerge
 */
export declare type TestParsingMerge = Message<"protobuf_unittest.TestParsingMerge"> & {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypes required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMerge.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMerge_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMerge_RepeatedGroup[];
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.
 * Use `create(TestParsingMergeSchema)` to create a new message.
 */
export declare const TestParsingMergeSchema: GenMessage<TestParsingMerge>;

/**
 * RepeatedFieldsGenerator defines matching field types as TestParsingMerge,
 * except that all fields are repeated. In the tests, we will serialize the
 * RepeatedFieldsGenerator to bytes, and parse the bytes to TestParsingMerge.
 * Repeated fields in RepeatedFieldsGenerator are expected to be merged into
 * the corresponding required/optional fields in TestParsingMerge.
 *
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator
 */
export declare type TestParsingMerge_RepeatedFieldsGenerator = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field1 = 1;
   */
  field1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field2 = 2;
   */
  field2: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field3 = 3;
   */
  field3: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMerge_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMerge_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext1 = 1000;
   */
  ext1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext2 = 1001;
   */
  ext2: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.
 * Use `create(TestParsingMerge_RepeatedFieldsGeneratorSchema)` to create a new message.
 */
export declare const TestParsingMerge_RepeatedFieldsGeneratorSchema: GenMessage<TestParsingMerge_RepeatedFieldsGenerator>;

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1
 */
export declare type TestParsingMerge_RepeatedFieldsGenerator_Group1 = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 11;
   */
  field1?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1.
 * Use `create(TestParsingMerge_RepeatedFieldsGenerator_Group1Schema)` to create a new message.
 */
export declare const TestParsingMerge_RepeatedFieldsGenerator_Group1Schema: GenMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1>;

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2
 */
export declare type TestParsingMerge_RepeatedFieldsGenerator_Group2 = Message<"protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 21;
   */
  field1?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2.
 * Use `create(TestParsingMerge_RepeatedFieldsGenerator_Group2Schema)` to create a new message.
 */
export declare const TestParsingMerge_RepeatedFieldsGenerator_Group2Schema: GenMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2>;

/**
 * @generated from message protobuf_unittest.TestParsingMerge.OptionalGroup
 */
export declare type TestParsingMerge_OptionalGroup = Message<"protobuf_unittest.TestParsingMerge.OptionalGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.OptionalGroup.
 * Use `create(TestParsingMerge_OptionalGroupSchema)` to create a new message.
 */
export declare const TestParsingMerge_OptionalGroupSchema: GenMessage<TestParsingMerge_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedGroup
 */
export declare type TestParsingMerge_RepeatedGroup = Message<"protobuf_unittest.TestParsingMerge.RepeatedGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypes;
};

/**
 * Describes the message protobuf_unittest.TestParsingMerge.RepeatedGroup.
 * Use `create(TestParsingMerge_RepeatedGroupSchema)` to create a new message.
 */
export declare const TestParsingMerge_RepeatedGroupSchema: GenMessage<TestParsingMerge_RepeatedGroup>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes optional_ext = 1000;
 */
export declare const TestParsingMerge_optional_ext: GenExtension<TestParsingMerge, TestAllTypes>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes repeated_ext = 1001;
 */
export declare const TestParsingMerge_repeated_ext: GenExtension<TestParsingMerge, TestAllTypes[]>;

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeException
 */
export declare type TestMergeException = Message<"protobuf_unittest.TestMergeException"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions all_extensions = 1;
   */
  allExtensions?: TestAllExtensions;
};

/**
 * Describes the message protobuf_unittest.TestMergeException.
 * Use `create(TestMergeExceptionSchema)` to create a new message.
 */
export declare const TestMergeExceptionSchema: GenMessage<TestMergeException>;

/**
 * @generated from message protobuf_unittest.TestCommentInjectionMessage
 */
export declare type TestCommentInjectionMessage = Message<"protobuf_unittest.TestCommentInjectionMessage"> & {
  /**
   * *\/ <- This should not close the generated doc comment
   *
   * @generated from field: optional string a = 1 [default = "*\/ <- Neither should this."];
   */
  a: string;
};

/**
 * Describes the message protobuf_unittest.TestCommentInjectionMessage.
 * Use `create(TestCommentInjectionMessageSchema)` to create a new message.
 */
export declare const TestCommentInjectionMessageSchema: GenMessage<TestCommentInjectionMessage>;

/**
 * Used to check that the c++ code generator re-orders messages to reduce
 * padding.
 *
 * @generated from message protobuf_unittest.TestMessageSize
 */
export declare type TestMessageSize = Message<"protobuf_unittest.TestMessageSize"> & {
  /**
   * @generated from field: optional bool m1 = 1;
   */
  m1: boolean;

  /**
   * @generated from field: optional int64 m2 = 2;
   */
  m2: bigint;

  /**
   * @generated from field: optional bool m3 = 3;
   */
  m3: boolean;

  /**
   * @generated from field: optional string m4 = 4;
   */
  m4: string;

  /**
   * @generated from field: optional int32 m5 = 5;
   */
  m5: number;

  /**
   * @generated from field: optional int64 m6 = 6;
   */
  m6: bigint;
};

/**
 * Describes the message protobuf_unittest.TestMessageSize.
 * Use `create(TestMessageSizeSchema)` to create a new message.
 */
export declare const TestMessageSizeSchema: GenMessage<TestMessageSize>;

/**
 * Test that RPC services work.
 *
 * @generated from message protobuf_unittest.FooRequest
 */
export declare type FooRequest = Message<"protobuf_unittest.FooRequest"> & {
};

/**
 * Describes the message protobuf_unittest.FooRequest.
 * Use `create(FooRequestSchema)` to create a new message.
 */
export declare const FooRequestSchema: GenMessage<FooRequest>;

/**
 * @generated from message protobuf_unittest.FooResponse
 */
export declare type FooResponse = Message<"protobuf_unittest.FooResponse"> & {
};

/**
 * Describes the message protobuf_unittest.FooResponse.
 * Use `create(FooResponseSchema)` to create a new message.
 */
export declare const FooResponseSchema: GenMessage<FooResponse>;

/**
 * @generated from message protobuf_unittest.FooClientMessage
 */
export declare type FooClientMessage = Message<"protobuf_unittest.FooClientMessage"> & {
};

/**
 * Describes the message protobuf_unittest.FooClientMessage.
 * Use `create(FooClientMessageSchema)` to create a new message.
 */
export declare const FooClientMessageSchema: GenMessage<FooClientMessage>;

/**
 * @generated from message protobuf_unittest.FooServerMessage
 */
export declare type FooServerMessage = Message<"protobuf_unittest.FooServerMessage"> & {
};

/**
 * Describes the message protobuf_unittest.FooServerMessage.
 * Use `create(FooServerMessageSchema)` to create a new message.
 */
export declare const FooServerMessageSchema: GenMessage<FooServerMessage>;

/**
 * @generated from message protobuf_unittest.BarRequest
 */
export declare type BarRequest = Message<"protobuf_unittest.BarRequest"> & {
};

/**
 * Describes the message protobuf_unittest.BarRequest.
 * Use `create(BarRequestSchema)` to create a new message.
 */
export declare const BarRequestSchema: GenMessage<BarRequest>;

/**
 * @generated from message protobuf_unittest.BarResponse
 */
export declare type BarResponse = Message<"protobuf_unittest.BarResponse"> & {
};

/**
 * Describes the message protobuf_unittest.BarResponse.
 * Use `create(BarResponseSchema)` to create a new message.
 */
export declare const BarResponseSchema: GenMessage<BarResponse>;

/**
 * @generated from message protobuf_unittest.TestJsonName
 */
export declare type TestJsonName = Message<"protobuf_unittest.TestJsonName"> & {
  /**
   * @generated from field: optional int32 field_name1 = 1;
   */
  fieldName1: number;

  /**
   * @generated from field: optional int32 fieldName2 = 2;
   */
  fieldName2: number;

  /**
   * @generated from field: optional int32 FieldName3 = 3;
   */
  FieldName3: number;

  /**
   * @generated from field: optional int32 _field_name4 = 4;
   */
  FieldName4: number;

  /**
   * @generated from field: optional int32 FIELD_NAME5 = 5;
   */
  FIELDNAME5: number;

  /**
   * @generated from field: optional int32 field_name6 = 6 [json_name = "@type"];
   */
  fieldName6: number;

  /**
   * @generated from field: optional int32 fieldname7 = 7;
   */
  fieldname7: number;
};

/**
 * Describes the message protobuf_unittest.TestJsonName.
 * Use `create(TestJsonNameSchema)` to create a new message.
 */
export declare const TestJsonNameSchema: GenMessage<TestJsonName>;

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers
 */
export declare type TestHugeFieldNumbers = Message<"protobuf_unittest.TestHugeFieldNumbers"> & {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_enum = 536870004;
   */
  optionalEnum: ForeignEnum;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_message = 536870007;
   */
  optionalMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbers.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbers_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbers.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes oneof_test_all_types = 536870012;
     */
    value: TestAllTypes;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protobuf_unittest.TestHugeFieldNumbers.
 * Use `create(TestHugeFieldNumbersSchema)` to create a new message.
 */
export declare const TestHugeFieldNumbersSchema: GenMessage<TestHugeFieldNumbers>;

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup
 */
export declare type TestHugeFieldNumbers_OptionalGroup = Message<"protobuf_unittest.TestHugeFieldNumbers.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA: number;
};

/**
 * Describes the message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup.
 * Use `create(TestHugeFieldNumbers_OptionalGroupSchema)` to create a new message.
 */
export declare const TestHugeFieldNumbers_OptionalGroupSchema: GenMessage<TestHugeFieldNumbers_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestExtensionInsideTable
 */
export declare type TestExtensionInsideTable = Message<"protobuf_unittest.TestExtensionInsideTable"> & {
  /**
   * @generated from field: optional int32 field1 = 1;
   */
  field1: number;

  /**
   * @generated from field: optional int32 field2 = 2;
   */
  field2: number;

  /**
   * @generated from field: optional int32 field3 = 3;
   */
  field3: number;

  /**
   * @generated from field: optional int32 field4 = 4;
   */
  field4: number;

  /**
   * @generated from field: optional int32 field6 = 6;
   */
  field6: number;

  /**
   * @generated from field: optional int32 field7 = 7;
   */
  field7: number;

  /**
   * @generated from field: optional int32 field8 = 8;
   */
  field8: number;

  /**
   * @generated from field: optional int32 field9 = 9;
   */
  field9: number;

  /**
   * @generated from field: optional int32 field10 = 10;
   */
  field10: number;
};

/**
 * Describes the message protobuf_unittest.TestExtensionInsideTable.
 * Use `create(TestExtensionInsideTableSchema)` to create a new message.
 */
export declare const TestExtensionInsideTableSchema: GenMessage<TestExtensionInsideTable>;

/**
 * NOTE: Intentionally nested to mirror go/glep.
 *
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter
 */
export declare type TestNestedGroupExtensionOuter = Message<"protobuf_unittest.TestNestedGroupExtensionOuter"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup layer1optionalgroup = 1;
   */
  layer1optionalgroup?: TestNestedGroupExtensionOuter_Layer1OptionalGroup;
};

/**
 * Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.
 * Use `create(TestNestedGroupExtensionOuterSchema)` to create a new message.
 */
export declare const TestNestedGroupExtensionOuterSchema: GenMessage<TestNestedGroupExtensionOuter>;

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup
 */
export declare type TestNestedGroupExtensionOuter_Layer1OptionalGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup layer2repeatedgroup = 2;
   */
  layer2repeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup layer2anotheroptionalrepeatedgroup = 4;
   */
  layer2anotheroptionalrepeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup[];
};

/**
 * Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.
 * Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroupSchema)` to create a new message.
 */
export declare const TestNestedGroupExtensionOuter_Layer1OptionalGroupSchema: GenMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup
 */
export declare type TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup"> & {
  /**
   * @generated from field: optional string another_field = 6;
   */
  anotherField: string;
};

/**
 * Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.
 * Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupSchema)` to create a new message.
 */
export declare const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupSchema: GenMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>;

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup
 */
export declare type TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup = Message<"protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup"> & {
  /**
   * @generated from field: optional string but_why_tho = 5;
   */
  butWhyTho: string;
};

/**
 * Describes the message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.
 * Use `create(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupSchema)` to create a new message.
 */
export declare const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupSchema: GenMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>;

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionInnerExtension
 */
export declare type TestNestedGroupExtensionInnerExtension = Message<"protobuf_unittest.TestNestedGroupExtensionInnerExtension"> & {
  /**
   * @generated from field: optional string inner_name = 1;
   */
  innerName: string;
};

/**
 * Describes the message protobuf_unittest.TestNestedGroupExtensionInnerExtension.
 * Use `create(TestNestedGroupExtensionInnerExtensionSchema)` to create a new message.
 */
export declare const TestNestedGroupExtensionInnerExtensionSchema: GenMessage<TestNestedGroupExtensionInnerExtension>;

/**
 * @generated from message protobuf_unittest.TestExtensionRangeSerialize
 */
export declare type TestExtensionRangeSerialize = Message<"protobuf_unittest.TestExtensionRangeSerialize"> & {
  /**
   * @generated from field: optional int32 foo_one = 1;
   */
  fooOne: number;

  /**
   * @generated from field: optional int32 foo_two = 6;
   */
  fooTwo: number;

  /**
   * @generated from field: optional int32 foo_three = 7;
   */
  fooThree: number;

  /**
   * @generated from field: optional int32 foo_four = 13;
   */
  fooFour: number;
};

/**
 * Describes the message protobuf_unittest.TestExtensionRangeSerialize.
 * Use `create(TestExtensionRangeSerializeSchema)` to create a new message.
 */
export declare const TestExtensionRangeSerializeSchema: GenMessage<TestExtensionRangeSerialize>;

/**
 * @generated from extension: optional int32 bar_one = 2;
 */
export declare const TestExtensionRangeSerialize_bar_one: GenExtension<TestExtensionRangeSerialize, number>;

/**
 * @generated from extension: optional int32 bar_two = 4;
 */
export declare const TestExtensionRangeSerialize_bar_two: GenExtension<TestExtensionRangeSerialize, number>;

/**
 * @generated from extension: optional int32 bar_three = 10;
 */
export declare const TestExtensionRangeSerialize_bar_three: GenExtension<TestExtensionRangeSerialize, number>;

/**
 * @generated from extension: optional int32 bar_four = 15;
 */
export declare const TestExtensionRangeSerialize_bar_four: GenExtension<TestExtensionRangeSerialize, number>;

/**
 * @generated from extension: optional int32 bar_five = 19;
 */
export declare const TestExtensionRangeSerialize_bar_five: GenExtension<TestExtensionRangeSerialize, number>;

/**
 * @generated from message protobuf_unittest.TestVerifyInt32Simple
 */
export declare type TestVerifyInt32Simple = Message<"protobuf_unittest.TestVerifyInt32Simple"> & {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;
};

/**
 * Describes the message protobuf_unittest.TestVerifyInt32Simple.
 * Use `create(TestVerifyInt32SimpleSchema)` to create a new message.
 */
export declare const TestVerifyInt32SimpleSchema: GenMessage<TestVerifyInt32Simple>;

/**
 * @generated from message protobuf_unittest.TestVerifyInt32
 */
export declare type TestVerifyInt32 = Message<"protobuf_unittest.TestVerifyInt32"> & {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyInt32.
 * Use `create(TestVerifyInt32Schema)` to create a new message.
 */
export declare const TestVerifyInt32Schema: GenMessage<TestVerifyInt32>;

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32
 */
export declare type TestVerifyMostlyInt32 = Message<"protobuf_unittest.TestVerifyMostlyInt32"> & {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430: bigint;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyMostlyInt32.
 * Use `create(TestVerifyMostlyInt32Schema)` to create a new message.
 */
export declare const TestVerifyMostlyInt32Schema: GenMessage<TestVerifyMostlyInt32>;

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber
 */
export declare type TestVerifyMostlyInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430: bigint;

  /**
   * @generated from field: optional int32 optional_int32_300 = 300;
   */
  optionalInt32300: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber.
 * Use `create(TestVerifyMostlyInt32BigFieldNumberSchema)` to create a new message.
 */
export declare const TestVerifyMostlyInt32BigFieldNumberSchema: GenMessage<TestVerifyMostlyInt32BigFieldNumber>;

/**
 * @generated from message protobuf_unittest.TestVerifyUint32Simple
 */
export declare type TestVerifyUint32Simple = Message<"protobuf_unittest.TestVerifyUint32Simple"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;
};

/**
 * Describes the message protobuf_unittest.TestVerifyUint32Simple.
 * Use `create(TestVerifyUint32SimpleSchema)` to create a new message.
 */
export declare const TestVerifyUint32SimpleSchema: GenMessage<TestVerifyUint32Simple>;

/**
 * @generated from message protobuf_unittest.TestVerifyUint32
 */
export declare type TestVerifyUint32 = Message<"protobuf_unittest.TestVerifyUint32"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyUint32.
 * Use `create(TestVerifyUint32Schema)` to create a new message.
 */
export declare const TestVerifyUint32Schema: GenMessage<TestVerifyUint32>;

/**
 * @generated from message protobuf_unittest.TestVerifyOneUint32
 */
export declare type TestVerifyOneUint32 = Message<"protobuf_unittest.TestVerifyOneUint32"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyOneUint32.
 * Use `create(TestVerifyOneUint32Schema)` to create a new message.
 */
export declare const TestVerifyOneUint32Schema: GenMessage<TestVerifyOneUint32>;

/**
 * @generated from message protobuf_unittest.TestVerifyOneInt32BigFieldNumber
 */
export declare type TestVerifyOneInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyOneInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265: number;

  /**
   * @generated from field: optional int64 optional_int64_1 = 1;
   */
  optionalInt641: bigint;

  /**
   * @generated from field: optional int64 optional_int64_2 = 2;
   */
  optionalInt642: bigint;

  /**
   * @generated from field: optional int64 optional_int64_63 = 63;
   */
  optionalInt6463: bigint;

  /**
   * @generated from field: optional int64 optional_int64_64 = 64;
   */
  optionalInt6464: bigint;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyOneInt32BigFieldNumber.
 * Use `create(TestVerifyOneInt32BigFieldNumberSchema)` to create a new message.
 */
export declare const TestVerifyOneInt32BigFieldNumberSchema: GenMessage<TestVerifyOneInt32BigFieldNumber>;

/**
 * @generated from message protobuf_unittest.TestVerifyInt32BigFieldNumber
 */
export declare type TestVerifyInt32BigFieldNumber = Message<"protobuf_unittest.TestVerifyInt32BigFieldNumber"> & {
  /**
   * @generated from field: optional int32 optional_int32_1000 = 1000;
   */
  optionalInt321000: number;

  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyInt32BigFieldNumber.
 * Use `create(TestVerifyInt32BigFieldNumberSchema)` to create a new message.
 */
export declare const TestVerifyInt32BigFieldNumberSchema: GenMessage<TestVerifyInt32BigFieldNumber>;

/**
 * @generated from message protobuf_unittest.TestVerifyUint32BigFieldNumber
 */
export declare type TestVerifyUint32BigFieldNumber = Message<"protobuf_unittest.TestVerifyUint32BigFieldNumber"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyUint32BigFieldNumber.
 * Use `create(TestVerifyUint32BigFieldNumberSchema)` to create a new message.
 */
export declare const TestVerifyUint32BigFieldNumberSchema: GenMessage<TestVerifyUint32BigFieldNumber>;

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32
 */
export declare type TestVerifyBigFieldNumberUint32 = Message<"protobuf_unittest.TestVerifyBigFieldNumberUint32"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;
};

/**
 * Describes the message protobuf_unittest.TestVerifyBigFieldNumberUint32.
 * Use `create(TestVerifyBigFieldNumberUint32Schema)` to create a new message.
 */
export declare const TestVerifyBigFieldNumberUint32Schema: GenMessage<TestVerifyBigFieldNumberUint32>;

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested
 */
export declare type TestVerifyBigFieldNumberUint32_Nested = Message<"protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested"> & {
  /**
   * @generated from field: optional uint32 optional_uint32_5000 = 5000;
   */
  optionalUint325000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000: number;

  /**
   * @generated from field: optional uint32 optional_uint32_66 = 66;
   */
  optionalUint3266: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264: number;

  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;

  /**
   * @generated from field: repeated protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
   */
  repeatedNested: TestVerifyBigFieldNumberUint32_Nested[];
};

/**
 * Describes the message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested.
 * Use `create(TestVerifyBigFieldNumberUint32_NestedSchema)` to create a new message.
 */
export declare const TestVerifyBigFieldNumberUint32_NestedSchema: GenMessage<TestVerifyBigFieldNumberUint32_Nested>;

/**
 * This message contains different kind of enums to exercise the different
 * parsers in table-driven.
 *
 * @generated from message protobuf_unittest.EnumParseTester
 */
export declare type EnumParseTester = Message<"protobuf_unittest.EnumParseTester"> & {
  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
   */
  optionalSeqSmall0Lowfield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
   */
  optionalSeqSmall0Midfield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
   */
  optionalSeqSmall0Hifield: EnumParseTester_SeqSmall0;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
   */
  repeatedSeqSmall0Lowfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
   */
  repeatedSeqSmall0Midfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
   */
  repeatedSeqSmall0Hifield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
   */
  packedSeqSmall0Lowfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
   */
  packedSeqSmall0Midfield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [packed = true];
   */
  packedSeqSmall0Hifield: EnumParseTester_SeqSmall0[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
   */
  optionalSeqSmall1Lowfield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
   */
  optionalSeqSmall1Midfield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
   */
  optionalSeqSmall1Hifield: EnumParseTester_SeqSmall1;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
   */
  repeatedSeqSmall1Lowfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
   */
  repeatedSeqSmall1Midfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
   */
  repeatedSeqSmall1Hifield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
   */
  packedSeqSmall1Lowfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
   */
  packedSeqSmall1Midfield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [packed = true];
   */
  packedSeqSmall1Hifield: EnumParseTester_SeqSmall1[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
   */
  optionalSeqLargeLowfield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
   */
  optionalSeqLargeMidfield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
   */
  optionalSeqLargeHifield: EnumParseTester_SeqLarge;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
   */
  repeatedSeqLargeLowfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
   */
  repeatedSeqLargeMidfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
   */
  repeatedSeqLargeHifield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
   */
  packedSeqLargeLowfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
   */
  packedSeqLargeMidfield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [packed = true];
   */
  packedSeqLargeHifield: EnumParseTester_SeqLarge[];

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
   */
  optionalArbitraryLowfield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
   */
  optionalArbitraryMidfield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
   */
  optionalArbitraryHifield: EnumParseTester_Arbitrary;

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
   */
  repeatedArbitraryLowfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
   */
  repeatedArbitraryMidfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
   */
  repeatedArbitraryHifield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
   */
  packedArbitraryLowfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
   */
  packedArbitraryMidfield: EnumParseTester_Arbitrary[];

  /**
   * @generated from field: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [packed = true];
   */
  packedArbitraryHifield: EnumParseTester_Arbitrary[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

/**
 * Describes the message protobuf_unittest.EnumParseTester.
 * Use `create(EnumParseTesterSchema)` to create a new message.
 */
export declare const EnumParseTesterSchema: GenMessage<EnumParseTester>;

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqSmall0
 */
export enum EnumParseTester_SeqSmall0 {
  /**
   * @generated from enum value: SEQ_SMALL_0_DEFAULT = 0;
   */
  SEQ_SMALL_0_DEFAULT = 0,

  /**
   * @generated from enum value: SEQ_SMALL_0_1 = 1;
   */
  SEQ_SMALL_0_1 = 1,

  /**
   * @generated from enum value: SEQ_SMALL_0_2 = 2;
   */
  SEQ_SMALL_0_2 = 2,
}

/**
 * Describes the enum protobuf_unittest.EnumParseTester.SeqSmall0.
 */
export declare const EnumParseTester_SeqSmall0Schema: GenEnum<EnumParseTester_SeqSmall0>;

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqSmall1
 */
export enum EnumParseTester_SeqSmall1 {
  /**
   * @generated from enum value: SEQ_SMALL_1_DEFAULT = 1;
   */
  SEQ_SMALL_1_DEFAULT = 1,

  /**
   * @generated from enum value: SEQ_SMALL_1_2 = 2;
   */
  SEQ_SMALL_1_2 = 2,

  /**
   * @generated from enum value: SEQ_SMALL_1_3 = 3;
   */
  SEQ_SMALL_1_3 = 3,
}

/**
 * Describes the enum protobuf_unittest.EnumParseTester.SeqSmall1.
 */
export declare const EnumParseTester_SeqSmall1Schema: GenEnum<EnumParseTester_SeqSmall1>;

/**
 * @generated from enum protobuf_unittest.EnumParseTester.SeqLarge
 */
export enum EnumParseTester_SeqLarge {
  /**
   * @generated from enum value: SEQ_LARGE_DEFAULT = -1;
   */
  SEQ_LARGE_DEFAULT = -1,

  /**
   * @generated from enum value: SEQ_LARGE_0 = 0;
   */
  SEQ_LARGE_0 = 0,

  /**
   * @generated from enum value: SEQ_LARGE_1 = 1;
   */
  SEQ_LARGE_1 = 1,

  /**
   * @generated from enum value: SEQ_LARGE_2 = 2;
   */
  SEQ_LARGE_2 = 2,

  /**
   * @generated from enum value: SEQ_LARGE_3 = 3;
   */
  SEQ_LARGE_3 = 3,

  /**
   * @generated from enum value: SEQ_LARGE_4 = 4;
   */
  SEQ_LARGE_4 = 4,

  /**
   * @generated from enum value: SEQ_LARGE_5 = 5;
   */
  SEQ_LARGE_5 = 5,

  /**
   * @generated from enum value: SEQ_LARGE_6 = 6;
   */
  SEQ_LARGE_6 = 6,

  /**
   * @generated from enum value: SEQ_LARGE_7 = 7;
   */
  SEQ_LARGE_7 = 7,

  /**
   * @generated from enum value: SEQ_LARGE_8 = 8;
   */
  SEQ_LARGE_8 = 8,

  /**
   * @generated from enum value: SEQ_LARGE_9 = 9;
   */
  SEQ_LARGE_9 = 9,

  /**
   * @generated from enum value: SEQ_LARGE_10 = 10;
   */
  SEQ_LARGE_10 = 10,

  /**
   * @generated from enum value: SEQ_LARGE_11 = 11;
   */
  SEQ_LARGE_11 = 11,

  /**
   * @generated from enum value: SEQ_LARGE_12 = 12;
   */
  SEQ_LARGE_12 = 12,

  /**
   * @generated from enum value: SEQ_LARGE_13 = 13;
   */
  SEQ_LARGE_13 = 13,

  /**
   * @generated from enum value: SEQ_LARGE_14 = 14;
   */
  SEQ_LARGE_14 = 14,

  /**
   * @generated from enum value: SEQ_LARGE_15 = 15;
   */
  SEQ_LARGE_15 = 15,

  /**
   * @generated from enum value: SEQ_LARGE_16 = 16;
   */
  SEQ_LARGE_16 = 16,

  /**
   * @generated from enum value: SEQ_LARGE_17 = 17;
   */
  SEQ_LARGE_17 = 17,

  /**
   * @generated from enum value: SEQ_LARGE_18 = 18;
   */
  SEQ_LARGE_18 = 18,

  /**
   * @generated from enum value: SEQ_LARGE_19 = 19;
   */
  SEQ_LARGE_19 = 19,

  /**
   * @generated from enum value: SEQ_LARGE_20 = 20;
   */
  SEQ_LARGE_20 = 20,

  /**
   * @generated from enum value: SEQ_LARGE_21 = 21;
   */
  SEQ_LARGE_21 = 21,

  /**
   * @generated from enum value: SEQ_LARGE_22 = 22;
   */
  SEQ_LARGE_22 = 22,

  /**
   * @generated from enum value: SEQ_LARGE_23 = 23;
   */
  SEQ_LARGE_23 = 23,

  /**
   * @generated from enum value: SEQ_LARGE_24 = 24;
   */
  SEQ_LARGE_24 = 24,

  /**
   * @generated from enum value: SEQ_LARGE_25 = 25;
   */
  SEQ_LARGE_25 = 25,

  /**
   * @generated from enum value: SEQ_LARGE_26 = 26;
   */
  SEQ_LARGE_26 = 26,

  /**
   * @generated from enum value: SEQ_LARGE_27 = 27;
   */
  SEQ_LARGE_27 = 27,

  /**
   * @generated from enum value: SEQ_LARGE_28 = 28;
   */
  SEQ_LARGE_28 = 28,

  /**
   * @generated from enum value: SEQ_LARGE_29 = 29;
   */
  SEQ_LARGE_29 = 29,

  /**
   * @generated from enum value: SEQ_LARGE_30 = 30;
   */
  SEQ_LARGE_30 = 30,

  /**
   * @generated from enum value: SEQ_LARGE_31 = 31;
   */
  SEQ_LARGE_31 = 31,

  /**
   * @generated from enum value: SEQ_LARGE_32 = 32;
   */
  SEQ_LARGE_32 = 32,

  /**
   * @generated from enum value: SEQ_LARGE_33 = 33;
   */
  SEQ_LARGE_33 = 33,
}

/**
 * Describes the enum protobuf_unittest.EnumParseTester.SeqLarge.
 */
export declare const EnumParseTester_SeqLargeSchema: GenEnum<EnumParseTester_SeqLarge>;

/**
 * @generated from enum protobuf_unittest.EnumParseTester.Arbitrary
 */
export enum EnumParseTester_Arbitrary {
  /**
   * @generated from enum value: ARBITRARY_DEFAULT = -123123;
   */
  ARBITRARY_DEFAULT = -123123,

  /**
   * @generated from enum value: ARBITRARY_1 = -123;
   */
  ARBITRARY_1 = -123,

  /**
   * @generated from enum value: ARBITRARY_2 = 213;
   */
  ARBITRARY_2 = 213,

  /**
   * @generated from enum value: ARBITRARY_3 = 213213;
   */
  ARBITRARY_3 = 213213,

  /**
   * @generated from enum value: ARBITRARY_MIN = -2147483648;
   */
  ARBITRARY_MIN = -2147483648,

  /**
   * @generated from enum value: ARBITRARY_MAX = 2147483647;
   */
  ARBITRARY_MAX = 2147483647,
}

/**
 * Describes the enum protobuf_unittest.EnumParseTester.Arbitrary.
 */
export declare const EnumParseTester_ArbitrarySchema: GenEnum<EnumParseTester_Arbitrary>;

/**
 * @generated from extension: optional protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_ext = 2000000;
 */
export declare const EnumParseTester_optional_arbitrary_ext: GenExtension<EnumParseTester, EnumParseTester_Arbitrary>;

/**
 * @generated from extension: repeated protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_ext = 2000001;
 */
export declare const EnumParseTester_repeated_arbitrary_ext: GenExtension<EnumParseTester, EnumParseTester_Arbitrary[]>;

/**
 * @generated from extension: repeated protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_ext = 2000002 [packed = true];
 */
export declare const EnumParseTester_packed_arbitrary_ext: GenExtension<EnumParseTester, EnumParseTester_Arbitrary[]>;

/**
 * This message contains different kind of bool fields to exercise the different
 * parsers in table-drived.
 *
 * @generated from message protobuf_unittest.BoolParseTester
 */
export declare type BoolParseTester = Message<"protobuf_unittest.BoolParseTester"> & {
  /**
   * @generated from field: optional bool optional_bool_lowfield = 1;
   */
  optionalBoolLowfield: boolean;

  /**
   * @generated from field: optional bool optional_bool_midfield = 1001;
   */
  optionalBoolMidfield: boolean;

  /**
   * @generated from field: optional bool optional_bool_hifield = 1000001;
   */
  optionalBoolHifield: boolean;

  /**
   * @generated from field: repeated bool repeated_bool_lowfield = 2;
   */
  repeatedBoolLowfield: boolean[];

  /**
   * @generated from field: repeated bool repeated_bool_midfield = 1002;
   */
  repeatedBoolMidfield: boolean[];

  /**
   * @generated from field: repeated bool repeated_bool_hifield = 1000002;
   */
  repeatedBoolHifield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_lowfield = 3 [packed = true];
   */
  packedBoolLowfield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_midfield = 1003 [packed = true];
   */
  packedBoolMidfield: boolean[];

  /**
   * @generated from field: repeated bool packed_bool_hifield = 1000003 [packed = true];
   */
  packedBoolHifield: boolean[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

/**
 * Describes the message protobuf_unittest.BoolParseTester.
 * Use `create(BoolParseTesterSchema)` to create a new message.
 */
export declare const BoolParseTesterSchema: GenMessage<BoolParseTester>;

/**
 * @generated from extension: optional bool optional_bool_ext = 2000000;
 */
export declare const BoolParseTester_optional_bool_ext: GenExtension<BoolParseTester, boolean>;

/**
 * @generated from extension: repeated bool repeated_bool_ext = 2000001;
 */
export declare const BoolParseTester_repeated_bool_ext: GenExtension<BoolParseTester, boolean[]>;

/**
 * @generated from extension: repeated bool packed_bool_ext = 2000002 [packed = true];
 */
export declare const BoolParseTester_packed_bool_ext: GenExtension<BoolParseTester, boolean[]>;

/**
 * @generated from message protobuf_unittest.Int32ParseTester
 */
export declare type Int32ParseTester = Message<"protobuf_unittest.Int32ParseTester"> & {
  /**
   * @generated from field: optional int32 optional_int32_lowfield = 1;
   */
  optionalInt32Lowfield: number;

  /**
   * @generated from field: optional int32 optional_int32_midfield = 1001;
   */
  optionalInt32Midfield: number;

  /**
   * @generated from field: optional int32 optional_int32_hifield = 1000001;
   */
  optionalInt32Hifield: number;

  /**
   * @generated from field: repeated int32 repeated_int32_lowfield = 2;
   */
  repeatedInt32Lowfield: number[];

  /**
   * @generated from field: repeated int32 repeated_int32_midfield = 1002;
   */
  repeatedInt32Midfield: number[];

  /**
   * @generated from field: repeated int32 repeated_int32_hifield = 1000002;
   */
  repeatedInt32Hifield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_lowfield = 3 [packed = true];
   */
  packedInt32Lowfield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_midfield = 1003 [packed = true];
   */
  packedInt32Midfield: number[];

  /**
   * @generated from field: repeated int32 packed_int32_hifield = 1000003 [packed = true];
   */
  packedInt32Hifield: number[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

/**
 * Describes the message protobuf_unittest.Int32ParseTester.
 * Use `create(Int32ParseTesterSchema)` to create a new message.
 */
export declare const Int32ParseTesterSchema: GenMessage<Int32ParseTester>;

/**
 * @generated from extension: optional int32 optional_int32_ext = 2000000;
 */
export declare const Int32ParseTester_optional_int32_ext: GenExtension<Int32ParseTester, number>;

/**
 * @generated from extension: repeated int32 repeated_int32_ext = 2000001;
 */
export declare const Int32ParseTester_repeated_int32_ext: GenExtension<Int32ParseTester, number[]>;

/**
 * @generated from extension: repeated int32 packed_int32_ext = 2000002 [packed = true];
 */
export declare const Int32ParseTester_packed_int32_ext: GenExtension<Int32ParseTester, number[]>;

/**
 * @generated from message protobuf_unittest.Int64ParseTester
 */
export declare type Int64ParseTester = Message<"protobuf_unittest.Int64ParseTester"> & {
  /**
   * @generated from field: optional int64 optional_int64_lowfield = 1;
   */
  optionalInt64Lowfield: bigint;

  /**
   * @generated from field: optional int64 optional_int64_midfield = 1001;
   */
  optionalInt64Midfield: bigint;

  /**
   * @generated from field: optional int64 optional_int64_hifield = 1000001;
   */
  optionalInt64Hifield: bigint;

  /**
   * @generated from field: repeated int64 repeated_int64_lowfield = 2;
   */
  repeatedInt64Lowfield: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64_midfield = 1002;
   */
  repeatedInt64Midfield: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64_hifield = 1000002;
   */
  repeatedInt64Hifield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_lowfield = 3 [packed = true];
   */
  packedInt64Lowfield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_midfield = 1003 [packed = true];
   */
  packedInt64Midfield: bigint[];

  /**
   * @generated from field: repeated int64 packed_int64_hifield = 1000003 [packed = true];
   */
  packedInt64Hifield: bigint[];

  /**
   * An arbitrary field we can append to to break the runs of repeated fields.
   *
   * @generated from field: optional int32 other_field = 99;
   */
  otherField: number;
};

/**
 * Describes the message protobuf_unittest.Int64ParseTester.
 * Use `create(Int64ParseTesterSchema)` to create a new message.
 */
export declare const Int64ParseTesterSchema: GenMessage<Int64ParseTester>;

/**
 * @generated from extension: optional int64 optional_int64_ext = 2000000;
 */
export declare const Int64ParseTester_optional_int64_ext: GenExtension<Int64ParseTester, bigint>;

/**
 * @generated from extension: repeated int64 repeated_int64_ext = 2000001;
 */
export declare const Int64ParseTester_repeated_int64_ext: GenExtension<Int64ParseTester, bigint[]>;

/**
 * @generated from extension: repeated int64 packed_int64_ext = 2000002 [packed = true];
 */
export declare const Int64ParseTester_packed_int64_ext: GenExtension<Int64ParseTester, bigint[]>;

/**
 * @generated from message protobuf_unittest.InlinedStringIdxRegressionProto
 */
export declare type InlinedStringIdxRegressionProto = Message<"protobuf_unittest.InlinedStringIdxRegressionProto"> & {
  /**
   * We mix data to make sure aux ids and inlined string idx do not match.
   * aux_idx == inlined_string_idx == 1
   *
   * @generated from field: optional string str1 = 1;
   */
  str1: string;

  /**
   * aux_idx == 2
   *
   * @generated from field: optional protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
   */
  sub?: InlinedStringIdxRegressionProto;

  /**
   * aux_idx == 3, inlined_string_idx == 2
   *
   * @generated from field: optional string str2 = 3;
   */
  str2: string;

  /**
   * aux_idx == 4, inlined_string_idx == 3
   *
   * @generated from field: optional bytes str3 = 4;
   */
  str3: Uint8Array;
};

/**
 * Describes the message protobuf_unittest.InlinedStringIdxRegressionProto.
 * Use `create(InlinedStringIdxRegressionProtoSchema)` to create a new message.
 */
export declare const InlinedStringIdxRegressionProtoSchema: GenMessage<InlinedStringIdxRegressionProto>;

/**
 * @generated from message protobuf_unittest.StringParseTester
 */
export declare type StringParseTester = Message<"protobuf_unittest.StringParseTester"> & {
  /**
   * @generated from field: optional string optional_string_lowfield = 1;
   */
  optionalStringLowfield: string;

  /**
   * @generated from field: optional string optional_string_midfield = 1001;
   */
  optionalStringMidfield: string;

  /**
   * @generated from field: optional string optional_string_hifield = 1000001;
   */
  optionalStringHifield: string;

  /**
   * @generated from field: repeated string repeated_string_lowfield = 2;
   */
  repeatedStringLowfield: string[];

  /**
   * @generated from field: repeated string repeated_string_midfield = 1002;
   */
  repeatedStringMidfield: string[];

  /**
   * @generated from field: repeated string repeated_string_hifield = 1000002;
   */
  repeatedStringHifield: string[];
};

/**
 * Describes the message protobuf_unittest.StringParseTester.
 * Use `create(StringParseTesterSchema)` to create a new message.
 */
export declare const StringParseTesterSchema: GenMessage<StringParseTester>;

/**
 * @generated from extension: optional string optional_string_ext = 2000000;
 */
export declare const StringParseTester_optional_string_ext: GenExtension<StringParseTester, string>;

/**
 * @generated from extension: repeated string repeated_string_ext = 2000001;
 */
export declare const StringParseTester_repeated_string_ext: GenExtension<StringParseTester, string[]>;

/**
 * @generated from message protobuf_unittest.BadFieldNames
 */
export declare type BadFieldNames = Message<"protobuf_unittest.BadFieldNames"> & {
  /**
   * @generated from field: optional int32 OptionalInt32 = 1;
   */
  OptionalInt32: number;

  /**
   * @generated from field: optional int32 for = 2;
   */
  for: number;
};

/**
 * Describes the message protobuf_unittest.BadFieldNames.
 * Use `create(BadFieldNamesSchema)` to create a new message.
 */
export declare const BadFieldNamesSchema: GenMessage<BadFieldNames>;

/**
 * @generated from message protobuf_unittest.TestNestedMessageRedaction
 */
export declare type TestNestedMessageRedaction = Message<"protobuf_unittest.TestNestedMessageRedaction"> & {
  /**
   * @generated from field: optional string optional_unredacted_nested_string = 1;
   */
  optionalUnredactedNestedString: string;

  /**
   * @generated from field: optional string optional_redacted_nested_string = 2;
   */
  optionalRedactedNestedString: string;
};

/**
 * Describes the message protobuf_unittest.TestNestedMessageRedaction.
 * Use `create(TestNestedMessageRedactionSchema)` to create a new message.
 */
export declare const TestNestedMessageRedactionSchema: GenMessage<TestNestedMessageRedaction>;

/**
 * @generated from message protobuf_unittest.RedactedFields
 */
export declare type RedactedFields = Message<"protobuf_unittest.RedactedFields"> & {
  /**
   * @generated from field: optional string optional_redacted_string = 1;
   */
  optionalRedactedString: string;

  /**
   * @generated from field: optional string optional_unredacted_string = 2;
   */
  optionalUnredactedString: string;

  /**
   * @generated from field: repeated string repeated_redacted_string = 3;
   */
  repeatedRedactedString: string[];

  /**
   * @generated from field: repeated string repeated_unredacted_string = 4;
   */
  repeatedUnredactedString: string[];

  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5;
   */
  optionalRedactedMessage?: TestNestedMessageRedaction;

  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
   */
  optionalUnredactedMessage?: TestNestedMessageRedaction;

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7;
   */
  repeatedRedactedMessage: TestNestedMessageRedaction[];

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
   */
  repeatedUnredactedMessage: TestNestedMessageRedaction[];

  /**
   * @generated from field: map<string, string> map_redacted_string = 9;
   */
  mapRedactedString: { [key: string]: string };

  /**
   * @generated from field: map<string, string> map_unredacted_string = 10;
   */
  mapUnredactedString: { [key: string]: string };

  /**
   * @generated from field: optional string optional_redacted_false_string = 11;
   */
  optionalRedactedFalseString: string;
};

/**
 * Describes the message protobuf_unittest.RedactedFields.
 * Use `create(RedactedFieldsSchema)` to create a new message.
 */
export declare const RedactedFieldsSchema: GenMessage<RedactedFields>;

/**
 * @generated from message protobuf_unittest.TestCord
 */
export declare type TestCord = Message<"protobuf_unittest.TestCord"> & {
  /**
   * @generated from field: optional bytes optional_bytes_cord = 1;
   */
  optionalBytesCord: Uint8Array;

  /**
   * @generated from field: optional bytes optional_bytes_cord_default = 2 [default = "hello"];
   */
  optionalBytesCordDefault: Uint8Array;
};

/**
 * Describes the message protobuf_unittest.TestCord.
 * Use `create(TestCordSchema)` to create a new message.
 */
export declare const TestCordSchema: GenMessage<TestCord>;

/**
 * @generated from message protobuf_unittest.TestPackedEnumSmallRange
 */
export declare type TestPackedEnumSmallRange = Message<"protobuf_unittest.TestPackedEnumSmallRange"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
   */
  vals: TestPackedEnumSmallRange_NestedEnum[];
};

/**
 * Describes the message protobuf_unittest.TestPackedEnumSmallRange.
 * Use `create(TestPackedEnumSmallRangeSchema)` to create a new message.
 */
export declare const TestPackedEnumSmallRangeSchema: GenMessage<TestPackedEnumSmallRange>;

/**
 * @generated from enum protobuf_unittest.TestPackedEnumSmallRange.NestedEnum
 */
export enum TestPackedEnumSmallRange_NestedEnum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

/**
 * Describes the enum protobuf_unittest.TestPackedEnumSmallRange.NestedEnum.
 */
export declare const TestPackedEnumSmallRange_NestedEnumSchema: GenEnum<TestPackedEnumSmallRange_NestedEnum>;

/**
 * @generated from message protobuf_unittest.EnumsForBenchmark
 */
export declare type EnumsForBenchmark = Message<"protobuf_unittest.EnumsForBenchmark"> & {
};

/**
 * Describes the message protobuf_unittest.EnumsForBenchmark.
 * Use `create(EnumsForBenchmarkSchema)` to create a new message.
 */
export declare const EnumsForBenchmarkSchema: GenMessage<EnumsForBenchmark>;

/**
 * @generated from enum protobuf_unittest.EnumsForBenchmark.Flat
 */
export enum EnumsForBenchmark_Flat {
  /**
   * @generated from enum value: A0 = 0;
   */
  A0 = 0,

  /**
   * @generated from enum value: A1 = 1;
   */
  A1 = 1,

  /**
   * @generated from enum value: A2 = 2;
   */
  A2 = 2,

  /**
   * @generated from enum value: A3 = 3;
   */
  A3 = 3,

  /**
   * @generated from enum value: A4 = 4;
   */
  A4 = 4,

  /**
   * @generated from enum value: A5 = 5;
   */
  A5 = 5,

  /**
   * @generated from enum value: A6 = 6;
   */
  A6 = 6,

  /**
   * @generated from enum value: A7 = 7;
   */
  A7 = 7,

  /**
   * @generated from enum value: A8 = 8;
   */
  A8 = 8,

  /**
   * @generated from enum value: A9 = 9;
   */
  A9 = 9,

  /**
   * @generated from enum value: A10 = 10;
   */
  A10 = 10,

  /**
   * @generated from enum value: A11 = 11;
   */
  A11 = 11,

  /**
   * @generated from enum value: A12 = 12;
   */
  A12 = 12,

  /**
   * @generated from enum value: A13 = 13;
   */
  A13 = 13,

  /**
   * @generated from enum value: A14 = 14;
   */
  A14 = 14,

  /**
   * @generated from enum value: A15 = 15;
   */
  A15 = 15,
}

/**
 * Describes the enum protobuf_unittest.EnumsForBenchmark.Flat.
 */
export declare const EnumsForBenchmark_FlatSchema: GenEnum<EnumsForBenchmark_Flat>;

/**
 * Has a few holes, bitmap can be used.
 *
 * @generated from enum protobuf_unittest.EnumsForBenchmark.AlmostFlat
 */
export enum EnumsForBenchmark_AlmostFlat {
  /**
   * @generated from enum value: B0 = 0;
   */
  B0 = 0,

  /**
   * @generated from enum value: B1 = 1;
   */
  B1 = 1,

  /**
   * @generated from enum value: B2 = 2;
   */
  B2 = 2,

  /**
   * @generated from enum value: B3 = 3;
   */
  B3 = 3,

  /**
   * @generated from enum value: B5 = 5;
   */
  B5 = 5,

  /**
   * @generated from enum value: B6 = 6;
   */
  B6 = 6,

  /**
   * @generated from enum value: B7 = 7;
   */
  B7 = 7,

  /**
   * @generated from enum value: B8 = 8;
   */
  B8 = 8,

  /**
   * @generated from enum value: B9 = 9;
   */
  B9 = 9,

  /**
   * @generated from enum value: B11 = 11;
   */
  B11 = 11,

  /**
   * @generated from enum value: B12 = 12;
   */
  B12 = 12,

  /**
   * @generated from enum value: B13 = 13;
   */
  B13 = 13,

  /**
   * @generated from enum value: B14 = 14;
   */
  B14 = 14,

  /**
   * @generated from enum value: B15 = 15;
   */
  B15 = 15,

  /**
   * @generated from enum value: B17 = 17;
   */
  B17 = 17,

  /**
   * @generated from enum value: B19 = 19;
   */
  B19 = 19,
}

/**
 * Describes the enum protobuf_unittest.EnumsForBenchmark.AlmostFlat.
 */
export declare const EnumsForBenchmark_AlmostFlatSchema: GenEnum<EnumsForBenchmark_AlmostFlat>;

/**
 * @generated from enum protobuf_unittest.EnumsForBenchmark.Sparse
 */
export enum EnumsForBenchmark_Sparse {
  /**
   * @generated from enum value: C536 = 536;
   */
  C536 = 536,

  /**
   * @generated from enum value: C8387 = 8387;
   */
  C8387 = 8387,

  /**
   * @generated from enum value: C9673 = 9673;
   */
  C9673 = 9673,

  /**
   * @generated from enum value: C10285 = 10285;
   */
  C10285 = 10285,

  /**
   * @generated from enum value: C13318 = 13318;
   */
  C13318 = 13318,

  /**
   * @generated from enum value: C15963 = 15963;
   */
  C15963 = 15963,

  /**
   * @generated from enum value: C16439 = 16439;
   */
  C16439 = 16439,

  /**
   * @generated from enum value: C18197 = 18197;
   */
  C18197 = 18197,

  /**
   * @generated from enum value: C19430 = 19430;
   */
  C19430 = 19430,

  /**
   * @generated from enum value: C20361 = 20361;
   */
  C20361 = 20361,

  /**
   * @generated from enum value: C20706 = 20706;
   */
  C20706 = 20706,

  /**
   * @generated from enum value: C21050 = 21050;
   */
  C21050 = 21050,

  /**
   * @generated from enum value: C21906 = 21906;
   */
  C21906 = 21906,

  /**
   * @generated from enum value: C27265 = 27265;
   */
  C27265 = 27265,

  /**
   * @generated from enum value: C30109 = 30109;
   */
  C30109 = 30109,

  /**
   * @generated from enum value: C31670 = 31670;
   */
  C31670 = 31670,
}

/**
 * Describes the enum protobuf_unittest.EnumsForBenchmark.Sparse.
 */
export declare const EnumsForBenchmark_SparseSchema: GenEnum<EnumsForBenchmark_Sparse>;

/**
 * @generated from message protobuf_unittest.TestMessageWithManyRepeatedPtrFields
 */
export declare type TestMessageWithManyRepeatedPtrFields = Message<"protobuf_unittest.TestMessageWithManyRepeatedPtrFields"> & {
  /**
   * @generated from field: repeated string repeated_string_1 = 1;
   */
  repeatedString1: string[];

  /**
   * @generated from field: repeated string repeated_string_2 = 2;
   */
  repeatedString2: string[];

  /**
   * @generated from field: repeated string repeated_string_3 = 3;
   */
  repeatedString3: string[];

  /**
   * @generated from field: repeated string repeated_string_4 = 4;
   */
  repeatedString4: string[];

  /**
   * @generated from field: repeated string repeated_string_5 = 5;
   */
  repeatedString5: string[];

  /**
   * @generated from field: repeated string repeated_string_6 = 6;
   */
  repeatedString6: string[];

  /**
   * @generated from field: repeated string repeated_string_7 = 7;
   */
  repeatedString7: string[];

  /**
   * @generated from field: repeated string repeated_string_8 = 8;
   */
  repeatedString8: string[];

  /**
   * @generated from field: repeated string repeated_string_9 = 9;
   */
  repeatedString9: string[];

  /**
   * @generated from field: repeated string repeated_string_10 = 10;
   */
  repeatedString10: string[];

  /**
   * @generated from field: repeated string repeated_string_11 = 11;
   */
  repeatedString11: string[];

  /**
   * @generated from field: repeated string repeated_string_12 = 12;
   */
  repeatedString12: string[];

  /**
   * @generated from field: repeated string repeated_string_13 = 13;
   */
  repeatedString13: string[];

  /**
   * @generated from field: repeated string repeated_string_14 = 14;
   */
  repeatedString14: string[];

  /**
   * @generated from field: repeated string repeated_string_15 = 15;
   */
  repeatedString15: string[];

  /**
   * @generated from field: repeated string repeated_string_16 = 16;
   */
  repeatedString16: string[];

  /**
   * @generated from field: repeated string repeated_string_17 = 17;
   */
  repeatedString17: string[];

  /**
   * @generated from field: repeated string repeated_string_18 = 18;
   */
  repeatedString18: string[];

  /**
   * @generated from field: repeated string repeated_string_19 = 19;
   */
  repeatedString19: string[];

  /**
   * @generated from field: repeated string repeated_string_20 = 20;
   */
  repeatedString20: string[];

  /**
   * @generated from field: repeated string repeated_string_21 = 21;
   */
  repeatedString21: string[];

  /**
   * @generated from field: repeated string repeated_string_22 = 22;
   */
  repeatedString22: string[];

  /**
   * @generated from field: repeated string repeated_string_23 = 23;
   */
  repeatedString23: string[];

  /**
   * @generated from field: repeated string repeated_string_24 = 24;
   */
  repeatedString24: string[];

  /**
   * @generated from field: repeated string repeated_string_25 = 25;
   */
  repeatedString25: string[];

  /**
   * @generated from field: repeated string repeated_string_26 = 26;
   */
  repeatedString26: string[];

  /**
   * @generated from field: repeated string repeated_string_27 = 27;
   */
  repeatedString27: string[];

  /**
   * @generated from field: repeated string repeated_string_28 = 28;
   */
  repeatedString28: string[];

  /**
   * @generated from field: repeated string repeated_string_29 = 29;
   */
  repeatedString29: string[];

  /**
   * @generated from field: repeated string repeated_string_30 = 30;
   */
  repeatedString30: string[];

  /**
   * @generated from field: repeated string repeated_string_31 = 31;
   */
  repeatedString31: string[];

  /**
   * @generated from field: repeated string repeated_string_32 = 32;
   */
  repeatedString32: string[];
};

/**
 * Describes the message protobuf_unittest.TestMessageWithManyRepeatedPtrFields.
 * Use `create(TestMessageWithManyRepeatedPtrFieldsSchema)` to create a new message.
 */
export declare const TestMessageWithManyRepeatedPtrFieldsSchema: GenMessage<TestMessageWithManyRepeatedPtrFields>;

/**
 * @generated from enum protobuf_unittest.ForeignEnum
 */
export enum ForeignEnum {
  /**
   * @generated from enum value: FOREIGN_FOO = 4;
   */
  FOREIGN_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_BAR = 5;
   */
  FOREIGN_BAR = 5,

  /**
   * @generated from enum value: FOREIGN_BAZ = 6;
   */
  FOREIGN_BAZ = 6,

  /**
   * (1 << 32) to generate a 64b bitmask would be incorrect.
   *
   * @generated from enum value: FOREIGN_BAX = 32;
   */
  FOREIGN_BAX = 32,

  /**
   * Large enough to escape the Boxed Integer cache.
   *
   * @generated from enum value: FOREIGN_LARGE = 123456;
   */
  FOREIGN_LARGE = 123456,
}

/**
 * Describes the enum protobuf_unittest.ForeignEnum.
 */
export declare const ForeignEnumSchema: GenEnum<ForeignEnum>;

/**
 * @generated from enum protobuf_unittest.TestReservedEnumFields
 */
export enum TestReservedEnumFields {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,
}

/**
 * Describes the enum protobuf_unittest.TestReservedEnumFields.
 */
export declare const TestReservedEnumFieldsSchema: GenEnum<TestReservedEnumFields>;

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from enum protobuf_unittest.TestEnumWithDupValue
 */
export enum TestEnumWithDupValue {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

/**
 * Describes the enum protobuf_unittest.TestEnumWithDupValue.
 */
export declare const TestEnumWithDupValueSchema: GenEnum<TestEnumWithDupValue>;

/**
 * Test an enum with large, unordered values.
 *
 * @generated from enum protobuf_unittest.TestSparseEnum
 */
export enum TestSparseEnum {
  /**
   * @generated from enum value: SPARSE_A = 123;
   */
  SPARSE_A = 123,

  /**
   * @generated from enum value: SPARSE_B = 62374;
   */
  SPARSE_B = 62374,

  /**
   * @generated from enum value: SPARSE_C = 12589234;
   */
  SPARSE_C = 12589234,

  /**
   * @generated from enum value: SPARSE_D = -15;
   */
  SPARSE_D = -15,

  /**
   * @generated from enum value: SPARSE_E = -53452;
   */
  SPARSE_E = -53452,

  /**
   * @generated from enum value: SPARSE_F = 0;
   */
  SPARSE_F = 0,

  /**
   * @generated from enum value: SPARSE_G = 2;
   */
  SPARSE_G = 2,
}

/**
 * Describes the enum protobuf_unittest.TestSparseEnum.
 */
export declare const TestSparseEnumSchema: GenEnum<TestSparseEnum>;

/**
 * @generated from enum protobuf_unittest.VeryLargeEnum
 */
export enum VeryLargeEnum {
  /**
   * @generated from enum value: ENUM_LABEL_DEFAULT = 0;
   */
  ENUM_LABEL_DEFAULT = 0,

  /**
   * @generated from enum value: ENUM_LABEL_1 = 1;
   */
  ENUM_LABEL_1 = 1,

  /**
   * @generated from enum value: ENUM_LABEL_2 = 2;
   */
  ENUM_LABEL_2 = 2,

  /**
   * @generated from enum value: ENUM_LABEL_3 = 3;
   */
  ENUM_LABEL_3 = 3,

  /**
   * @generated from enum value: ENUM_LABEL_4 = 4;
   */
  ENUM_LABEL_4 = 4,

  /**
   * @generated from enum value: ENUM_LABEL_5 = 5;
   */
  ENUM_LABEL_5 = 5,

  /**
   * @generated from enum value: ENUM_LABEL_6 = 6;
   */
  ENUM_LABEL_6 = 6,

  /**
   * @generated from enum value: ENUM_LABEL_7 = 7;
   */
  ENUM_LABEL_7 = 7,

  /**
   * @generated from enum value: ENUM_LABEL_8 = 8;
   */
  ENUM_LABEL_8 = 8,

  /**
   * @generated from enum value: ENUM_LABEL_9 = 9;
   */
  ENUM_LABEL_9 = 9,

  /**
   * @generated from enum value: ENUM_LABEL_10 = 10;
   */
  ENUM_LABEL_10 = 10,

  /**
   * @generated from enum value: ENUM_LABEL_11 = 11;
   */
  ENUM_LABEL_11 = 11,

  /**
   * @generated from enum value: ENUM_LABEL_12 = 12;
   */
  ENUM_LABEL_12 = 12,

  /**
   * @generated from enum value: ENUM_LABEL_13 = 13;
   */
  ENUM_LABEL_13 = 13,

  /**
   * @generated from enum value: ENUM_LABEL_14 = 14;
   */
  ENUM_LABEL_14 = 14,

  /**
   * @generated from enum value: ENUM_LABEL_15 = 15;
   */
  ENUM_LABEL_15 = 15,

  /**
   * @generated from enum value: ENUM_LABEL_16 = 16;
   */
  ENUM_LABEL_16 = 16,

  /**
   * @generated from enum value: ENUM_LABEL_17 = 17;
   */
  ENUM_LABEL_17 = 17,

  /**
   * @generated from enum value: ENUM_LABEL_18 = 18;
   */
  ENUM_LABEL_18 = 18,

  /**
   * @generated from enum value: ENUM_LABEL_19 = 19;
   */
  ENUM_LABEL_19 = 19,

  /**
   * @generated from enum value: ENUM_LABEL_20 = 20;
   */
  ENUM_LABEL_20 = 20,

  /**
   * @generated from enum value: ENUM_LABEL_21 = 21;
   */
  ENUM_LABEL_21 = 21,

  /**
   * @generated from enum value: ENUM_LABEL_22 = 22;
   */
  ENUM_LABEL_22 = 22,

  /**
   * @generated from enum value: ENUM_LABEL_23 = 23;
   */
  ENUM_LABEL_23 = 23,

  /**
   * @generated from enum value: ENUM_LABEL_24 = 24;
   */
  ENUM_LABEL_24 = 24,

  /**
   * @generated from enum value: ENUM_LABEL_25 = 25;
   */
  ENUM_LABEL_25 = 25,

  /**
   * @generated from enum value: ENUM_LABEL_26 = 26;
   */
  ENUM_LABEL_26 = 26,

  /**
   * @generated from enum value: ENUM_LABEL_27 = 27;
   */
  ENUM_LABEL_27 = 27,

  /**
   * @generated from enum value: ENUM_LABEL_28 = 28;
   */
  ENUM_LABEL_28 = 28,

  /**
   * @generated from enum value: ENUM_LABEL_29 = 29;
   */
  ENUM_LABEL_29 = 29,

  /**
   * @generated from enum value: ENUM_LABEL_30 = 30;
   */
  ENUM_LABEL_30 = 30,

  /**
   * @generated from enum value: ENUM_LABEL_31 = 31;
   */
  ENUM_LABEL_31 = 31,

  /**
   * @generated from enum value: ENUM_LABEL_32 = 32;
   */
  ENUM_LABEL_32 = 32,

  /**
   * @generated from enum value: ENUM_LABEL_33 = 33;
   */
  ENUM_LABEL_33 = 33,

  /**
   * @generated from enum value: ENUM_LABEL_34 = 34;
   */
  ENUM_LABEL_34 = 34,

  /**
   * @generated from enum value: ENUM_LABEL_35 = 35;
   */
  ENUM_LABEL_35 = 35,

  /**
   * @generated from enum value: ENUM_LABEL_36 = 36;
   */
  ENUM_LABEL_36 = 36,

  /**
   * @generated from enum value: ENUM_LABEL_37 = 37;
   */
  ENUM_LABEL_37 = 37,

  /**
   * @generated from enum value: ENUM_LABEL_38 = 38;
   */
  ENUM_LABEL_38 = 38,

  /**
   * @generated from enum value: ENUM_LABEL_39 = 39;
   */
  ENUM_LABEL_39 = 39,

  /**
   * @generated from enum value: ENUM_LABEL_40 = 40;
   */
  ENUM_LABEL_40 = 40,

  /**
   * @generated from enum value: ENUM_LABEL_41 = 41;
   */
  ENUM_LABEL_41 = 41,

  /**
   * @generated from enum value: ENUM_LABEL_42 = 42;
   */
  ENUM_LABEL_42 = 42,

  /**
   * @generated from enum value: ENUM_LABEL_43 = 43;
   */
  ENUM_LABEL_43 = 43,

  /**
   * @generated from enum value: ENUM_LABEL_44 = 44;
   */
  ENUM_LABEL_44 = 44,

  /**
   * @generated from enum value: ENUM_LABEL_45 = 45;
   */
  ENUM_LABEL_45 = 45,

  /**
   * @generated from enum value: ENUM_LABEL_46 = 46;
   */
  ENUM_LABEL_46 = 46,

  /**
   * @generated from enum value: ENUM_LABEL_47 = 47;
   */
  ENUM_LABEL_47 = 47,

  /**
   * @generated from enum value: ENUM_LABEL_48 = 48;
   */
  ENUM_LABEL_48 = 48,

  /**
   * @generated from enum value: ENUM_LABEL_49 = 49;
   */
  ENUM_LABEL_49 = 49,

  /**
   * @generated from enum value: ENUM_LABEL_50 = 50;
   */
  ENUM_LABEL_50 = 50,

  /**
   * @generated from enum value: ENUM_LABEL_51 = 51;
   */
  ENUM_LABEL_51 = 51,

  /**
   * @generated from enum value: ENUM_LABEL_52 = 52;
   */
  ENUM_LABEL_52 = 52,

  /**
   * @generated from enum value: ENUM_LABEL_53 = 53;
   */
  ENUM_LABEL_53 = 53,

  /**
   * @generated from enum value: ENUM_LABEL_54 = 54;
   */
  ENUM_LABEL_54 = 54,

  /**
   * @generated from enum value: ENUM_LABEL_55 = 55;
   */
  ENUM_LABEL_55 = 55,

  /**
   * @generated from enum value: ENUM_LABEL_56 = 56;
   */
  ENUM_LABEL_56 = 56,

  /**
   * @generated from enum value: ENUM_LABEL_57 = 57;
   */
  ENUM_LABEL_57 = 57,

  /**
   * @generated from enum value: ENUM_LABEL_58 = 58;
   */
  ENUM_LABEL_58 = 58,

  /**
   * @generated from enum value: ENUM_LABEL_59 = 59;
   */
  ENUM_LABEL_59 = 59,

  /**
   * @generated from enum value: ENUM_LABEL_60 = 60;
   */
  ENUM_LABEL_60 = 60,

  /**
   * @generated from enum value: ENUM_LABEL_61 = 61;
   */
  ENUM_LABEL_61 = 61,

  /**
   * @generated from enum value: ENUM_LABEL_62 = 62;
   */
  ENUM_LABEL_62 = 62,

  /**
   * @generated from enum value: ENUM_LABEL_63 = 63;
   */
  ENUM_LABEL_63 = 63,

  /**
   * @generated from enum value: ENUM_LABEL_64 = 64;
   */
  ENUM_LABEL_64 = 64,

  /**
   * @generated from enum value: ENUM_LABEL_65 = 65;
   */
  ENUM_LABEL_65 = 65,

  /**
   * @generated from enum value: ENUM_LABEL_66 = 66;
   */
  ENUM_LABEL_66 = 66,

  /**
   * @generated from enum value: ENUM_LABEL_67 = 67;
   */
  ENUM_LABEL_67 = 67,

  /**
   * @generated from enum value: ENUM_LABEL_68 = 68;
   */
  ENUM_LABEL_68 = 68,

  /**
   * @generated from enum value: ENUM_LABEL_69 = 69;
   */
  ENUM_LABEL_69 = 69,

  /**
   * @generated from enum value: ENUM_LABEL_70 = 70;
   */
  ENUM_LABEL_70 = 70,

  /**
   * @generated from enum value: ENUM_LABEL_71 = 71;
   */
  ENUM_LABEL_71 = 71,

  /**
   * @generated from enum value: ENUM_LABEL_72 = 72;
   */
  ENUM_LABEL_72 = 72,

  /**
   * @generated from enum value: ENUM_LABEL_73 = 73;
   */
  ENUM_LABEL_73 = 73,

  /**
   * @generated from enum value: ENUM_LABEL_74 = 74;
   */
  ENUM_LABEL_74 = 74,

  /**
   * @generated from enum value: ENUM_LABEL_75 = 75;
   */
  ENUM_LABEL_75 = 75,

  /**
   * @generated from enum value: ENUM_LABEL_76 = 76;
   */
  ENUM_LABEL_76 = 76,

  /**
   * @generated from enum value: ENUM_LABEL_77 = 77;
   */
  ENUM_LABEL_77 = 77,

  /**
   * @generated from enum value: ENUM_LABEL_78 = 78;
   */
  ENUM_LABEL_78 = 78,

  /**
   * @generated from enum value: ENUM_LABEL_79 = 79;
   */
  ENUM_LABEL_79 = 79,

  /**
   * @generated from enum value: ENUM_LABEL_80 = 80;
   */
  ENUM_LABEL_80 = 80,

  /**
   * @generated from enum value: ENUM_LABEL_81 = 81;
   */
  ENUM_LABEL_81 = 81,

  /**
   * @generated from enum value: ENUM_LABEL_82 = 82;
   */
  ENUM_LABEL_82 = 82,

  /**
   * @generated from enum value: ENUM_LABEL_83 = 83;
   */
  ENUM_LABEL_83 = 83,

  /**
   * @generated from enum value: ENUM_LABEL_84 = 84;
   */
  ENUM_LABEL_84 = 84,

  /**
   * @generated from enum value: ENUM_LABEL_85 = 85;
   */
  ENUM_LABEL_85 = 85,

  /**
   * @generated from enum value: ENUM_LABEL_86 = 86;
   */
  ENUM_LABEL_86 = 86,

  /**
   * @generated from enum value: ENUM_LABEL_87 = 87;
   */
  ENUM_LABEL_87 = 87,

  /**
   * @generated from enum value: ENUM_LABEL_88 = 88;
   */
  ENUM_LABEL_88 = 88,

  /**
   * @generated from enum value: ENUM_LABEL_89 = 89;
   */
  ENUM_LABEL_89 = 89,

  /**
   * @generated from enum value: ENUM_LABEL_90 = 90;
   */
  ENUM_LABEL_90 = 90,

  /**
   * @generated from enum value: ENUM_LABEL_91 = 91;
   */
  ENUM_LABEL_91 = 91,

  /**
   * @generated from enum value: ENUM_LABEL_92 = 92;
   */
  ENUM_LABEL_92 = 92,

  /**
   * @generated from enum value: ENUM_LABEL_93 = 93;
   */
  ENUM_LABEL_93 = 93,

  /**
   * @generated from enum value: ENUM_LABEL_94 = 94;
   */
  ENUM_LABEL_94 = 94,

  /**
   * @generated from enum value: ENUM_LABEL_95 = 95;
   */
  ENUM_LABEL_95 = 95,

  /**
   * @generated from enum value: ENUM_LABEL_96 = 96;
   */
  ENUM_LABEL_96 = 96,

  /**
   * @generated from enum value: ENUM_LABEL_97 = 97;
   */
  ENUM_LABEL_97 = 97,

  /**
   * @generated from enum value: ENUM_LABEL_98 = 98;
   */
  ENUM_LABEL_98 = 98,

  /**
   * @generated from enum value: ENUM_LABEL_99 = 99;
   */
  ENUM_LABEL_99 = 99,

  /**
   * @generated from enum value: ENUM_LABEL_100 = 100;
   */
  ENUM_LABEL_100 = 100,
}

/**
 * Describes the enum protobuf_unittest.VeryLargeEnum.
 */
export declare const VeryLargeEnumSchema: GenEnum<VeryLargeEnum>;

/**
 * @generated from service protobuf_unittest.TestService
 */
export declare const TestService: GenService<{
  /**
   * @generated from rpc protobuf_unittest.TestService.Foo
   */
  foo: {
    methodKind: "unary";
    input: typeof FooRequestSchema;
    output: typeof FooResponseSchema;
  },
  /**
   * @generated from rpc protobuf_unittest.TestService.Bar
   */
  bar: {
    methodKind: "unary";
    input: typeof BarRequestSchema;
    output: typeof BarResponseSchema;
  },
}>;

/**
 * Singular
 *
 * @generated from extension: optional int32 optional_int32_extension = 1;
 */
export declare const optional_int32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional int64 optional_int64_extension = 2;
 */
export declare const optional_int64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional uint32 optional_uint32_extension = 3;
 */
export declare const optional_uint32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional uint64 optional_uint64_extension = 4;
 */
export declare const optional_uint64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional sint32 optional_sint32_extension = 5;
 */
export declare const optional_sint32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional sint64 optional_sint64_extension = 6;
 */
export declare const optional_sint64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional fixed32 optional_fixed32_extension = 7;
 */
export declare const optional_fixed32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional fixed64 optional_fixed64_extension = 8;
 */
export declare const optional_fixed64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional sfixed32 optional_sfixed32_extension = 9;
 */
export declare const optional_sfixed32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional sfixed64 optional_sfixed64_extension = 10;
 */
export declare const optional_sfixed64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional float optional_float_extension = 11;
 */
export declare const optional_float_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional double optional_double_extension = 12;
 */
export declare const optional_double_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional bool optional_bool_extension = 13;
 */
export declare const optional_bool_extension: GenExtension<TestAllExtensions, boolean>;

/**
 * @generated from extension: optional string optional_string_extension = 14;
 */
export declare const optional_string_extension: GenExtension<TestAllExtensions, string>;

/**
 * @generated from extension: optional bytes optional_bytes_extension = 15;
 */
export declare const optional_bytes_extension: GenExtension<TestAllExtensions, Uint8Array>;

/**
 * @generated from extension: optional protobuf_unittest.OptionalGroup_extension optionalgroup_extension = 16;
 */
export declare const optionalgroup_extension: GenExtension<TestAllExtensions, OptionalGroup_extension>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message_extension = 18;
 */
export declare const optional_nested_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignMessage optional_foreign_message_extension = 19;
 */
export declare const optional_foreign_message_extension: GenExtension<TestAllExtensions, ForeignMessage>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportMessage optional_import_message_extension = 20;
 */
export declare const optional_import_message_extension: GenExtension<TestAllExtensions, ImportMessage>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum_extension = 21;
 */
export declare const optional_nested_enum_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedEnum>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum optional_foreign_enum_extension = 22;
 */
export declare const optional_foreign_enum_extension: GenExtension<TestAllExtensions, ForeignEnum>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnum optional_import_enum_extension = 23;
 */
export declare const optional_import_enum_extension: GenExtension<TestAllExtensions, ImportEnum>;

/**
 * @generated from extension: optional string optional_string_piece_extension = 24;
 */
export declare const optional_string_piece_extension: GenExtension<TestAllExtensions, string>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string optional_cord_extension = 25;
 */
export declare const optional_cord_extension: GenExtension<TestAllExtensions, string>;

/**
 * @generated from extension: optional protobuf_unittest_import.PublicImportMessage optional_public_import_message_extension = 26;
 */
export declare const optional_public_import_message_extension: GenExtension<TestAllExtensions, PublicImportMessage>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message_extension = 27;
 */
export declare const optional_lazy_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message_extension = 28;
 */
export declare const optional_unverified_lazy_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage>;

/**
 * Repeated
 *
 * @generated from extension: repeated int32 repeated_int32_extension = 31;
 */
export declare const repeated_int32_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated int64 repeated_int64_extension = 32;
 */
export declare const repeated_int64_extension: GenExtension<TestAllExtensions, bigint[]>;

/**
 * @generated from extension: repeated uint32 repeated_uint32_extension = 33;
 */
export declare const repeated_uint32_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated uint64 repeated_uint64_extension = 34;
 */
export declare const repeated_uint64_extension: GenExtension<TestAllExtensions, bigint[]>;

/**
 * @generated from extension: repeated sint32 repeated_sint32_extension = 35;
 */
export declare const repeated_sint32_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated sint64 repeated_sint64_extension = 36;
 */
export declare const repeated_sint64_extension: GenExtension<TestAllExtensions, bigint[]>;

/**
 * @generated from extension: repeated fixed32 repeated_fixed32_extension = 37;
 */
export declare const repeated_fixed32_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated fixed64 repeated_fixed64_extension = 38;
 */
export declare const repeated_fixed64_extension: GenExtension<TestAllExtensions, bigint[]>;

/**
 * @generated from extension: repeated sfixed32 repeated_sfixed32_extension = 39;
 */
export declare const repeated_sfixed32_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated sfixed64 repeated_sfixed64_extension = 40;
 */
export declare const repeated_sfixed64_extension: GenExtension<TestAllExtensions, bigint[]>;

/**
 * @generated from extension: repeated float repeated_float_extension = 41;
 */
export declare const repeated_float_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated double repeated_double_extension = 42;
 */
export declare const repeated_double_extension: GenExtension<TestAllExtensions, number[]>;

/**
 * @generated from extension: repeated bool repeated_bool_extension = 43;
 */
export declare const repeated_bool_extension: GenExtension<TestAllExtensions, boolean[]>;

/**
 * @generated from extension: repeated string repeated_string_extension = 44;
 */
export declare const repeated_string_extension: GenExtension<TestAllExtensions, string[]>;

/**
 * @generated from extension: repeated bytes repeated_bytes_extension = 45;
 */
export declare const repeated_bytes_extension: GenExtension<TestAllExtensions, Uint8Array[]>;

/**
 * @generated from extension: repeated protobuf_unittest.RepeatedGroup_extension repeatedgroup_extension = 46;
 */
export declare const repeatedgroup_extension: GenExtension<TestAllExtensions, RepeatedGroup_extension[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message_extension = 48;
 */
export declare const repeated_nested_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignMessage repeated_foreign_message_extension = 49;
 */
export declare const repeated_foreign_message_extension: GenExtension<TestAllExtensions, ForeignMessage[]>;

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportMessage repeated_import_message_extension = 50;
 */
export declare const repeated_import_message_extension: GenExtension<TestAllExtensions, ImportMessage[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum_extension = 51;
 */
export declare const repeated_nested_enum_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedEnum[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum repeated_foreign_enum_extension = 52;
 */
export declare const repeated_foreign_enum_extension: GenExtension<TestAllExtensions, ForeignEnum[]>;

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportEnum repeated_import_enum_extension = 53;
 */
export declare const repeated_import_enum_extension: GenExtension<TestAllExtensions, ImportEnum[]>;

/**
 * @generated from extension: repeated string repeated_string_piece_extension = 54;
 */
export declare const repeated_string_piece_extension: GenExtension<TestAllExtensions, string[]>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: repeated string repeated_cord_extension = 55;
 */
export declare const repeated_cord_extension: GenExtension<TestAllExtensions, string[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message_extension = 57;
 */
export declare const repeated_lazy_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage[]>;

/**
 * Singular with defaults
 *
 * @generated from extension: optional int32 default_int32_extension = 61 [default = 41];
 */
export declare const default_int32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional int64 default_int64_extension = 62 [default = 42];
 */
export declare const default_int64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional uint32 default_uint32_extension = 63 [default = 43];
 */
export declare const default_uint32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional uint64 default_uint64_extension = 64 [default = 44];
 */
export declare const default_uint64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional sint32 default_sint32_extension = 65 [default = -45];
 */
export declare const default_sint32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional sint64 default_sint64_extension = 66 [default = 46];
 */
export declare const default_sint64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional fixed32 default_fixed32_extension = 67 [default = 47];
 */
export declare const default_fixed32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional fixed64 default_fixed64_extension = 68 [default = 48];
 */
export declare const default_fixed64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional sfixed32 default_sfixed32_extension = 69 [default = 49];
 */
export declare const default_sfixed32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional sfixed64 default_sfixed64_extension = 70 [default = -50];
 */
export declare const default_sfixed64_extension: GenExtension<TestAllExtensions, bigint>;

/**
 * @generated from extension: optional float default_float_extension = 71 [default = 51.5];
 */
export declare const default_float_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional double default_double_extension = 72 [default = 52000];
 */
export declare const default_double_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional bool default_bool_extension = 73 [default = true];
 */
export declare const default_bool_extension: GenExtension<TestAllExtensions, boolean>;

/**
 * @generated from extension: optional string default_string_extension = 74 [default = "hello"];
 */
export declare const default_string_extension: GenExtension<TestAllExtensions, string>;

/**
 * @generated from extension: optional bytes default_bytes_extension = 75 [default = "world"];
 */
export declare const default_bytes_extension: GenExtension<TestAllExtensions, Uint8Array>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum_extension = 81 [default = BAR];
 */
export declare const default_nested_enum_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedEnum>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnum default_foreign_enum_extension = 82 [default = FOREIGN_BAR];
 */
export declare const default_foreign_enum_extension: GenExtension<TestAllExtensions, ForeignEnum>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnum default_import_enum_extension = 83 [default = IMPORT_BAR];
 */
export declare const default_import_enum_extension: GenExtension<TestAllExtensions, ImportEnum>;

/**
 * @generated from extension: optional string default_string_piece_extension = 84 [default = "abc"];
 */
export declare const default_string_piece_extension: GenExtension<TestAllExtensions, string>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string default_cord_extension = 85 [default = "123"];
 */
export declare const default_cord_extension: GenExtension<TestAllExtensions, string>;

/**
 * For oneof test
 *
 * @generated from extension: optional uint32 oneof_uint32_extension = 111;
 */
export declare const oneof_uint32_extension: GenExtension<TestAllExtensions, number>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message_extension = 112;
 */
export declare const oneof_nested_message_extension: GenExtension<TestAllExtensions, TestAllTypes_NestedMessage>;

/**
 * @generated from extension: optional string oneof_string_extension = 113;
 */
export declare const oneof_string_extension: GenExtension<TestAllExtensions, string>;

/**
 * @generated from extension: optional bytes oneof_bytes_extension = 114;
 */
export declare const oneof_bytes_extension: GenExtension<TestAllExtensions, Uint8Array>;

/**
 * @generated from extension: optional string my_extension_string = 50;
 */
export declare const my_extension_string: GenExtension<TestFieldOrderings, string>;

/**
 * @generated from extension: optional int32 my_extension_int = 5;
 */
export declare const my_extension_int: GenExtension<TestFieldOrderings, number>;

/**
 * @generated from extension: repeated int32 packed_int32_extension = 90 [packed = true];
 */
export declare const packed_int32_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated int64 packed_int64_extension = 91 [packed = true];
 */
export declare const packed_int64_extension: GenExtension<TestPackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated uint32 packed_uint32_extension = 92 [packed = true];
 */
export declare const packed_uint32_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated uint64 packed_uint64_extension = 93 [packed = true];
 */
export declare const packed_uint64_extension: GenExtension<TestPackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated sint32 packed_sint32_extension = 94 [packed = true];
 */
export declare const packed_sint32_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated sint64 packed_sint64_extension = 95 [packed = true];
 */
export declare const packed_sint64_extension: GenExtension<TestPackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated fixed32 packed_fixed32_extension = 96 [packed = true];
 */
export declare const packed_fixed32_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated fixed64 packed_fixed64_extension = 97 [packed = true];
 */
export declare const packed_fixed64_extension: GenExtension<TestPackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated sfixed32 packed_sfixed32_extension = 98 [packed = true];
 */
export declare const packed_sfixed32_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated sfixed64 packed_sfixed64_extension = 99 [packed = true];
 */
export declare const packed_sfixed64_extension: GenExtension<TestPackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated float packed_float_extension = 100 [packed = true];
 */
export declare const packed_float_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated double packed_double_extension = 101 [packed = true];
 */
export declare const packed_double_extension: GenExtension<TestPackedExtensions, number[]>;

/**
 * @generated from extension: repeated bool packed_bool_extension = 102 [packed = true];
 */
export declare const packed_bool_extension: GenExtension<TestPackedExtensions, boolean[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum packed_enum_extension = 103 [packed = true];
 */
export declare const packed_enum_extension: GenExtension<TestPackedExtensions, ForeignEnum[]>;

/**
 * @generated from extension: repeated int32 unpacked_int32_extension = 90 [packed = false];
 */
export declare const unpacked_int32_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated int64 unpacked_int64_extension = 91 [packed = false];
 */
export declare const unpacked_int64_extension: GenExtension<TestUnpackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated uint32 unpacked_uint32_extension = 92 [packed = false];
 */
export declare const unpacked_uint32_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated uint64 unpacked_uint64_extension = 93 [packed = false];
 */
export declare const unpacked_uint64_extension: GenExtension<TestUnpackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated sint32 unpacked_sint32_extension = 94 [packed = false];
 */
export declare const unpacked_sint32_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated sint64 unpacked_sint64_extension = 95 [packed = false];
 */
export declare const unpacked_sint64_extension: GenExtension<TestUnpackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated fixed32 unpacked_fixed32_extension = 96 [packed = false];
 */
export declare const unpacked_fixed32_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated fixed64 unpacked_fixed64_extension = 97 [packed = false];
 */
export declare const unpacked_fixed64_extension: GenExtension<TestUnpackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated sfixed32 unpacked_sfixed32_extension = 98 [packed = false];
 */
export declare const unpacked_sfixed32_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated sfixed64 unpacked_sfixed64_extension = 99 [packed = false];
 */
export declare const unpacked_sfixed64_extension: GenExtension<TestUnpackedExtensions, bigint[]>;

/**
 * @generated from extension: repeated float unpacked_float_extension = 100 [packed = false];
 */
export declare const unpacked_float_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated double unpacked_double_extension = 101 [packed = false];
 */
export declare const unpacked_double_extension: GenExtension<TestUnpackedExtensions, number[]>;

/**
 * @generated from extension: repeated bool unpacked_bool_extension = 102 [packed = false];
 */
export declare const unpacked_bool_extension: GenExtension<TestUnpackedExtensions, boolean[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnum unpacked_enum_extension = 103 [packed = false];
 */
export declare const unpacked_enum_extension: GenExtension<TestUnpackedExtensions, ForeignEnum[]>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypes test_all_types = 536860000;
 */
export declare const test_all_types: GenExtension<TestHugeFieldNumbers, TestAllTypes>;

/**
 * @generated from extension: optional int32 test_extension_inside_table_extension = 5;
 */
export declare const test_extension_inside_table_extension: GenExtension<TestExtensionInsideTable, number>;

/**
 * @generated from extension: optional protobuf_unittest.TestNestedGroupExtensionInnerExtension inner = 3;
 */
export declare const inner: GenExtension<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, TestNestedGroupExtensionInnerExtension>;

/**
 * @generated from extension: optional string redacted_extension = 20;
 */
export declare const redacted_extension: GenExtension<RedactedFields, string>;

