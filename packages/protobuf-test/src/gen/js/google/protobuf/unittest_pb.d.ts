// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file we will use for unit testing.
//
// LINT: ALLOW_GROUPS, LEGACY_NAMES

// @generated by protoc-gen-es v0.2.1 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In test_util.h we do "using namespace unittest = protobuf_unittest".

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto2} from "@bufbuild/protobuf";
import type {ImportEnum, ImportMessage} from "./unittest_import_pb.js";
import type {PublicImportMessage} from "./unittest_import_public_pb.js";

/**
 * @generated from enum protobuf_unittest.ForeignEnum
 */
export declare enum ForeignEnum {
  /**
   * @generated from enum value: FOREIGN_FOO = 4;
   */
  FOREIGN_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_BAR = 5;
   */
  FOREIGN_BAR = 5,

  /**
   * @generated from enum value: FOREIGN_BAZ = 6;
   */
  FOREIGN_BAZ = 6,
}

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from enum protobuf_unittest.TestEnumWithDupValue
 */
export declare enum TestEnumWithDupValue {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

/**
 * Test an enum with large, unordered values.
 *
 * @generated from enum protobuf_unittest.TestSparseEnum
 */
export declare enum TestSparseEnum {
  /**
   * @generated from enum value: SPARSE_A = 123;
   */
  SPARSE_A = 123,

  /**
   * @generated from enum value: SPARSE_B = 62374;
   */
  SPARSE_B = 62374,

  /**
   * @generated from enum value: SPARSE_C = 12589234;
   */
  SPARSE_C = 12589234,

  /**
   * @generated from enum value: SPARSE_D = -15;
   */
  SPARSE_D = -15,

  /**
   * @generated from enum value: SPARSE_E = -53452;
   */
  SPARSE_E = -53452,

  /**
   * @generated from enum value: SPARSE_F = 0;
   */
  SPARSE_F = 0,

  /**
   * @generated from enum value: SPARSE_G = 2;
   */
  SPARSE_G = 2,
}

/**
 * @generated from enum protobuf_unittest.VeryLargeEnum
 */
export declare enum VeryLargeEnum {
  /**
   * @generated from enum value: ENUM_LABEL_DEFAULT = 0;
   */
  ENUM_LABEL_DEFAULT = 0,

  /**
   * @generated from enum value: ENUM_LABEL_1 = 1;
   */
  ENUM_LABEL_1 = 1,

  /**
   * @generated from enum value: ENUM_LABEL_2 = 2;
   */
  ENUM_LABEL_2 = 2,

  /**
   * @generated from enum value: ENUM_LABEL_3 = 3;
   */
  ENUM_LABEL_3 = 3,

  /**
   * @generated from enum value: ENUM_LABEL_4 = 4;
   */
  ENUM_LABEL_4 = 4,

  /**
   * @generated from enum value: ENUM_LABEL_5 = 5;
   */
  ENUM_LABEL_5 = 5,

  /**
   * @generated from enum value: ENUM_LABEL_6 = 6;
   */
  ENUM_LABEL_6 = 6,

  /**
   * @generated from enum value: ENUM_LABEL_7 = 7;
   */
  ENUM_LABEL_7 = 7,

  /**
   * @generated from enum value: ENUM_LABEL_8 = 8;
   */
  ENUM_LABEL_8 = 8,

  /**
   * @generated from enum value: ENUM_LABEL_9 = 9;
   */
  ENUM_LABEL_9 = 9,

  /**
   * @generated from enum value: ENUM_LABEL_10 = 10;
   */
  ENUM_LABEL_10 = 10,

  /**
   * @generated from enum value: ENUM_LABEL_11 = 11;
   */
  ENUM_LABEL_11 = 11,

  /**
   * @generated from enum value: ENUM_LABEL_12 = 12;
   */
  ENUM_LABEL_12 = 12,

  /**
   * @generated from enum value: ENUM_LABEL_13 = 13;
   */
  ENUM_LABEL_13 = 13,

  /**
   * @generated from enum value: ENUM_LABEL_14 = 14;
   */
  ENUM_LABEL_14 = 14,

  /**
   * @generated from enum value: ENUM_LABEL_15 = 15;
   */
  ENUM_LABEL_15 = 15,

  /**
   * @generated from enum value: ENUM_LABEL_16 = 16;
   */
  ENUM_LABEL_16 = 16,

  /**
   * @generated from enum value: ENUM_LABEL_17 = 17;
   */
  ENUM_LABEL_17 = 17,

  /**
   * @generated from enum value: ENUM_LABEL_18 = 18;
   */
  ENUM_LABEL_18 = 18,

  /**
   * @generated from enum value: ENUM_LABEL_19 = 19;
   */
  ENUM_LABEL_19 = 19,

  /**
   * @generated from enum value: ENUM_LABEL_20 = 20;
   */
  ENUM_LABEL_20 = 20,

  /**
   * @generated from enum value: ENUM_LABEL_21 = 21;
   */
  ENUM_LABEL_21 = 21,

  /**
   * @generated from enum value: ENUM_LABEL_22 = 22;
   */
  ENUM_LABEL_22 = 22,

  /**
   * @generated from enum value: ENUM_LABEL_23 = 23;
   */
  ENUM_LABEL_23 = 23,

  /**
   * @generated from enum value: ENUM_LABEL_24 = 24;
   */
  ENUM_LABEL_24 = 24,

  /**
   * @generated from enum value: ENUM_LABEL_25 = 25;
   */
  ENUM_LABEL_25 = 25,

  /**
   * @generated from enum value: ENUM_LABEL_26 = 26;
   */
  ENUM_LABEL_26 = 26,

  /**
   * @generated from enum value: ENUM_LABEL_27 = 27;
   */
  ENUM_LABEL_27 = 27,

  /**
   * @generated from enum value: ENUM_LABEL_28 = 28;
   */
  ENUM_LABEL_28 = 28,

  /**
   * @generated from enum value: ENUM_LABEL_29 = 29;
   */
  ENUM_LABEL_29 = 29,

  /**
   * @generated from enum value: ENUM_LABEL_30 = 30;
   */
  ENUM_LABEL_30 = 30,

  /**
   * @generated from enum value: ENUM_LABEL_31 = 31;
   */
  ENUM_LABEL_31 = 31,

  /**
   * @generated from enum value: ENUM_LABEL_32 = 32;
   */
  ENUM_LABEL_32 = 32,

  /**
   * @generated from enum value: ENUM_LABEL_33 = 33;
   */
  ENUM_LABEL_33 = 33,

  /**
   * @generated from enum value: ENUM_LABEL_34 = 34;
   */
  ENUM_LABEL_34 = 34,

  /**
   * @generated from enum value: ENUM_LABEL_35 = 35;
   */
  ENUM_LABEL_35 = 35,

  /**
   * @generated from enum value: ENUM_LABEL_36 = 36;
   */
  ENUM_LABEL_36 = 36,

  /**
   * @generated from enum value: ENUM_LABEL_37 = 37;
   */
  ENUM_LABEL_37 = 37,

  /**
   * @generated from enum value: ENUM_LABEL_38 = 38;
   */
  ENUM_LABEL_38 = 38,

  /**
   * @generated from enum value: ENUM_LABEL_39 = 39;
   */
  ENUM_LABEL_39 = 39,

  /**
   * @generated from enum value: ENUM_LABEL_40 = 40;
   */
  ENUM_LABEL_40 = 40,

  /**
   * @generated from enum value: ENUM_LABEL_41 = 41;
   */
  ENUM_LABEL_41 = 41,

  /**
   * @generated from enum value: ENUM_LABEL_42 = 42;
   */
  ENUM_LABEL_42 = 42,

  /**
   * @generated from enum value: ENUM_LABEL_43 = 43;
   */
  ENUM_LABEL_43 = 43,

  /**
   * @generated from enum value: ENUM_LABEL_44 = 44;
   */
  ENUM_LABEL_44 = 44,

  /**
   * @generated from enum value: ENUM_LABEL_45 = 45;
   */
  ENUM_LABEL_45 = 45,

  /**
   * @generated from enum value: ENUM_LABEL_46 = 46;
   */
  ENUM_LABEL_46 = 46,

  /**
   * @generated from enum value: ENUM_LABEL_47 = 47;
   */
  ENUM_LABEL_47 = 47,

  /**
   * @generated from enum value: ENUM_LABEL_48 = 48;
   */
  ENUM_LABEL_48 = 48,

  /**
   * @generated from enum value: ENUM_LABEL_49 = 49;
   */
  ENUM_LABEL_49 = 49,

  /**
   * @generated from enum value: ENUM_LABEL_50 = 50;
   */
  ENUM_LABEL_50 = 50,

  /**
   * @generated from enum value: ENUM_LABEL_51 = 51;
   */
  ENUM_LABEL_51 = 51,

  /**
   * @generated from enum value: ENUM_LABEL_52 = 52;
   */
  ENUM_LABEL_52 = 52,

  /**
   * @generated from enum value: ENUM_LABEL_53 = 53;
   */
  ENUM_LABEL_53 = 53,

  /**
   * @generated from enum value: ENUM_LABEL_54 = 54;
   */
  ENUM_LABEL_54 = 54,

  /**
   * @generated from enum value: ENUM_LABEL_55 = 55;
   */
  ENUM_LABEL_55 = 55,

  /**
   * @generated from enum value: ENUM_LABEL_56 = 56;
   */
  ENUM_LABEL_56 = 56,

  /**
   * @generated from enum value: ENUM_LABEL_57 = 57;
   */
  ENUM_LABEL_57 = 57,

  /**
   * @generated from enum value: ENUM_LABEL_58 = 58;
   */
  ENUM_LABEL_58 = 58,

  /**
   * @generated from enum value: ENUM_LABEL_59 = 59;
   */
  ENUM_LABEL_59 = 59,

  /**
   * @generated from enum value: ENUM_LABEL_60 = 60;
   */
  ENUM_LABEL_60 = 60,

  /**
   * @generated from enum value: ENUM_LABEL_61 = 61;
   */
  ENUM_LABEL_61 = 61,

  /**
   * @generated from enum value: ENUM_LABEL_62 = 62;
   */
  ENUM_LABEL_62 = 62,

  /**
   * @generated from enum value: ENUM_LABEL_63 = 63;
   */
  ENUM_LABEL_63 = 63,

  /**
   * @generated from enum value: ENUM_LABEL_64 = 64;
   */
  ENUM_LABEL_64 = 64,

  /**
   * @generated from enum value: ENUM_LABEL_65 = 65;
   */
  ENUM_LABEL_65 = 65,

  /**
   * @generated from enum value: ENUM_LABEL_66 = 66;
   */
  ENUM_LABEL_66 = 66,

  /**
   * @generated from enum value: ENUM_LABEL_67 = 67;
   */
  ENUM_LABEL_67 = 67,

  /**
   * @generated from enum value: ENUM_LABEL_68 = 68;
   */
  ENUM_LABEL_68 = 68,

  /**
   * @generated from enum value: ENUM_LABEL_69 = 69;
   */
  ENUM_LABEL_69 = 69,

  /**
   * @generated from enum value: ENUM_LABEL_70 = 70;
   */
  ENUM_LABEL_70 = 70,

  /**
   * @generated from enum value: ENUM_LABEL_71 = 71;
   */
  ENUM_LABEL_71 = 71,

  /**
   * @generated from enum value: ENUM_LABEL_72 = 72;
   */
  ENUM_LABEL_72 = 72,

  /**
   * @generated from enum value: ENUM_LABEL_73 = 73;
   */
  ENUM_LABEL_73 = 73,

  /**
   * @generated from enum value: ENUM_LABEL_74 = 74;
   */
  ENUM_LABEL_74 = 74,

  /**
   * @generated from enum value: ENUM_LABEL_75 = 75;
   */
  ENUM_LABEL_75 = 75,

  /**
   * @generated from enum value: ENUM_LABEL_76 = 76;
   */
  ENUM_LABEL_76 = 76,

  /**
   * @generated from enum value: ENUM_LABEL_77 = 77;
   */
  ENUM_LABEL_77 = 77,

  /**
   * @generated from enum value: ENUM_LABEL_78 = 78;
   */
  ENUM_LABEL_78 = 78,

  /**
   * @generated from enum value: ENUM_LABEL_79 = 79;
   */
  ENUM_LABEL_79 = 79,

  /**
   * @generated from enum value: ENUM_LABEL_80 = 80;
   */
  ENUM_LABEL_80 = 80,

  /**
   * @generated from enum value: ENUM_LABEL_81 = 81;
   */
  ENUM_LABEL_81 = 81,

  /**
   * @generated from enum value: ENUM_LABEL_82 = 82;
   */
  ENUM_LABEL_82 = 82,

  /**
   * @generated from enum value: ENUM_LABEL_83 = 83;
   */
  ENUM_LABEL_83 = 83,

  /**
   * @generated from enum value: ENUM_LABEL_84 = 84;
   */
  ENUM_LABEL_84 = 84,

  /**
   * @generated from enum value: ENUM_LABEL_85 = 85;
   */
  ENUM_LABEL_85 = 85,

  /**
   * @generated from enum value: ENUM_LABEL_86 = 86;
   */
  ENUM_LABEL_86 = 86,

  /**
   * @generated from enum value: ENUM_LABEL_87 = 87;
   */
  ENUM_LABEL_87 = 87,

  /**
   * @generated from enum value: ENUM_LABEL_88 = 88;
   */
  ENUM_LABEL_88 = 88,

  /**
   * @generated from enum value: ENUM_LABEL_89 = 89;
   */
  ENUM_LABEL_89 = 89,

  /**
   * @generated from enum value: ENUM_LABEL_90 = 90;
   */
  ENUM_LABEL_90 = 90,

  /**
   * @generated from enum value: ENUM_LABEL_91 = 91;
   */
  ENUM_LABEL_91 = 91,

  /**
   * @generated from enum value: ENUM_LABEL_92 = 92;
   */
  ENUM_LABEL_92 = 92,

  /**
   * @generated from enum value: ENUM_LABEL_93 = 93;
   */
  ENUM_LABEL_93 = 93,

  /**
   * @generated from enum value: ENUM_LABEL_94 = 94;
   */
  ENUM_LABEL_94 = 94,

  /**
   * @generated from enum value: ENUM_LABEL_95 = 95;
   */
  ENUM_LABEL_95 = 95,

  /**
   * @generated from enum value: ENUM_LABEL_96 = 96;
   */
  ENUM_LABEL_96 = 96,

  /**
   * @generated from enum value: ENUM_LABEL_97 = 97;
   */
  ENUM_LABEL_97 = 97,

  /**
   * @generated from enum value: ENUM_LABEL_98 = 98;
   */
  ENUM_LABEL_98 = 98,

  /**
   * @generated from enum value: ENUM_LABEL_99 = 99;
   */
  ENUM_LABEL_99 = 99,

  /**
   * @generated from enum value: ENUM_LABEL_100 = 100;
   */
  ENUM_LABEL_100 = 100,
}

/**
 * This proto includes every type of field in both singular and repeated
 * forms.
 *
 * @generated from message protobuf_unittest.TestAllTypes
 */
export declare class TestAllTypes extends Message<TestAllTypes> {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64?: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32?: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64?: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32?: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64?: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32?: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64?: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat?: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble?: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool?: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypes_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessage optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum?: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum?: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum optional_import_enum = 23;
   */
  optionalImportEnum?: ImportEnum;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece?: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord?: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypes_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypes_RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypes_NestedMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessage[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessage repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypes_NestedEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnum[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypes_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32?: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64?: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32?: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64?: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32?: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64?: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32?: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64?: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat?: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble?: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool?: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString?: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum?: TestAllTypes_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
   */
  defaultForeignEnum?: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
   */
  defaultImportEnum?: ImportEnum;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece?: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord?: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypes.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypes_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestAllTypes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypes;

  static equals(a: TestAllTypes | PlainMessage<TestAllTypes> | undefined, b: TestAllTypes | PlainMessage<TestAllTypes> | undefined): boolean;
}

/**
 * @generated from enum protobuf_unittest.TestAllTypes.NestedEnum
 */
export declare enum TestAllTypes_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * Intentionally negative.
   *
   * @generated from enum value: NEG = -1;
   */
  NEG = -1,
}

/**
 * @generated from message protobuf_unittest.TestAllTypes.NestedMessage
 */
export declare class TestAllTypes_NestedMessage extends Message<TestAllTypes_NestedMessage> {
  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb?: number;

  constructor(data?: PartialMessage<TestAllTypes_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypes.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypes_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypes_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypes_NestedMessage;

  static equals(a: TestAllTypes_NestedMessage | PlainMessage<TestAllTypes_NestedMessage> | undefined, b: TestAllTypes_NestedMessage | PlainMessage<TestAllTypes_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllTypes.OptionalGroup
 */
export declare class TestAllTypes_OptionalGroup extends Message<TestAllTypes_OptionalGroup> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypes_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypes.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypes_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypes_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypes_OptionalGroup;

  static equals(a: TestAllTypes_OptionalGroup | PlainMessage<TestAllTypes_OptionalGroup> | undefined, b: TestAllTypes_OptionalGroup | PlainMessage<TestAllTypes_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllTypes.RepeatedGroup
 */
export declare class TestAllTypes_RepeatedGroup extends Message<TestAllTypes_RepeatedGroup> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypes_RepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypes.RepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypes_RepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypes_RepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypes_RepeatedGroup;

  static equals(a: TestAllTypes_RepeatedGroup | PlainMessage<TestAllTypes_RepeatedGroup> | undefined, b: TestAllTypes_RepeatedGroup | PlainMessage<TestAllTypes_RepeatedGroup> | undefined): boolean;
}

/**
 * This proto includes a recursively nested message.
 *
 * @generated from message protobuf_unittest.NestedTestAllTypes
 */
export declare class NestedTestAllTypes extends Message<NestedTestAllTypes> {
  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes child = 1;
   */
  child?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes payload = 2;
   */
  payload?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.NestedTestAllTypes repeated_child = 3;
   */
  repeatedChild: NestedTestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.NestedTestAllTypes lazy_child = 4;
   */
  lazyChild?: NestedTestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes eager_child = 5;
   */
  eagerChild?: TestAllTypes;

  constructor(data?: PartialMessage<NestedTestAllTypes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.NestedTestAllTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NestedTestAllTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NestedTestAllTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NestedTestAllTypes;

  static equals(a: NestedTestAllTypes | PlainMessage<NestedTestAllTypes> | undefined, b: NestedTestAllTypes | PlainMessage<NestedTestAllTypes> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestDeprecatedFields
 */
export declare class TestDeprecatedFields extends Message<TestDeprecatedFields> {
  /**
   * @generated from field: optional int32 deprecated_int32 = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedInt32?: number;

  /**
   * @generated from oneof protobuf_unittest.TestDeprecatedFields.oneof_fields
   */
  oneofFields: {
    /**
     * @generated from field: int32 deprecated_int32_in_oneof = 2 [deprecated = true];
     * @deprecated
     */
    value: number;
    case: "deprecatedInt32InOneof";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestDeprecatedFields>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDeprecatedFields";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDeprecatedFields;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDeprecatedFields;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDeprecatedFields;

  static equals(a: TestDeprecatedFields | PlainMessage<TestDeprecatedFields> | undefined, b: TestDeprecatedFields | PlainMessage<TestDeprecatedFields> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestDeprecatedMessage
 * @deprecated
 */
export declare class TestDeprecatedMessage extends Message<TestDeprecatedMessage> {
  constructor(data?: PartialMessage<TestDeprecatedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDeprecatedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDeprecatedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDeprecatedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDeprecatedMessage;

  static equals(a: TestDeprecatedMessage | PlainMessage<TestDeprecatedMessage> | undefined, b: TestDeprecatedMessage | PlainMessage<TestDeprecatedMessage> | undefined): boolean;
}

/**
 * Define these after TestAllTypes to make sure the compiler can handle
 * that.
 *
 * @generated from message protobuf_unittest.ForeignMessage
 */
export declare class ForeignMessage extends Message<ForeignMessage> {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c?: number;

  /**
   * @generated from field: optional int32 d = 2;
   */
  d?: number;

  constructor(data?: PartialMessage<ForeignMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.ForeignMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForeignMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForeignMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForeignMessage;

  static equals(a: ForeignMessage | PlainMessage<ForeignMessage> | undefined, b: ForeignMessage | PlainMessage<ForeignMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestReservedFields
 */
export declare class TestReservedFields extends Message<TestReservedFields> {
  constructor(data?: PartialMessage<TestReservedFields>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestReservedFields";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReservedFields;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReservedFields;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReservedFields;

  static equals(a: TestReservedFields | PlainMessage<TestReservedFields> | undefined, b: TestReservedFields | PlainMessage<TestReservedFields> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllExtensions
 */
export declare class TestAllExtensions extends Message<TestAllExtensions> {
  constructor(data?: PartialMessage<TestAllExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllExtensions;

  static equals(a: TestAllExtensions | PlainMessage<TestAllExtensions> | undefined, b: TestAllExtensions | PlainMessage<TestAllExtensions> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension
 */
export declare class OptionalGroup_extension extends Message<OptionalGroup_extension> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<OptionalGroup_extension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.OptionalGroup_extension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OptionalGroup_extension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OptionalGroup_extension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OptionalGroup_extension;

  static equals(a: OptionalGroup_extension | PlainMessage<OptionalGroup_extension> | undefined, b: OptionalGroup_extension | PlainMessage<OptionalGroup_extension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension
 */
export declare class RepeatedGroup_extension extends Message<RepeatedGroup_extension> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<RepeatedGroup_extension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.RepeatedGroup_extension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RepeatedGroup_extension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RepeatedGroup_extension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RepeatedGroup_extension;

  static equals(a: RepeatedGroup_extension | PlainMessage<RepeatedGroup_extension> | undefined, b: RepeatedGroup_extension | PlainMessage<RepeatedGroup_extension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestGroup
 */
export declare class TestGroup extends Message<TestGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestGroup.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestGroup_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
   */
  optionalForeignEnum?: ForeignEnum;

  constructor(data?: PartialMessage<TestGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestGroup;

  static equals(a: TestGroup | PlainMessage<TestGroup> | undefined, b: TestGroup | PlainMessage<TestGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestGroup.OptionalGroup
 */
export declare class TestGroup_OptionalGroup extends Message<TestGroup_OptionalGroup> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<TestGroup_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestGroup.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestGroup_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestGroup_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestGroup_OptionalGroup;

  static equals(a: TestGroup_OptionalGroup | PlainMessage<TestGroup_OptionalGroup> | undefined, b: TestGroup_OptionalGroup | PlainMessage<TestGroup_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestGroupExtension
 */
export declare class TestGroupExtension extends Message<TestGroupExtension> {
  constructor(data?: PartialMessage<TestGroupExtension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestGroupExtension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestGroupExtension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestGroupExtension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestGroupExtension;

  static equals(a: TestGroupExtension | PlainMessage<TestGroupExtension> | undefined, b: TestGroupExtension | PlainMessage<TestGroupExtension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedExtension
 */
export declare class TestNestedExtension extends Message<TestNestedExtension> {
  constructor(data?: PartialMessage<TestNestedExtension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedExtension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedExtension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedExtension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedExtension;

  static equals(a: TestNestedExtension | PlainMessage<TestNestedExtension> | undefined, b: TestNestedExtension | PlainMessage<TestNestedExtension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedExtension.OptionalGroup_extension
 */
export declare class TestNestedExtension_OptionalGroup_extension extends Message<TestNestedExtension_OptionalGroup_extension> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<TestNestedExtension_OptionalGroup_extension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedExtension.OptionalGroup_extension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedExtension_OptionalGroup_extension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedExtension_OptionalGroup_extension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedExtension_OptionalGroup_extension;

  static equals(a: TestNestedExtension_OptionalGroup_extension | PlainMessage<TestNestedExtension_OptionalGroup_extension> | undefined, b: TestNestedExtension_OptionalGroup_extension | PlainMessage<TestNestedExtension_OptionalGroup_extension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestChildExtension
 */
export declare class TestChildExtension extends Message<TestChildExtension> {
  /**
   * @generated from field: optional string a = 1;
   */
  a?: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b?: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions optional_extension = 3;
   */
  optionalExtension?: TestAllExtensions;

  constructor(data?: PartialMessage<TestChildExtension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestChildExtension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestChildExtension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestChildExtension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestChildExtension;

  static equals(a: TestChildExtension | PlainMessage<TestChildExtension> | undefined, b: TestChildExtension | PlainMessage<TestChildExtension> | undefined): boolean;
}

/**
 * Emulates wireformat data of TestChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestChildExtensionData
 */
export declare class TestChildExtensionData extends Message<TestChildExtensionData> {
  /**
   * @generated from field: optional string a = 1;
   */
  a?: string;

  /**
   * @generated from field: optional string b = 2;
   */
  b?: string;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
   */
  optionalExtension?: TestChildExtensionData_NestedTestAllExtensionsData;

  constructor(data?: PartialMessage<TestChildExtensionData>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestChildExtensionData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestChildExtensionData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestChildExtensionData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestChildExtensionData;

  static equals(a: TestChildExtensionData | PlainMessage<TestChildExtensionData> | undefined, b: TestChildExtensionData | PlainMessage<TestChildExtensionData> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData
 */
export declare class TestChildExtensionData_NestedTestAllExtensionsData extends Message<TestChildExtensionData_NestedTestAllExtensionsData> {
  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
   */
  dynamic?: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;

  constructor(data?: PartialMessage<TestChildExtensionData_NestedTestAllExtensionsData>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData;

  static equals(a: TestChildExtensionData_NestedTestAllExtensionsData | PlainMessage<TestChildExtensionData_NestedTestAllExtensionsData> | undefined, b: TestChildExtensionData_NestedTestAllExtensionsData | PlainMessage<TestChildExtensionData_NestedTestAllExtensionsData> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions
 */
export declare class TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions extends Message<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions> {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  /**
   * @generated from field: optional int32 b = 2;
   */
  b?: number;

  constructor(data?: PartialMessage<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions;

  static equals(a: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions | PlainMessage<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions> | undefined, b: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions | PlainMessage<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedChildExtension
 */
export declare class TestNestedChildExtension extends Message<TestNestedChildExtension> {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtension child = 2;
   */
  child?: TestChildExtension;

  constructor(data?: PartialMessage<TestNestedChildExtension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedChildExtension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedChildExtension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedChildExtension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedChildExtension;

  static equals(a: TestNestedChildExtension | PlainMessage<TestNestedChildExtension> | undefined, b: TestNestedChildExtension | PlainMessage<TestNestedChildExtension> | undefined): boolean;
}

/**
 * Emulates wireformat data of TestNestedChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestNestedChildExtensionData
 */
export declare class TestNestedChildExtensionData extends Message<TestNestedChildExtensionData> {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestChildExtensionData child = 2;
   */
  child?: TestChildExtensionData;

  constructor(data?: PartialMessage<TestNestedChildExtensionData>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedChildExtensionData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedChildExtensionData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedChildExtensionData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedChildExtensionData;

  static equals(a: TestNestedChildExtensionData | PlainMessage<TestNestedChildExtensionData> | undefined, b: TestNestedChildExtensionData | PlainMessage<TestNestedChildExtensionData> | undefined): boolean;
}

/**
 * We have separate messages for testing required fields because it's
 * annoying to have to fill in required fields in TestProto in order to
 * do anything with it.  Note that we don't need to test every type of
 * required filed because the code output is basically identical to
 * optional fields for all types.
 *
 * @generated from message protobuf_unittest.TestRequired
 */
export declare class TestRequired extends Message<TestRequired> {
  /**
   * @generated from field: required int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional int32 dummy2 = 2;
   */
  dummy2?: number;

  /**
   * @generated from field: required int32 b = 3;
   */
  b: number;

  /**
   * Pad the field count to 32 so that we can test that IsInitialized()
   * properly checks multiple elements of has_bits_.
   *
   * @generated from field: optional int32 dummy4 = 4;
   */
  dummy4?: number;

  /**
   * @generated from field: optional int32 dummy5 = 5;
   */
  dummy5?: number;

  /**
   * @generated from field: optional int32 dummy6 = 6;
   */
  dummy6?: number;

  /**
   * @generated from field: optional int32 dummy7 = 7;
   */
  dummy7?: number;

  /**
   * @generated from field: optional int32 dummy8 = 8;
   */
  dummy8?: number;

  /**
   * @generated from field: optional int32 dummy9 = 9;
   */
  dummy9?: number;

  /**
   * @generated from field: optional int32 dummy10 = 10;
   */
  dummy10?: number;

  /**
   * @generated from field: optional int32 dummy11 = 11;
   */
  dummy11?: number;

  /**
   * @generated from field: optional int32 dummy12 = 12;
   */
  dummy12?: number;

  /**
   * @generated from field: optional int32 dummy13 = 13;
   */
  dummy13?: number;

  /**
   * @generated from field: optional int32 dummy14 = 14;
   */
  dummy14?: number;

  /**
   * @generated from field: optional int32 dummy15 = 15;
   */
  dummy15?: number;

  /**
   * @generated from field: optional int32 dummy16 = 16;
   */
  dummy16?: number;

  /**
   * @generated from field: optional int32 dummy17 = 17;
   */
  dummy17?: number;

  /**
   * @generated from field: optional int32 dummy18 = 18;
   */
  dummy18?: number;

  /**
   * @generated from field: optional int32 dummy19 = 19;
   */
  dummy19?: number;

  /**
   * @generated from field: optional int32 dummy20 = 20;
   */
  dummy20?: number;

  /**
   * @generated from field: optional int32 dummy21 = 21;
   */
  dummy21?: number;

  /**
   * @generated from field: optional int32 dummy22 = 22;
   */
  dummy22?: number;

  /**
   * @generated from field: optional int32 dummy23 = 23;
   */
  dummy23?: number;

  /**
   * @generated from field: optional int32 dummy24 = 24;
   */
  dummy24?: number;

  /**
   * @generated from field: optional int32 dummy25 = 25;
   */
  dummy25?: number;

  /**
   * @generated from field: optional int32 dummy26 = 26;
   */
  dummy26?: number;

  /**
   * @generated from field: optional int32 dummy27 = 27;
   */
  dummy27?: number;

  /**
   * @generated from field: optional int32 dummy28 = 28;
   */
  dummy28?: number;

  /**
   * @generated from field: optional int32 dummy29 = 29;
   */
  dummy29?: number;

  /**
   * @generated from field: optional int32 dummy30 = 30;
   */
  dummy30?: number;

  /**
   * @generated from field: optional int32 dummy31 = 31;
   */
  dummy31?: number;

  /**
   * @generated from field: optional int32 dummy32 = 32;
   */
  dummy32?: number;

  /**
   * @generated from field: required int32 c = 33;
   */
  c: number;

  /**
   * Add an optional child message to make this non-trivial for go/pdlazy.
   *
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_foreign = 34;
   */
  optionalForeign?: ForeignMessage;

  constructor(data?: PartialMessage<TestRequired>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRequired";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequired;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequired;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequired;

  static equals(a: TestRequired | PlainMessage<TestRequired> | undefined, b: TestRequired | PlainMessage<TestRequired> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRequiredForeign
 */
export declare class TestRequiredForeign extends Message<TestRequiredForeign> {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy?: number;

  constructor(data?: PartialMessage<TestRequiredForeign>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRequiredForeign";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequiredForeign;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequiredForeign;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequiredForeign;

  static equals(a: TestRequiredForeign | PlainMessage<TestRequiredForeign> | undefined, b: TestRequiredForeign | PlainMessage<TestRequiredForeign> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRequiredMessage
 */
export declare class TestRequiredMessage extends Message<TestRequiredMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestRequired optional_message = 1;
   */
  optionalMessage?: TestRequired;

  /**
   * @generated from field: repeated protobuf_unittest.TestRequired repeated_message = 2;
   */
  repeatedMessage: TestRequired[];

  /**
   * @generated from field: required protobuf_unittest.TestRequired required_message = 3;
   */
  requiredMessage?: TestRequired;

  constructor(data?: PartialMessage<TestRequiredMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRequiredMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequiredMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequiredMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequiredMessage;

  static equals(a: TestRequiredMessage | PlainMessage<TestRequiredMessage> | undefined, b: TestRequiredMessage | PlainMessage<TestRequiredMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedRequiredForeign
 */
export declare class TestNestedRequiredForeign extends Message<TestNestedRequiredForeign> {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedRequiredForeign child = 1;
   */
  child?: TestNestedRequiredForeign;

  /**
   * @generated from field: optional protobuf_unittest.TestRequiredForeign payload = 2;
   */
  payload?: TestRequiredForeign;

  /**
   * @generated from field: optional int32 dummy = 3;
   */
  dummy?: number;

  constructor(data?: PartialMessage<TestNestedRequiredForeign>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedRequiredForeign";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedRequiredForeign;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedRequiredForeign;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedRequiredForeign;

  static equals(a: TestNestedRequiredForeign | PlainMessage<TestNestedRequiredForeign> | undefined, b: TestNestedRequiredForeign | PlainMessage<TestNestedRequiredForeign> | undefined): boolean;
}

/**
 * Test that we can use NestedMessage from outside TestAllTypes.
 *
 * @generated from message protobuf_unittest.TestForeignNested
 */
export declare class TestForeignNested extends Message<TestForeignNested> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
   */
  foreignNested?: TestAllTypes_NestedMessage;

  constructor(data?: PartialMessage<TestForeignNested>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestForeignNested";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestForeignNested;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestForeignNested;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestForeignNested;

  static equals(a: TestForeignNested | PlainMessage<TestForeignNested> | undefined, b: TestForeignNested | PlainMessage<TestForeignNested> | undefined): boolean;
}

/**
 * TestEmptyMessage is used to test unknown field support.
 *
 * @generated from message protobuf_unittest.TestEmptyMessage
 */
export declare class TestEmptyMessage extends Message<TestEmptyMessage> {
  constructor(data?: PartialMessage<TestEmptyMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessage;

  static equals(a: TestEmptyMessage | PlainMessage<TestEmptyMessage> | undefined, b: TestEmptyMessage | PlainMessage<TestEmptyMessage> | undefined): boolean;
}

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensions
 */
export declare class TestEmptyMessageWithExtensions extends Message<TestEmptyMessageWithExtensions> {
  constructor(data?: PartialMessage<TestEmptyMessageWithExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessageWithExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessageWithExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensions;

  static equals(a: TestEmptyMessageWithExtensions | PlainMessage<TestEmptyMessageWithExtensions> | undefined, b: TestEmptyMessageWithExtensions | PlainMessage<TestEmptyMessageWithExtensions> | undefined): boolean;
}

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestPickleNestedMessage
 */
export declare class TestPickleNestedMessage extends Message<TestPickleNestedMessage> {
  constructor(data?: PartialMessage<TestPickleNestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPickleNestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPickleNestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPickleNestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPickleNestedMessage;

  static equals(a: TestPickleNestedMessage | PlainMessage<TestPickleNestedMessage> | undefined, b: TestPickleNestedMessage | PlainMessage<TestPickleNestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage
 */
export declare class TestPickleNestedMessage_NestedMessage extends Message<TestPickleNestedMessage_NestedMessage> {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb?: number;

  constructor(data?: PartialMessage<TestPickleNestedMessage_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPickleNestedMessage.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPickleNestedMessage_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPickleNestedMessage_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPickleNestedMessage_NestedMessage;

  static equals(a: TestPickleNestedMessage_NestedMessage | PlainMessage<TestPickleNestedMessage_NestedMessage> | undefined, b: TestPickleNestedMessage_NestedMessage | PlainMessage<TestPickleNestedMessage_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage
 */
export declare class TestPickleNestedMessage_NestedMessage_NestedNestedMessage extends Message<TestPickleNestedMessage_NestedMessage_NestedNestedMessage> {
  /**
   * @generated from field: optional int32 cc = 1;
   */
  cc?: number;

  constructor(data?: PartialMessage<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPickleNestedMessage_NestedMessage_NestedNestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPickleNestedMessage_NestedMessage_NestedNestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPickleNestedMessage_NestedMessage_NestedNestedMessage;

  static equals(a: TestPickleNestedMessage_NestedMessage_NestedNestedMessage | PlainMessage<TestPickleNestedMessage_NestedMessage_NestedNestedMessage> | undefined, b: TestPickleNestedMessage_NestedMessage_NestedNestedMessage | PlainMessage<TestPickleNestedMessage_NestedMessage_NestedNestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestMultipleExtensionRanges
 */
export declare class TestMultipleExtensionRanges extends Message<TestMultipleExtensionRanges> {
  constructor(data?: PartialMessage<TestMultipleExtensionRanges>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMultipleExtensionRanges";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMultipleExtensionRanges;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMultipleExtensionRanges;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMultipleExtensionRanges;

  static equals(a: TestMultipleExtensionRanges | PlainMessage<TestMultipleExtensionRanges> | undefined, b: TestMultipleExtensionRanges | PlainMessage<TestMultipleExtensionRanges> | undefined): boolean;
}

/**
 * Test that really large tag numbers don't break anything.
 *
 * @generated from message protobuf_unittest.TestReallyLargeTagNumber
 */
export declare class TestReallyLargeTagNumber extends Message<TestReallyLargeTagNumber> {
  /**
   * The largest possible tag number is 2^28 - 1, since the wire format uses
   * three bits to communicate wire type.
   *
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  /**
   * @generated from field: optional int32 bb = 268435455;
   */
  bb?: number;

  constructor(data?: PartialMessage<TestReallyLargeTagNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestReallyLargeTagNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReallyLargeTagNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReallyLargeTagNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReallyLargeTagNumber;

  static equals(a: TestReallyLargeTagNumber | PlainMessage<TestReallyLargeTagNumber> | undefined, b: TestReallyLargeTagNumber | PlainMessage<TestReallyLargeTagNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRecursiveMessage
 */
export declare class TestRecursiveMessage extends Message<TestRecursiveMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestRecursiveMessage a = 1;
   */
  a?: TestRecursiveMessage;

  /**
   * @generated from field: optional int32 i = 2;
   */
  i?: number;

  constructor(data?: PartialMessage<TestRecursiveMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRecursiveMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRecursiveMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRecursiveMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRecursiveMessage;

  static equals(a: TestRecursiveMessage | PlainMessage<TestRecursiveMessage> | undefined, b: TestRecursiveMessage | PlainMessage<TestRecursiveMessage> | undefined): boolean;
}

/**
 * Test that mutual recursion works.
 *
 * @generated from message protobuf_unittest.TestMutualRecursionA
 */
export declare class TestMutualRecursionA extends Message<TestMutualRecursionA> {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB bb = 1;
   */
  bb?: TestMutualRecursionB;

  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubGroup subgroup = 2;
   */
  subgroup?: TestMutualRecursionA_SubGroup;

  constructor(data?: PartialMessage<TestMutualRecursionA>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMutualRecursionA";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMutualRecursionA;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMutualRecursionA;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMutualRecursionA;

  static equals(a: TestMutualRecursionA | PlainMessage<TestMutualRecursionA> | undefined, b: TestMutualRecursionA | PlainMessage<TestMutualRecursionA> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubMessage
 */
export declare class TestMutualRecursionA_SubMessage extends Message<TestMutualRecursionA_SubMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionB b = 1;
   */
  b?: TestMutualRecursionB;

  constructor(data?: PartialMessage<TestMutualRecursionA_SubMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMutualRecursionA.SubMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMutualRecursionA_SubMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMutualRecursionA_SubMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMutualRecursionA_SubMessage;

  static equals(a: TestMutualRecursionA_SubMessage | PlainMessage<TestMutualRecursionA_SubMessage> | undefined, b: TestMutualRecursionA_SubMessage | PlainMessage<TestMutualRecursionA_SubMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroup
 */
export declare class TestMutualRecursionA_SubGroup extends Message<TestMutualRecursionA_SubGroup> {
  /**
   * Needed because of bug in javatest
   *
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
   */
  subMessage?: TestMutualRecursionA_SubMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes not_in_this_scc = 4;
   */
  notInThisScc?: TestAllTypes;

  constructor(data?: PartialMessage<TestMutualRecursionA_SubGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMutualRecursionA.SubGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMutualRecursionA_SubGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMutualRecursionA_SubGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMutualRecursionA_SubGroup;

  static equals(a: TestMutualRecursionA_SubGroup | PlainMessage<TestMutualRecursionA_SubGroup> | undefined, b: TestMutualRecursionA_SubGroup | PlainMessage<TestMutualRecursionA_SubGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestMutualRecursionB
 */
export declare class TestMutualRecursionB extends Message<TestMutualRecursionB> {
  /**
   * @generated from field: optional protobuf_unittest.TestMutualRecursionA a = 1;
   */
  a?: TestMutualRecursionA;

  /**
   * @generated from field: optional int32 optional_int32 = 2;
   */
  optionalInt32?: number;

  constructor(data?: PartialMessage<TestMutualRecursionB>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMutualRecursionB";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMutualRecursionB;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMutualRecursionB;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMutualRecursionB;

  static equals(a: TestMutualRecursionB | PlainMessage<TestMutualRecursionB> | undefined, b: TestMutualRecursionB | PlainMessage<TestMutualRecursionB> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestIsInitialized
 */
export declare class TestIsInitialized extends Message<TestIsInitialized> {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
   */
  subMessage?: TestIsInitialized_SubMessage;

  constructor(data?: PartialMessage<TestIsInitialized>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestIsInitialized";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestIsInitialized;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestIsInitialized;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestIsInitialized;

  static equals(a: TestIsInitialized | PlainMessage<TestIsInitialized> | undefined, b: TestIsInitialized | PlainMessage<TestIsInitialized> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage
 */
export declare class TestIsInitialized_SubMessage extends Message<TestIsInitialized_SubMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestIsInitialized.SubMessage.SubGroup subgroup = 1;
   */
  subgroup?: TestIsInitialized_SubMessage_SubGroup;

  constructor(data?: PartialMessage<TestIsInitialized_SubMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestIsInitialized.SubMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestIsInitialized_SubMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestIsInitialized_SubMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestIsInitialized_SubMessage;

  static equals(a: TestIsInitialized_SubMessage | PlainMessage<TestIsInitialized_SubMessage> | undefined, b: TestIsInitialized_SubMessage | PlainMessage<TestIsInitialized_SubMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup
 */
export declare class TestIsInitialized_SubMessage_SubGroup extends Message<TestIsInitialized_SubMessage_SubGroup> {
  /**
   * @generated from field: required int32 i = 2;
   */
  i: number;

  constructor(data?: PartialMessage<TestIsInitialized_SubMessage_SubGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestIsInitialized.SubMessage.SubGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestIsInitialized_SubMessage_SubGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestIsInitialized_SubMessage_SubGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestIsInitialized_SubMessage_SubGroup;

  static equals(a: TestIsInitialized_SubMessage_SubGroup | PlainMessage<TestIsInitialized_SubMessage_SubGroup> | undefined, b: TestIsInitialized_SubMessage_SubGroup | PlainMessage<TestIsInitialized_SubMessage_SubGroup> | undefined): boolean;
}

/**
 * Test that groups have disjoint field numbers from their siblings and
 * parents.  This is NOT possible in proto1; only google.protobuf.  When attempting
 * to compile with proto1, this will emit an error; so we only include it
 * in protobuf_unittest_proto.
 *
 * NO_PROTO1
 *
 * @generated from message protobuf_unittest.TestDupFieldNumber
 */
export declare class TestDupFieldNumber extends Message<TestDupFieldNumber> {
  /**
   * NO_PROTO1
   *
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Foo foo = 2;
   */
  foo?: TestDupFieldNumber_Foo;

  /**
   * @generated from field: optional protobuf_unittest.TestDupFieldNumber.Bar bar = 3;
   */
  bar?: TestDupFieldNumber_Bar;

  constructor(data?: PartialMessage<TestDupFieldNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDupFieldNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDupFieldNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDupFieldNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDupFieldNumber;

  static equals(a: TestDupFieldNumber | PlainMessage<TestDupFieldNumber> | undefined, b: TestDupFieldNumber | PlainMessage<TestDupFieldNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Foo
 */
export declare class TestDupFieldNumber_Foo extends Message<TestDupFieldNumber_Foo> {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  constructor(data?: PartialMessage<TestDupFieldNumber_Foo>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDupFieldNumber.Foo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDupFieldNumber_Foo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDupFieldNumber_Foo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDupFieldNumber_Foo;

  static equals(a: TestDupFieldNumber_Foo | PlainMessage<TestDupFieldNumber_Foo> | undefined, b: TestDupFieldNumber_Foo | PlainMessage<TestDupFieldNumber_Foo> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Bar
 */
export declare class TestDupFieldNumber_Bar extends Message<TestDupFieldNumber_Bar> {
  /**
   * @generated from field: optional int32 a = 1;
   */
  a?: number;

  constructor(data?: PartialMessage<TestDupFieldNumber_Bar>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDupFieldNumber.Bar";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDupFieldNumber_Bar;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDupFieldNumber_Bar;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDupFieldNumber_Bar;

  static equals(a: TestDupFieldNumber_Bar | PlainMessage<TestDupFieldNumber_Bar> | undefined, b: TestDupFieldNumber_Bar | PlainMessage<TestDupFieldNumber_Bar> | undefined): boolean;
}

/**
 * Additional messages for testing lazy fields.
 *
 * @generated from message protobuf_unittest.TestEagerMessage
 */
export declare class TestEagerMessage extends Message<TestEagerMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;

  constructor(data?: PartialMessage<TestEagerMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEagerMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEagerMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEagerMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEagerMessage;

  static equals(a: TestEagerMessage | PlainMessage<TestEagerMessage> | undefined, b: TestEagerMessage | PlainMessage<TestEagerMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestLazyMessage
 */
export declare class TestLazyMessage extends Message<TestLazyMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes sub_message = 1;
   */
  subMessage?: TestAllTypes;

  constructor(data?: PartialMessage<TestLazyMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestLazyMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestLazyMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestLazyMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestLazyMessage;

  static equals(a: TestLazyMessage | PlainMessage<TestLazyMessage> | undefined, b: TestLazyMessage | PlainMessage<TestLazyMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy
 */
export declare class TestEagerMaybeLazy extends Message<TestEagerMaybeLazy> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_foo = 1;
   */
  messageFoo?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes message_bar = 2;
   */
  messageBar?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
   */
  messageBaz?: TestEagerMaybeLazy_NestedMessage;

  constructor(data?: PartialMessage<TestEagerMaybeLazy>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEagerMaybeLazy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEagerMaybeLazy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEagerMaybeLazy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEagerMaybeLazy;

  static equals(a: TestEagerMaybeLazy | PlainMessage<TestEagerMaybeLazy> | undefined, b: TestEagerMaybeLazy | PlainMessage<TestEagerMaybeLazy> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy.NestedMessage
 */
export declare class TestEagerMaybeLazy_NestedMessage extends Message<TestEagerMaybeLazy_NestedMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestPackedTypes packed = 1;
   */
  packed?: TestPackedTypes;

  constructor(data?: PartialMessage<TestEagerMaybeLazy_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEagerMaybeLazy.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEagerMaybeLazy_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEagerMaybeLazy_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEagerMaybeLazy_NestedMessage;

  static equals(a: TestEagerMaybeLazy_NestedMessage | PlainMessage<TestEagerMaybeLazy_NestedMessage> | undefined, b: TestEagerMaybeLazy_NestedMessage | PlainMessage<TestEagerMaybeLazy_NestedMessage> | undefined): boolean;
}

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestNestedMessageHasBits
 */
export declare class TestNestedMessageHasBits extends Message<TestNestedMessageHasBits> {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
   */
  optionalNestedMessage?: TestNestedMessageHasBits_NestedMessage;

  constructor(data?: PartialMessage<TestNestedMessageHasBits>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedMessageHasBits";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedMessageHasBits;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedMessageHasBits;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedMessageHasBits;

  static equals(a: TestNestedMessageHasBits | PlainMessage<TestNestedMessageHasBits> | undefined, b: TestNestedMessageHasBits | PlainMessage<TestNestedMessageHasBits> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedMessageHasBits.NestedMessage
 */
export declare class TestNestedMessageHasBits_NestedMessage extends Message<TestNestedMessageHasBits_NestedMessage> {
  /**
   * @generated from field: repeated int32 nestedmessage_repeated_int32 = 1;
   */
  nestedmessageRepeatedInt32: number[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
   */
  nestedmessageRepeatedForeignmessage: ForeignMessage[];

  constructor(data?: PartialMessage<TestNestedMessageHasBits_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedMessageHasBits.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedMessageHasBits_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedMessageHasBits_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedMessageHasBits_NestedMessage;

  static equals(a: TestNestedMessageHasBits_NestedMessage | PlainMessage<TestNestedMessageHasBits_NestedMessage> | undefined, b: TestNestedMessageHasBits_NestedMessage | PlainMessage<TestNestedMessageHasBits_NestedMessage> | undefined): boolean;
}

/**
 * Test message with CamelCase field names.  This violates Protocol Buffer
 * standard style.
 *
 * @generated from message protobuf_unittest.TestCamelCaseFieldNames
 */
export declare class TestCamelCaseFieldNames extends Message<TestCamelCaseFieldNames> {
  /**
   * @generated from field: optional int32 PrimitiveField = 1;
   */
  PrimitiveField?: number;

  /**
   * @generated from field: optional string StringField = 2;
   */
  StringField?: string;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum EnumField = 3;
   */
  EnumField?: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage MessageField = 4;
   */
  MessageField?: ForeignMessage;

  /**
   * @generated from field: optional string StringPieceField = 5;
   */
  StringPieceField?: string;

  /**
   * @generated from field: optional string CordField = 6;
   */
  CordField?: string;

  /**
   * @generated from field: repeated int32 RepeatedPrimitiveField = 7;
   */
  RepeatedPrimitiveField: number[];

  /**
   * @generated from field: repeated string RepeatedStringField = 8;
   */
  RepeatedStringField: string[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
   */
  RepeatedEnumField: ForeignEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
   */
  RepeatedMessageField: ForeignMessage[];

  /**
   * @generated from field: repeated string RepeatedStringPieceField = 11;
   */
  RepeatedStringPieceField: string[];

  /**
   * @generated from field: repeated string RepeatedCordField = 12;
   */
  RepeatedCordField: string[];

  constructor(data?: PartialMessage<TestCamelCaseFieldNames>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestCamelCaseFieldNames";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestCamelCaseFieldNames;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestCamelCaseFieldNames;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestCamelCaseFieldNames;

  static equals(a: TestCamelCaseFieldNames | PlainMessage<TestCamelCaseFieldNames> | undefined, b: TestCamelCaseFieldNames | PlainMessage<TestCamelCaseFieldNames> | undefined): boolean;
}

/**
 * We list fields out of order, to ensure that we're using field number and not
 * field index to determine serialization order.
 *
 * @generated from message protobuf_unittest.TestFieldOrderings
 */
export declare class TestFieldOrderings extends Message<TestFieldOrderings> {
  /**
   * @generated from field: optional string my_string = 11;
   */
  myString?: string;

  /**
   * @generated from field: optional int64 my_int = 1;
   */
  myInt?: bigint;

  /**
   * @generated from field: optional float my_float = 101;
   */
  myFloat?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
   */
  optionalNestedMessage?: TestFieldOrderings_NestedMessage;

  constructor(data?: PartialMessage<TestFieldOrderings>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestFieldOrderings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestFieldOrderings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestFieldOrderings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestFieldOrderings;

  static equals(a: TestFieldOrderings | PlainMessage<TestFieldOrderings> | undefined, b: TestFieldOrderings | PlainMessage<TestFieldOrderings> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestFieldOrderings.NestedMessage
 */
export declare class TestFieldOrderings_NestedMessage extends Message<TestFieldOrderings_NestedMessage> {
  /**
   * @generated from field: optional int64 oo = 2;
   */
  oo?: bigint;

  /**
   * The field name "b" fails to compile in proto1 because it conflicts with
   * a local variable named "b" in one of the generated methods.  Doh.
   * This file needs to compile in proto1 to test backwards-compatibility.
   *
   * @generated from field: optional int32 bb = 1;
   */
  bb?: number;

  constructor(data?: PartialMessage<TestFieldOrderings_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestFieldOrderings.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestFieldOrderings_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestFieldOrderings_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestFieldOrderings_NestedMessage;

  static equals(a: TestFieldOrderings_NestedMessage | PlainMessage<TestFieldOrderings_NestedMessage> | undefined, b: TestFieldOrderings_NestedMessage | PlainMessage<TestFieldOrderings_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings1
 */
export declare class TestExtensionOrderings1 extends Message<TestExtensionOrderings1> {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString?: string;

  constructor(data?: PartialMessage<TestExtensionOrderings1>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtensionOrderings1";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtensionOrderings1;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtensionOrderings1;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtensionOrderings1;

  static equals(a: TestExtensionOrderings1 | PlainMessage<TestExtensionOrderings1> | undefined, b: TestExtensionOrderings1 | PlainMessage<TestExtensionOrderings1> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2
 */
export declare class TestExtensionOrderings2 extends Message<TestExtensionOrderings2> {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString?: string;

  constructor(data?: PartialMessage<TestExtensionOrderings2>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtensionOrderings2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtensionOrderings2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtensionOrderings2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtensionOrderings2;

  static equals(a: TestExtensionOrderings2 | PlainMessage<TestExtensionOrderings2> | undefined, b: TestExtensionOrderings2 | PlainMessage<TestExtensionOrderings2> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3
 */
export declare class TestExtensionOrderings2_TestExtensionOrderings3 extends Message<TestExtensionOrderings2_TestExtensionOrderings3> {
  /**
   * @generated from field: optional string my_string = 1;
   */
  myString?: string;

  constructor(data?: PartialMessage<TestExtensionOrderings2_TestExtensionOrderings3>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtensionOrderings2_TestExtensionOrderings3;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtensionOrderings2_TestExtensionOrderings3;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtensionOrderings2_TestExtensionOrderings3;

  static equals(a: TestExtensionOrderings2_TestExtensionOrderings3 | PlainMessage<TestExtensionOrderings2_TestExtensionOrderings3> | undefined, b: TestExtensionOrderings2_TestExtensionOrderings3 | PlainMessage<TestExtensionOrderings2_TestExtensionOrderings3> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtremeDefaultValues
 */
export declare class TestExtremeDefaultValues extends Message<TestExtremeDefaultValues> {
  /**
   * @generated from field: optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\\"\376"];
   */
  escapedBytes?: Uint8Array;

  /**
   * @generated from field: optional uint32 large_uint32 = 2 [default = 4294967295];
   */
  largeUint32?: number;

  /**
   * @generated from field: optional uint64 large_uint64 = 3 [default = 18446744073709551615];
   */
  largeUint64?: bigint;

  /**
   * @generated from field: optional int32 small_int32 = 4 [default = -2147483647];
   */
  smallInt32?: number;

  /**
   * @generated from field: optional int64 small_int64 = 5 [default = -9223372036854775807];
   */
  smallInt64?: bigint;

  /**
   * @generated from field: optional int32 really_small_int32 = 21 [default = -2147483648];
   */
  reallySmallInt32?: number;

  /**
   * @generated from field: optional int64 really_small_int64 = 22 [default = -9223372036854775808];
   */
  reallySmallInt64?: bigint;

  /**
   * The default value here is UTF-8 for "\u1234".  (We could also just type
   * the UTF-8 text directly into this text file rather than escape it, but
   * lots of people use editors that would be confused by this.)
   *
   * @generated from field: optional string utf8_string = 6 [default = "ሴ"];
   */
  utf8String?: string;

  /**
   * Tests for single-precision floating-point values.
   *
   * @generated from field: optional float zero_float = 7 [default = 0];
   */
  zeroFloat?: number;

  /**
   * @generated from field: optional float one_float = 8 [default = 1];
   */
  oneFloat?: number;

  /**
   * @generated from field: optional float small_float = 9 [default = 1.5];
   */
  smallFloat?: number;

  /**
   * @generated from field: optional float negative_one_float = 10 [default = -1];
   */
  negativeOneFloat?: number;

  /**
   * @generated from field: optional float negative_float = 11 [default = -1.5];
   */
  negativeFloat?: number;

  /**
   * Using exponents
   *
   * @generated from field: optional float large_float = 12 [default = 2e+08];
   */
  largeFloat?: number;

  /**
   * @generated from field: optional float small_negative_float = 13 [default = -8e-28];
   */
  smallNegativeFloat?: number;

  /**
   * Text for nonfinite floating-point values.
   *
   * @generated from field: optional double inf_double = 14 [default = inf];
   */
  infDouble?: number;

  /**
   * @generated from field: optional double neg_inf_double = 15 [default = -inf];
   */
  negInfDouble?: number;

  /**
   * @generated from field: optional double nan_double = 16 [default = nan];
   */
  nanDouble?: number;

  /**
   * @generated from field: optional float inf_float = 17 [default = inf];
   */
  infFloat?: number;

  /**
   * @generated from field: optional float neg_inf_float = 18 [default = -inf];
   */
  negInfFloat?: number;

  /**
   * @generated from field: optional float nan_float = 19 [default = nan];
   */
  nanFloat?: number;

  /**
   * Tests for C++ trigraphs.
   * Trigraphs should be escaped in C++ generated files, but they should not be
   * escaped for other languages.
   * Note that in .proto file, "\?" is a valid way to escape ? in string
   * literals.
   *
   * @generated from field: optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
   */
  cppTrigraph?: string;

  /**
   * String defaults containing the character '\000'
   *
   * @generated from field: optional string string_with_zero = 23 [default = "hel lo"];
   */
  stringWithZero?: string;

  /**
   * @generated from field: optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
   */
  bytesWithZero?: Uint8Array;

  /**
   * @generated from field: optional string string_piece_with_zero = 25 [default = "ab c"];
   */
  stringPieceWithZero?: string;

  /**
   * @generated from field: optional string cord_with_zero = 26 [default = "12 3"];
   */
  cordWithZero?: string;

  /**
   * @generated from field: optional string replacement_string = 27 [default = "${unknown}"];
   */
  replacementString?: string;

  constructor(data?: PartialMessage<TestExtremeDefaultValues>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtremeDefaultValues";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtremeDefaultValues;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtremeDefaultValues;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtremeDefaultValues;

  static equals(a: TestExtremeDefaultValues | PlainMessage<TestExtremeDefaultValues> | undefined, b: TestExtremeDefaultValues | PlainMessage<TestExtremeDefaultValues> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.SparseEnumMessage
 */
export declare class SparseEnumMessage extends Message<SparseEnumMessage> {
  /**
   * @generated from field: optional protobuf_unittest.TestSparseEnum sparse_enum = 1;
   */
  sparseEnum?: TestSparseEnum;

  constructor(data?: PartialMessage<SparseEnumMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.SparseEnumMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SparseEnumMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SparseEnumMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SparseEnumMessage;

  static equals(a: SparseEnumMessage | PlainMessage<SparseEnumMessage> | undefined, b: SparseEnumMessage | PlainMessage<SparseEnumMessage> | undefined): boolean;
}

/**
 * Test String and Bytes: string is for valid UTF-8 strings
 *
 * @generated from message protobuf_unittest.OneString
 */
export declare class OneString extends Message<OneString> {
  /**
   * @generated from field: optional string data = 1;
   */
  data?: string;

  constructor(data?: PartialMessage<OneString>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.OneString";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OneString;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OneString;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OneString;

  static equals(a: OneString | PlainMessage<OneString> | undefined, b: OneString | PlainMessage<OneString> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.MoreString
 */
export declare class MoreString extends Message<MoreString> {
  /**
   * @generated from field: repeated string data = 1;
   */
  data: string[];

  constructor(data?: PartialMessage<MoreString>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.MoreString";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoreString;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoreString;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoreString;

  static equals(a: MoreString | PlainMessage<MoreString> | undefined, b: MoreString | PlainMessage<MoreString> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.OneBytes
 */
export declare class OneBytes extends Message<OneBytes> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<OneBytes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.OneBytes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OneBytes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OneBytes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OneBytes;

  static equals(a: OneBytes | PlainMessage<OneBytes> | undefined, b: OneBytes | PlainMessage<OneBytes> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.MoreBytes
 */
export declare class MoreBytes extends Message<MoreBytes> {
  /**
   * @generated from field: repeated bytes data = 1;
   */
  data: Uint8Array[];

  constructor(data?: PartialMessage<MoreBytes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.MoreBytes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoreBytes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoreBytes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoreBytes;

  static equals(a: MoreBytes | PlainMessage<MoreBytes> | undefined, b: MoreBytes | PlainMessage<MoreBytes> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.ManyOptionalString
 */
export declare class ManyOptionalString extends Message<ManyOptionalString> {
  /**
   * @generated from field: optional string str1 = 1;
   */
  str1?: string;

  /**
   * @generated from field: optional string str2 = 2;
   */
  str2?: string;

  /**
   * @generated from field: optional string str3 = 3;
   */
  str3?: string;

  /**
   * @generated from field: optional string str4 = 4;
   */
  str4?: string;

  /**
   * @generated from field: optional string str5 = 5;
   */
  str5?: string;

  /**
   * @generated from field: optional string str6 = 6;
   */
  str6?: string;

  /**
   * @generated from field: optional string str7 = 7;
   */
  str7?: string;

  /**
   * @generated from field: optional string str8 = 8;
   */
  str8?: string;

  /**
   * @generated from field: optional string str9 = 9;
   */
  str9?: string;

  /**
   * @generated from field: optional string str10 = 10;
   */
  str10?: string;

  /**
   * @generated from field: optional string str11 = 11;
   */
  str11?: string;

  /**
   * @generated from field: optional string str12 = 12;
   */
  str12?: string;

  /**
   * @generated from field: optional string str13 = 13;
   */
  str13?: string;

  /**
   * @generated from field: optional string str14 = 14;
   */
  str14?: string;

  /**
   * @generated from field: optional string str15 = 15;
   */
  str15?: string;

  /**
   * @generated from field: optional string str16 = 16;
   */
  str16?: string;

  /**
   * @generated from field: optional string str17 = 17;
   */
  str17?: string;

  /**
   * @generated from field: optional string str18 = 18;
   */
  str18?: string;

  /**
   * @generated from field: optional string str19 = 19;
   */
  str19?: string;

  /**
   * @generated from field: optional string str20 = 20;
   */
  str20?: string;

  /**
   * @generated from field: optional string str21 = 21;
   */
  str21?: string;

  /**
   * @generated from field: optional string str22 = 22;
   */
  str22?: string;

  /**
   * @generated from field: optional string str23 = 23;
   */
  str23?: string;

  /**
   * @generated from field: optional string str24 = 24;
   */
  str24?: string;

  /**
   * @generated from field: optional string str25 = 25;
   */
  str25?: string;

  /**
   * @generated from field: optional string str26 = 26;
   */
  str26?: string;

  /**
   * @generated from field: optional string str27 = 27;
   */
  str27?: string;

  /**
   * @generated from field: optional string str28 = 28;
   */
  str28?: string;

  /**
   * @generated from field: optional string str29 = 29;
   */
  str29?: string;

  /**
   * @generated from field: optional string str30 = 30;
   */
  str30?: string;

  /**
   * @generated from field: optional string str31 = 31;
   */
  str31?: string;

  /**
   * @generated from field: optional string str32 = 32;
   */
  str32?: string;

  constructor(data?: PartialMessage<ManyOptionalString>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.ManyOptionalString";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManyOptionalString;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManyOptionalString;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManyOptionalString;

  static equals(a: ManyOptionalString | PlainMessage<ManyOptionalString> | undefined, b: ManyOptionalString | PlainMessage<ManyOptionalString> | undefined): boolean;
}

/**
 * Test int32, uint32, int64, uint64, and bool are all compatible
 *
 * @generated from message protobuf_unittest.Int32Message
 */
export declare class Int32Message extends Message<Int32Message> {
  /**
   * @generated from field: optional int32 data = 1;
   */
  data?: number;

  constructor(data?: PartialMessage<Int32Message>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.Int32Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Int32Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Int32Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Int32Message;

  static equals(a: Int32Message | PlainMessage<Int32Message> | undefined, b: Int32Message | PlainMessage<Int32Message> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.Uint32Message
 */
export declare class Uint32Message extends Message<Uint32Message> {
  /**
   * @generated from field: optional uint32 data = 1;
   */
  data?: number;

  constructor(data?: PartialMessage<Uint32Message>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.Uint32Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Uint32Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Uint32Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Uint32Message;

  static equals(a: Uint32Message | PlainMessage<Uint32Message> | undefined, b: Uint32Message | PlainMessage<Uint32Message> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.Int64Message
 */
export declare class Int64Message extends Message<Int64Message> {
  /**
   * @generated from field: optional int64 data = 1;
   */
  data?: bigint;

  constructor(data?: PartialMessage<Int64Message>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.Int64Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Int64Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Int64Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Int64Message;

  static equals(a: Int64Message | PlainMessage<Int64Message> | undefined, b: Int64Message | PlainMessage<Int64Message> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.Uint64Message
 */
export declare class Uint64Message extends Message<Uint64Message> {
  /**
   * @generated from field: optional uint64 data = 1;
   */
  data?: bigint;

  constructor(data?: PartialMessage<Uint64Message>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.Uint64Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Uint64Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Uint64Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Uint64Message;

  static equals(a: Uint64Message | PlainMessage<Uint64Message> | undefined, b: Uint64Message | PlainMessage<Uint64Message> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.BoolMessage
 */
export declare class BoolMessage extends Message<BoolMessage> {
  /**
   * @generated from field: optional bool data = 1;
   */
  data?: boolean;

  constructor(data?: PartialMessage<BoolMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.BoolMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoolMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoolMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoolMessage;

  static equals(a: BoolMessage | PlainMessage<BoolMessage> | undefined, b: BoolMessage | PlainMessage<BoolMessage> | undefined): boolean;
}

/**
 * Test oneofs.
 *
 * @generated from message protobuf_unittest.TestOneof
 */
export declare class TestOneof extends Message<TestOneof> {
  /**
   * @generated from oneof protobuf_unittest.TestOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes foo_message = 3;
     */
    value: TestAllTypes;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof.FooGroup foogroup = 4;
     */
    value: TestOneof_FooGroup;
    case: "foogroup";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestOneof>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneof";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneof;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneof;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneof;

  static equals(a: TestOneof | PlainMessage<TestOneof> | undefined, b: TestOneof | PlainMessage<TestOneof> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneof.FooGroup
 */
export declare class TestOneof_FooGroup extends Message<TestOneof_FooGroup> {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a?: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b?: string;

  constructor(data?: PartialMessage<TestOneof_FooGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneof.FooGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneof_FooGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneof_FooGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneof_FooGroup;

  static equals(a: TestOneof_FooGroup | PlainMessage<TestOneof_FooGroup> | undefined, b: TestOneof_FooGroup | PlainMessage<TestOneof_FooGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible
 */
export declare class TestOneofBackwardsCompatible extends Message<TestOneofBackwardsCompatible> {
  /**
   * @generated from field: optional int32 foo_int = 1;
   */
  fooInt?: number;

  /**
   * @generated from field: optional string foo_string = 2;
   */
  fooString?: string;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes foo_message = 3;
   */
  fooMessage?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestOneofBackwardsCompatible.FooGroup foogroup = 4;
   */
  foogroup?: TestOneofBackwardsCompatible_FooGroup;

  constructor(data?: PartialMessage<TestOneofBackwardsCompatible>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneofBackwardsCompatible";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneofBackwardsCompatible;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneofBackwardsCompatible;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneofBackwardsCompatible;

  static equals(a: TestOneofBackwardsCompatible | PlainMessage<TestOneofBackwardsCompatible> | undefined, b: TestOneofBackwardsCompatible | PlainMessage<TestOneofBackwardsCompatible> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup
 */
export declare class TestOneofBackwardsCompatible_FooGroup extends Message<TestOneofBackwardsCompatible_FooGroup> {
  /**
   * @generated from field: optional int32 a = 5;
   */
  a?: number;

  /**
   * @generated from field: optional string b = 6;
   */
  b?: string;

  constructor(data?: PartialMessage<TestOneofBackwardsCompatible_FooGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneofBackwardsCompatible_FooGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneofBackwardsCompatible_FooGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneofBackwardsCompatible_FooGroup;

  static equals(a: TestOneofBackwardsCompatible_FooGroup | PlainMessage<TestOneofBackwardsCompatible_FooGroup> | undefined, b: TestOneofBackwardsCompatible_FooGroup | PlainMessage<TestOneofBackwardsCompatible_FooGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneof2
 */
export declare class TestOneof2 extends Message<TestOneof2> {
  /**
   * @generated from oneof protobuf_unittest.TestOneof2.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: string foo_cord = 3;
     */
    value: string;
    case: "fooCord";
  } | {
    /**
     * @generated from field: string foo_string_piece = 4;
     */
    value: string;
    case: "fooStringPiece";
  } | {
    /**
     * @generated from field: bytes foo_bytes = 5;
     */
    value: Uint8Array;
    case: "fooBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
     */
    value: TestOneof2_NestedEnum;
    case: "fooEnum";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
     */
    value: TestOneof2_NestedMessage;
    case: "fooMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.FooGroup foogroup = 8;
     */
    value: TestOneof2_FooGroup;
    case: "foogroup";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11;
     */
    value: TestOneof2_NestedMessage;
    case: "fooLazyMessage";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof protobuf_unittest.TestOneof2.bar
   */
  bar: {
    /**
     * @generated from field: int32 bar_int = 12 [default = 5];
     */
    value: number;
    case: "barInt";
  } | {
    /**
     * @generated from field: string bar_string = 13 [default = "STRING"];
     */
    value: string;
    case: "barString";
  } | {
    /**
     * @generated from field: string bar_cord = 14 [default = "CORD"];
     */
    value: string;
    case: "barCord";
  } | {
    /**
     * @generated from field: string bar_string_piece = 15 [default = "SPIECE"];
     */
    value: string;
    case: "barStringPiece";
  } | {
    /**
     * @generated from field: bytes bar_bytes = 16 [default = "BYTES"];
     */
    value: Uint8Array;
    case: "barBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
     */
    value: TestOneof2_NestedEnum;
    case: "barEnum";
  } | {
    /**
     * @generated from field: string bar_string_with_empty_default = 20 [default = ""];
     */
    value: string;
    case: "barStringWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_cord_with_empty_default = 21 [default = ""];
     */
    value: string;
    case: "barCordWithEmptyDefault";
  } | {
    /**
     * @generated from field: string bar_string_piece_with_empty_default = 22 [default = ""];
     */
    value: string;
    case: "barStringPieceWithEmptyDefault";
  } | {
    /**
     * @generated from field: bytes bar_bytes_with_empty_default = 23 [default = ""];
     */
    value: Uint8Array;
    case: "barBytesWithEmptyDefault";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional int32 baz_int = 18;
   */
  bazInt?: number;

  /**
   * @generated from field: optional string baz_string = 19 [default = "BAZ"];
   */
  bazString?: string;

  constructor(data?: PartialMessage<TestOneof2>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneof2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneof2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneof2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneof2;

  static equals(a: TestOneof2 | PlainMessage<TestOneof2> | undefined, b: TestOneof2 | PlainMessage<TestOneof2> | undefined): boolean;
}

/**
 * @generated from enum protobuf_unittest.TestOneof2.NestedEnum
 */
export declare enum TestOneof2_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

/**
 * @generated from message protobuf_unittest.TestOneof2.FooGroup
 */
export declare class TestOneof2_FooGroup extends Message<TestOneof2_FooGroup> {
  /**
   * @generated from field: optional int32 a = 9;
   */
  a?: number;

  /**
   * @generated from field: optional string b = 10;
   */
  b?: string;

  constructor(data?: PartialMessage<TestOneof2_FooGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneof2.FooGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneof2_FooGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneof2_FooGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneof2_FooGroup;

  static equals(a: TestOneof2_FooGroup | PlainMessage<TestOneof2_FooGroup> | undefined, b: TestOneof2_FooGroup | PlainMessage<TestOneof2_FooGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneof2.NestedMessage
 */
export declare class TestOneof2_NestedMessage extends Message<TestOneof2_NestedMessage> {
  /**
   * @generated from field: optional int64 moo_int = 1;
   */
  mooInt?: bigint;

  /**
   * @generated from field: repeated int32 corge_int = 2;
   */
  corgeInt: number[];

  constructor(data?: PartialMessage<TestOneof2_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneof2.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneof2_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneof2_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneof2_NestedMessage;

  static equals(a: TestOneof2_NestedMessage | PlainMessage<TestOneof2_NestedMessage> | undefined, b: TestOneof2_NestedMessage | PlainMessage<TestOneof2_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRequiredOneof
 */
export declare class TestRequiredOneof extends Message<TestRequiredOneof> {
  /**
   * @generated from oneof protobuf_unittest.TestRequiredOneof.foo
   */
  foo: {
    /**
     * @generated from field: int32 foo_int = 1;
     */
    value: number;
    case: "fooInt";
  } | {
    /**
     * @generated from field: string foo_string = 2;
     */
    value: string;
    case: "fooString";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
     */
    value: TestRequiredOneof_NestedMessage;
    case: "fooMessage";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestRequiredOneof>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRequiredOneof";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequiredOneof;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequiredOneof;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequiredOneof;

  static equals(a: TestRequiredOneof | PlainMessage<TestRequiredOneof> | undefined, b: TestRequiredOneof | PlainMessage<TestRequiredOneof> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRequiredOneof.NestedMessage
 */
export declare class TestRequiredOneof_NestedMessage extends Message<TestRequiredOneof_NestedMessage> {
  /**
   * @generated from field: required double required_double = 1;
   */
  requiredDouble: number;

  constructor(data?: PartialMessage<TestRequiredOneof_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRequiredOneof.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRequiredOneof_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRequiredOneof_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRequiredOneof_NestedMessage;

  static equals(a: TestRequiredOneof_NestedMessage | PlainMessage<TestRequiredOneof_NestedMessage> | undefined, b: TestRequiredOneof_NestedMessage | PlainMessage<TestRequiredOneof_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPackedTypes
 */
export declare class TestPackedTypes extends Message<TestPackedTypes> {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnum[];

  constructor(data?: PartialMessage<TestPackedTypes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPackedTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedTypes;

  static equals(a: TestPackedTypes | PlainMessage<TestPackedTypes> | undefined, b: TestPackedTypes | PlainMessage<TestPackedTypes> | undefined): boolean;
}

/**
 * A message with the same fields as TestPackedTypes, but without packing. Used
 * to test packed <-> unpacked wire compatibility.
 *
 * @generated from message protobuf_unittest.TestUnpackedTypes
 */
export declare class TestUnpackedTypes extends Message<TestUnpackedTypes> {
  /**
   * @generated from field: repeated int32 unpacked_int32 = 90 [packed = false];
   */
  unpackedInt32: number[];

  /**
   * @generated from field: repeated int64 unpacked_int64 = 91 [packed = false];
   */
  unpackedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 unpacked_uint32 = 92 [packed = false];
   */
  unpackedUint32: number[];

  /**
   * @generated from field: repeated uint64 unpacked_uint64 = 93 [packed = false];
   */
  unpackedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 unpacked_sint32 = 94 [packed = false];
   */
  unpackedSint32: number[];

  /**
   * @generated from field: repeated sint64 unpacked_sint64 = 95 [packed = false];
   */
  unpackedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 unpacked_fixed32 = 96 [packed = false];
   */
  unpackedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 unpacked_fixed64 = 97 [packed = false];
   */
  unpackedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
   */
  unpackedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
   */
  unpackedSfixed64: bigint[];

  /**
   * @generated from field: repeated float unpacked_float = 100 [packed = false];
   */
  unpackedFloat: number[];

  /**
   * @generated from field: repeated double unpacked_double = 101 [packed = false];
   */
  unpackedDouble: number[];

  /**
   * @generated from field: repeated bool unpacked_bool = 102 [packed = false];
   */
  unpackedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
   */
  unpackedEnum: ForeignEnum[];

  constructor(data?: PartialMessage<TestUnpackedTypes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestUnpackedTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestUnpackedTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestUnpackedTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestUnpackedTypes;

  static equals(a: TestUnpackedTypes | PlainMessage<TestUnpackedTypes> | undefined, b: TestUnpackedTypes | PlainMessage<TestUnpackedTypes> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPackedExtensions
 */
export declare class TestPackedExtensions extends Message<TestPackedExtensions> {
  constructor(data?: PartialMessage<TestPackedExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPackedExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedExtensions;

  static equals(a: TestPackedExtensions | PlainMessage<TestPackedExtensions> | undefined, b: TestPackedExtensions | PlainMessage<TestPackedExtensions> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestUnpackedExtensions
 */
export declare class TestUnpackedExtensions extends Message<TestUnpackedExtensions> {
  constructor(data?: PartialMessage<TestUnpackedExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestUnpackedExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestUnpackedExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestUnpackedExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestUnpackedExtensions;

  static equals(a: TestUnpackedExtensions | PlainMessage<TestUnpackedExtensions> | undefined, b: TestUnpackedExtensions | PlainMessage<TestUnpackedExtensions> | undefined): boolean;
}

/**
 * Used by ExtensionSetTest/DynamicExtensions.  The test actually builds
 * a set of extensions to TestAllExtensions dynamically, based on the fields
 * of this message type.
 *
 * @generated from message protobuf_unittest.TestDynamicExtensions
 */
export declare class TestDynamicExtensions extends Message<TestDynamicExtensions> {
  /**
   * @generated from field: optional fixed32 scalar_extension = 2000;
   */
  scalarExtension?: number;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum enum_extension = 2001;
   */
  enumExtension?: ForeignEnum;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
   */
  dynamicEnumExtension?: TestDynamicExtensions_DynamicEnumType;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage message_extension = 2003;
   */
  messageExtension?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
   */
  dynamicMessageExtension?: TestDynamicExtensions_DynamicMessageType;

  /**
   * @generated from field: repeated string repeated_extension = 2005;
   */
  repeatedExtension: string[];

  /**
   * @generated from field: repeated sint32 packed_extension = 2006 [packed = true];
   */
  packedExtension: number[];

  constructor(data?: PartialMessage<TestDynamicExtensions>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDynamicExtensions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDynamicExtensions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDynamicExtensions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDynamicExtensions;

  static equals(a: TestDynamicExtensions | PlainMessage<TestDynamicExtensions> | undefined, b: TestDynamicExtensions | PlainMessage<TestDynamicExtensions> | undefined): boolean;
}

/**
 * @generated from enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType
 */
export declare enum TestDynamicExtensions_DynamicEnumType {
  /**
   * @generated from enum value: DYNAMIC_FOO = 2200;
   */
  DYNAMIC_FOO = 2200,

  /**
   * @generated from enum value: DYNAMIC_BAR = 2201;
   */
  DYNAMIC_BAR = 2201,

  /**
   * @generated from enum value: DYNAMIC_BAZ = 2202;
   */
  DYNAMIC_BAZ = 2202,
}

/**
 * @generated from message protobuf_unittest.TestDynamicExtensions.DynamicMessageType
 */
export declare class TestDynamicExtensions_DynamicMessageType extends Message<TestDynamicExtensions_DynamicMessageType> {
  /**
   * @generated from field: optional int32 dynamic_field = 2100;
   */
  dynamicField?: number;

  constructor(data?: PartialMessage<TestDynamicExtensions_DynamicMessageType>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDynamicExtensions.DynamicMessageType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDynamicExtensions_DynamicMessageType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDynamicExtensions_DynamicMessageType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDynamicExtensions_DynamicMessageType;

  static equals(a: TestDynamicExtensions_DynamicMessageType | PlainMessage<TestDynamicExtensions_DynamicMessageType> | undefined, b: TestDynamicExtensions_DynamicMessageType | PlainMessage<TestDynamicExtensions_DynamicMessageType> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestRepeatedScalarDifferentTagSizes
 */
export declare class TestRepeatedScalarDifferentTagSizes extends Message<TestRepeatedScalarDifferentTagSizes> {
  /**
   * Parsing repeated fixed size values used to fail. This message needs to be
   * used in order to get a tag of the right size; all of the repeated fields
   * in TestAllTypes didn't trigger the check.
   *
   * @generated from field: repeated fixed32 repeated_fixed32 = 12;
   */
  repeatedFixed32: number[];

  /**
   * Check for a varint type, just for good measure.
   *
   * @generated from field: repeated int32 repeated_int32 = 13;
   */
  repeatedInt32: number[];

  /**
   * These have two-byte tags.
   *
   * @generated from field: repeated fixed64 repeated_fixed64 = 2046;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 2047;
   */
  repeatedInt64: bigint[];

  /**
   * Three byte tags.
   *
   * @generated from field: repeated float repeated_float = 262142;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 262143;
   */
  repeatedUint64: bigint[];

  constructor(data?: PartialMessage<TestRepeatedScalarDifferentTagSizes>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestRepeatedScalarDifferentTagSizes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestRepeatedScalarDifferentTagSizes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestRepeatedScalarDifferentTagSizes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestRepeatedScalarDifferentTagSizes;

  static equals(a: TestRepeatedScalarDifferentTagSizes | PlainMessage<TestRepeatedScalarDifferentTagSizes> | undefined, b: TestRepeatedScalarDifferentTagSizes | PlainMessage<TestRepeatedScalarDifferentTagSizes> | undefined): boolean;
}

/**
 * Test that if an optional or required message/group field appears multiple
 * times in the input, they need to be merged.
 *
 * @generated from message protobuf_unittest.TestParsingMerge
 */
export declare class TestParsingMerge extends Message<TestParsingMerge> {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypes required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypes;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypes[];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMerge.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMerge_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMerge_RepeatedGroup[];

  constructor(data?: PartialMessage<TestParsingMerge>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge;

  static equals(a: TestParsingMerge | PlainMessage<TestParsingMerge> | undefined, b: TestParsingMerge | PlainMessage<TestParsingMerge> | undefined): boolean;
}

/**
 * RepeatedFieldsGenerator defines matching field types as TestParsingMerge,
 * except that all fields are repeated. In the tests, we will serialize the
 * RepeatedFieldsGenerator to bytes, and parse the bytes to TestParsingMerge.
 * Repeated fields in RepeatedFieldsGenerator are expected to be merged into
 * the corresponding required/optional fields in TestParsingMerge.
 *
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator
 */
export declare class TestParsingMerge_RepeatedFieldsGenerator extends Message<TestParsingMerge_RepeatedFieldsGenerator> {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field1 = 1;
   */
  field1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field2 = 2;
   */
  field2: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes field3 = 3;
   */
  field3: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMerge_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMerge_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext1 = 1000;
   */
  ext1: TestAllTypes[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes ext2 = 1001;
   */
  ext2: TestAllTypes[];

  constructor(data?: PartialMessage<TestParsingMerge_RepeatedFieldsGenerator>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge_RepeatedFieldsGenerator;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator;

  static equals(a: TestParsingMerge_RepeatedFieldsGenerator | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator> | undefined, b: TestParsingMerge_RepeatedFieldsGenerator | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1
 */
export declare class TestParsingMerge_RepeatedFieldsGenerator_Group1 extends Message<TestParsingMerge_RepeatedFieldsGenerator_Group1> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 11;
   */
  field1?: TestAllTypes;

  constructor(data?: PartialMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group1;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group1;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group1;

  static equals(a: TestParsingMerge_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1> | undefined, b: TestParsingMerge_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator_Group1> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2
 */
export declare class TestParsingMerge_RepeatedFieldsGenerator_Group2 extends Message<TestParsingMerge_RepeatedFieldsGenerator_Group2> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes field1 = 21;
   */
  field1?: TestAllTypes;

  constructor(data?: PartialMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedFieldsGenerator_Group2;

  static equals(a: TestParsingMerge_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2> | undefined, b: TestParsingMerge_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMerge_RepeatedFieldsGenerator_Group2> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMerge.OptionalGroup
 */
export declare class TestParsingMerge_OptionalGroup extends Message<TestParsingMerge_OptionalGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypes;

  constructor(data?: PartialMessage<TestParsingMerge_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge_OptionalGroup;

  static equals(a: TestParsingMerge_OptionalGroup | PlainMessage<TestParsingMerge_OptionalGroup> | undefined, b: TestParsingMerge_OptionalGroup | PlainMessage<TestParsingMerge_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedGroup
 */
export declare class TestParsingMerge_RepeatedGroup extends Message<TestParsingMerge_RepeatedGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypes;

  constructor(data?: PartialMessage<TestParsingMerge_RepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMerge.RepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMerge_RepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMerge_RepeatedGroup;

  static equals(a: TestParsingMerge_RepeatedGroup | PlainMessage<TestParsingMerge_RepeatedGroup> | undefined, b: TestParsingMerge_RepeatedGroup | PlainMessage<TestParsingMerge_RepeatedGroup> | undefined): boolean;
}

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeException
 */
export declare class TestMergeException extends Message<TestMergeException> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensions all_extensions = 1;
   */
  allExtensions?: TestAllExtensions;

  constructor(data?: PartialMessage<TestMergeException>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMergeException";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMergeException;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMergeException;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMergeException;

  static equals(a: TestMergeException | PlainMessage<TestMergeException> | undefined, b: TestMergeException | PlainMessage<TestMergeException> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestCommentInjectionMessage
 */
export declare class TestCommentInjectionMessage extends Message<TestCommentInjectionMessage> {
  /**
   * *\/ <- This should not close the generated doc comment
   *
   * @generated from field: optional string a = 1 [default = "*\/ <- Neither should this."];
   */
  a?: string;

  constructor(data?: PartialMessage<TestCommentInjectionMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestCommentInjectionMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestCommentInjectionMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestCommentInjectionMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestCommentInjectionMessage;

  static equals(a: TestCommentInjectionMessage | PlainMessage<TestCommentInjectionMessage> | undefined, b: TestCommentInjectionMessage | PlainMessage<TestCommentInjectionMessage> | undefined): boolean;
}

/**
 * Used to check that the c++ code generator re-orders messages to reduce
 * padding.
 *
 * @generated from message protobuf_unittest.TestMessageSize
 */
export declare class TestMessageSize extends Message<TestMessageSize> {
  /**
   * @generated from field: optional bool m1 = 1;
   */
  m1?: boolean;

  /**
   * @generated from field: optional int64 m2 = 2;
   */
  m2?: bigint;

  /**
   * @generated from field: optional bool m3 = 3;
   */
  m3?: boolean;

  /**
   * @generated from field: optional string m4 = 4;
   */
  m4?: string;

  /**
   * @generated from field: optional int32 m5 = 5;
   */
  m5?: number;

  /**
   * @generated from field: optional int64 m6 = 6;
   */
  m6?: bigint;

  constructor(data?: PartialMessage<TestMessageSize>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMessageSize";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMessageSize;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMessageSize;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMessageSize;

  static equals(a: TestMessageSize | PlainMessage<TestMessageSize> | undefined, b: TestMessageSize | PlainMessage<TestMessageSize> | undefined): boolean;
}

/**
 * Test that RPC services work.
 *
 * @generated from message protobuf_unittest.FooRequest
 */
export declare class FooRequest extends Message<FooRequest> {
  constructor(data?: PartialMessage<FooRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.FooRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FooRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FooRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FooRequest;

  static equals(a: FooRequest | PlainMessage<FooRequest> | undefined, b: FooRequest | PlainMessage<FooRequest> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.FooResponse
 */
export declare class FooResponse extends Message<FooResponse> {
  constructor(data?: PartialMessage<FooResponse>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.FooResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FooResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FooResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FooResponse;

  static equals(a: FooResponse | PlainMessage<FooResponse> | undefined, b: FooResponse | PlainMessage<FooResponse> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.FooClientMessage
 */
export declare class FooClientMessage extends Message<FooClientMessage> {
  constructor(data?: PartialMessage<FooClientMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.FooClientMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FooClientMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FooClientMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FooClientMessage;

  static equals(a: FooClientMessage | PlainMessage<FooClientMessage> | undefined, b: FooClientMessage | PlainMessage<FooClientMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.FooServerMessage
 */
export declare class FooServerMessage extends Message<FooServerMessage> {
  constructor(data?: PartialMessage<FooServerMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.FooServerMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FooServerMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FooServerMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FooServerMessage;

  static equals(a: FooServerMessage | PlainMessage<FooServerMessage> | undefined, b: FooServerMessage | PlainMessage<FooServerMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.BarRequest
 */
export declare class BarRequest extends Message<BarRequest> {
  constructor(data?: PartialMessage<BarRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.BarRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BarRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BarRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BarRequest;

  static equals(a: BarRequest | PlainMessage<BarRequest> | undefined, b: BarRequest | PlainMessage<BarRequest> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.BarResponse
 */
export declare class BarResponse extends Message<BarResponse> {
  constructor(data?: PartialMessage<BarResponse>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.BarResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BarResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BarResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BarResponse;

  static equals(a: BarResponse | PlainMessage<BarResponse> | undefined, b: BarResponse | PlainMessage<BarResponse> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestJsonName
 */
export declare class TestJsonName extends Message<TestJsonName> {
  /**
   * @generated from field: optional int32 field_name1 = 1;
   */
  fieldName1?: number;

  /**
   * @generated from field: optional int32 fieldName2 = 2;
   */
  fieldName2?: number;

  /**
   * @generated from field: optional int32 FieldName3 = 3;
   */
  FieldName3?: number;

  /**
   * @generated from field: optional int32 _field_name4 = 4;
   */
  FieldName4?: number;

  /**
   * @generated from field: optional int32 FIELD_NAME5 = 5;
   */
  FIELDNAME5?: number;

  /**
   * @generated from field: optional int32 field_name6 = 6 [json_name = "@type"];
   */
  fieldName6?: number;

  /**
   * @generated from field: optional int32 fieldname7 = 7;
   */
  fieldname7?: number;

  constructor(data?: PartialMessage<TestJsonName>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestJsonName";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestJsonName;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestJsonName;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestJsonName;

  static equals(a: TestJsonName | PlainMessage<TestJsonName> | undefined, b: TestJsonName | PlainMessage<TestJsonName> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers
 */
export declare class TestHugeFieldNumbers extends Message<TestHugeFieldNumbers> {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32?: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnum optional_enum = 536870004;
   */
  optionalEnum?: ForeignEnum;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessage optional_message = 536870007;
   */
  optionalMessage?: ForeignMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbers.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbers_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbers.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypes oneof_test_all_types = 536870012;
     */
    value: TestAllTypes;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestHugeFieldNumbers>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbers";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbers;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbers;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbers;

  static equals(a: TestHugeFieldNumbers | PlainMessage<TestHugeFieldNumbers> | undefined, b: TestHugeFieldNumbers | PlainMessage<TestHugeFieldNumbers> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup
 */
export declare class TestHugeFieldNumbers_OptionalGroup extends Message<TestHugeFieldNumbers_OptionalGroup> {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA?: number;

  constructor(data?: PartialMessage<TestHugeFieldNumbers_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbers.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbers_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbers_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbers_OptionalGroup;

  static equals(a: TestHugeFieldNumbers_OptionalGroup | PlainMessage<TestHugeFieldNumbers_OptionalGroup> | undefined, b: TestHugeFieldNumbers_OptionalGroup | PlainMessage<TestHugeFieldNumbers_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtensionInsideTable
 */
export declare class TestExtensionInsideTable extends Message<TestExtensionInsideTable> {
  /**
   * @generated from field: optional int32 field1 = 1;
   */
  field1?: number;

  /**
   * @generated from field: optional int32 field2 = 2;
   */
  field2?: number;

  /**
   * @generated from field: optional int32 field3 = 3;
   */
  field3?: number;

  /**
   * @generated from field: optional int32 field4 = 4;
   */
  field4?: number;

  /**
   * @generated from field: optional int32 field6 = 6;
   */
  field6?: number;

  /**
   * @generated from field: optional int32 field7 = 7;
   */
  field7?: number;

  /**
   * @generated from field: optional int32 field8 = 8;
   */
  field8?: number;

  /**
   * @generated from field: optional int32 field9 = 9;
   */
  field9?: number;

  /**
   * @generated from field: optional int32 field10 = 10;
   */
  field10?: number;

  constructor(data?: PartialMessage<TestExtensionInsideTable>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtensionInsideTable";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtensionInsideTable;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtensionInsideTable;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtensionInsideTable;

  static equals(a: TestExtensionInsideTable | PlainMessage<TestExtensionInsideTable> | undefined, b: TestExtensionInsideTable | PlainMessage<TestExtensionInsideTable> | undefined): boolean;
}

/**
 * NOTE(b/202996544): Intentionally nested to mirror go/glep.
 *
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter
 */
export declare class TestNestedGroupExtensionOuter extends Message<TestNestedGroupExtensionOuter> {
  /**
   * @generated from field: optional protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup layer1optionalgroup = 1;
   */
  layer1optionalgroup?: TestNestedGroupExtensionOuter_Layer1OptionalGroup;

  constructor(data?: PartialMessage<TestNestedGroupExtensionOuter>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedGroupExtensionOuter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedGroupExtensionOuter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter;

  static equals(a: TestNestedGroupExtensionOuter | PlainMessage<TestNestedGroupExtensionOuter> | undefined, b: TestNestedGroupExtensionOuter | PlainMessage<TestNestedGroupExtensionOuter> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup
 */
export declare class TestNestedGroupExtensionOuter_Layer1OptionalGroup extends Message<TestNestedGroupExtensionOuter_Layer1OptionalGroup> {
  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup layer2repeatedgroup = 2;
   */
  layer2repeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup layer2anotheroptionalrepeatedgroup = 4;
   */
  layer2anotheroptionalrepeatedgroup: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup[];

  constructor(data?: PartialMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup;

  static equals(a: TestNestedGroupExtensionOuter_Layer1OptionalGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup> | undefined, b: TestNestedGroupExtensionOuter_Layer1OptionalGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup
 */
export declare class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup extends Message<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup> {
  /**
   * @generated from field: optional string another_field = 6;
   */
  anotherField?: string;

  constructor(data?: PartialMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup;

  static equals(a: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup> | undefined, b: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup
 */
export declare class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup extends Message<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup> {
  /**
   * @generated from field: optional string but_why_tho = 5;
   */
  butWhyTho?: string;

  constructor(data?: PartialMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup;

  static equals(a: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup> | undefined, b: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup | PlainMessage<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionInnerExtension
 */
export declare class TestNestedGroupExtensionInnerExtension extends Message<TestNestedGroupExtensionInnerExtension> {
  /**
   * @generated from field: optional string inner_name = 1;
   */
  innerName?: string;

  constructor(data?: PartialMessage<TestNestedGroupExtensionInnerExtension>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedGroupExtensionInnerExtension";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedGroupExtensionInnerExtension;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionInnerExtension;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedGroupExtensionInnerExtension;

  static equals(a: TestNestedGroupExtensionInnerExtension | PlainMessage<TestNestedGroupExtensionInnerExtension> | undefined, b: TestNestedGroupExtensionInnerExtension | PlainMessage<TestNestedGroupExtensionInnerExtension> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestExtensionRangeSerialize
 */
export declare class TestExtensionRangeSerialize extends Message<TestExtensionRangeSerialize> {
  /**
   * @generated from field: optional int32 foo_one = 1;
   */
  fooOne?: number;

  /**
   * @generated from field: optional int32 foo_two = 6;
   */
  fooTwo?: number;

  /**
   * @generated from field: optional int32 foo_three = 7;
   */
  fooThree?: number;

  /**
   * @generated from field: optional int32 foo_four = 13;
   */
  fooFour?: number;

  constructor(data?: PartialMessage<TestExtensionRangeSerialize>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestExtensionRangeSerialize";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestExtensionRangeSerialize;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestExtensionRangeSerialize;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestExtensionRangeSerialize;

  static equals(a: TestExtensionRangeSerialize | PlainMessage<TestExtensionRangeSerialize> | undefined, b: TestExtensionRangeSerialize | PlainMessage<TestExtensionRangeSerialize> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyInt32Simple
 */
export declare class TestVerifyInt32Simple extends Message<TestVerifyInt32Simple> {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  constructor(data?: PartialMessage<TestVerifyInt32Simple>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyInt32Simple";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyInt32Simple;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyInt32Simple;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyInt32Simple;

  static equals(a: TestVerifyInt32Simple | PlainMessage<TestVerifyInt32Simple> | undefined, b: TestVerifyInt32Simple | PlainMessage<TestVerifyInt32Simple> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyInt32
 */
export declare class TestVerifyInt32 extends Message<TestVerifyInt32> {
  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyInt32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyInt32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyInt32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyInt32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyInt32;

  static equals(a: TestVerifyInt32 | PlainMessage<TestVerifyInt32> | undefined, b: TestVerifyInt32 | PlainMessage<TestVerifyInt32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32
 */
export declare class TestVerifyMostlyInt32 extends Message<TestVerifyMostlyInt32> {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430?: bigint;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323?: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyMostlyInt32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyMostlyInt32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyMostlyInt32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyMostlyInt32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyMostlyInt32;

  static equals(a: TestVerifyMostlyInt32 | PlainMessage<TestVerifyMostlyInt32> | undefined, b: TestVerifyMostlyInt32 | PlainMessage<TestVerifyMostlyInt32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber
 */
export declare class TestVerifyMostlyInt32BigFieldNumber extends Message<TestVerifyMostlyInt32BigFieldNumber> {
  /**
   * @generated from field: optional int64 optional_int64_30 = 30;
   */
  optionalInt6430?: bigint;

  /**
   * @generated from field: optional int32 optional_int32_300 = 300;
   */
  optionalInt32300?: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_3 = 3;
   */
  optionalInt323?: number;

  /**
   * @generated from field: optional int32 optional_int32_4 = 4;
   */
  optionalInt324?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyMostlyInt32BigFieldNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyMostlyInt32BigFieldNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyMostlyInt32BigFieldNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyMostlyInt32BigFieldNumber;

  static equals(a: TestVerifyMostlyInt32BigFieldNumber | PlainMessage<TestVerifyMostlyInt32BigFieldNumber> | undefined, b: TestVerifyMostlyInt32BigFieldNumber | PlainMessage<TestVerifyMostlyInt32BigFieldNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyUint32Simple
 */
export declare class TestVerifyUint32Simple extends Message<TestVerifyUint32Simple> {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264?: number;

  constructor(data?: PartialMessage<TestVerifyUint32Simple>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyUint32Simple";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyUint32Simple;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyUint32Simple;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyUint32Simple;

  static equals(a: TestVerifyUint32Simple | PlainMessage<TestVerifyUint32Simple> | undefined, b: TestVerifyUint32Simple | PlainMessage<TestVerifyUint32Simple> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyUint32
 */
export declare class TestVerifyUint32 extends Message<TestVerifyUint32> {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyUint32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyUint32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyUint32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyUint32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyUint32;

  static equals(a: TestVerifyUint32 | PlainMessage<TestVerifyUint32> | undefined, b: TestVerifyUint32 | PlainMessage<TestVerifyUint32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyOneUint32
 */
export declare class TestVerifyOneUint32 extends Message<TestVerifyOneUint32> {
  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyOneUint32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyOneUint32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyOneUint32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyOneUint32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyOneUint32;

  static equals(a: TestVerifyOneUint32 | PlainMessage<TestVerifyOneUint32> | undefined, b: TestVerifyOneUint32 | PlainMessage<TestVerifyOneUint32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyOneInt32BigFieldNumber
 */
export declare class TestVerifyOneInt32BigFieldNumber extends Message<TestVerifyOneInt32BigFieldNumber> {
  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265?: number;

  /**
   * @generated from field: optional int64 optional_int64_1 = 1;
   */
  optionalInt641?: bigint;

  /**
   * @generated from field: optional int64 optional_int64_2 = 2;
   */
  optionalInt642?: bigint;

  /**
   * @generated from field: optional int64 optional_int64_63 = 63;
   */
  optionalInt6463?: bigint;

  /**
   * @generated from field: optional int64 optional_int64_64 = 64;
   */
  optionalInt6464?: bigint;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyOneInt32BigFieldNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyOneInt32BigFieldNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyOneInt32BigFieldNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyOneInt32BigFieldNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyOneInt32BigFieldNumber;

  static equals(a: TestVerifyOneInt32BigFieldNumber | PlainMessage<TestVerifyOneInt32BigFieldNumber> | undefined, b: TestVerifyOneInt32BigFieldNumber | PlainMessage<TestVerifyOneInt32BigFieldNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyInt32BigFieldNumber
 */
export declare class TestVerifyInt32BigFieldNumber extends Message<TestVerifyInt32BigFieldNumber> {
  /**
   * @generated from field: optional int32 optional_int32_1000 = 1000;
   */
  optionalInt321000?: number;

  /**
   * @generated from field: optional int32 optional_int32_65 = 65;
   */
  optionalInt3265?: number;

  /**
   * @generated from field: optional int32 optional_int32_1 = 1;
   */
  optionalInt321?: number;

  /**
   * @generated from field: optional int32 optional_int32_2 = 2;
   */
  optionalInt322?: number;

  /**
   * @generated from field: optional int32 optional_int32_63 = 63;
   */
  optionalInt3263?: number;

  /**
   * @generated from field: optional int32 optional_int32_64 = 64;
   */
  optionalInt3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyInt32BigFieldNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyInt32BigFieldNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyInt32BigFieldNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyInt32BigFieldNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyInt32BigFieldNumber;

  static equals(a: TestVerifyInt32BigFieldNumber | PlainMessage<TestVerifyInt32BigFieldNumber> | undefined, b: TestVerifyInt32BigFieldNumber | PlainMessage<TestVerifyInt32BigFieldNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyUint32BigFieldNumber
 */
export declare class TestVerifyUint32BigFieldNumber extends Message<TestVerifyUint32BigFieldNumber> {
  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypes optional_all_types = 9;
   */
  optionalAllTypes?: TestAllTypes;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypes repeated_all_types = 10;
   */
  repeatedAllTypes: TestAllTypes[];

  constructor(data?: PartialMessage<TestVerifyUint32BigFieldNumber>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyUint32BigFieldNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyUint32BigFieldNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyUint32BigFieldNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyUint32BigFieldNumber;

  static equals(a: TestVerifyUint32BigFieldNumber | PlainMessage<TestVerifyUint32BigFieldNumber> | undefined, b: TestVerifyUint32BigFieldNumber | PlainMessage<TestVerifyUint32BigFieldNumber> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32
 */
export declare class TestVerifyBigFieldNumberUint32 extends Message<TestVerifyBigFieldNumberUint32> {
  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;

  constructor(data?: PartialMessage<TestVerifyBigFieldNumberUint32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyBigFieldNumberUint32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyBigFieldNumberUint32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyBigFieldNumberUint32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyBigFieldNumberUint32;

  static equals(a: TestVerifyBigFieldNumberUint32 | PlainMessage<TestVerifyBigFieldNumberUint32> | undefined, b: TestVerifyBigFieldNumberUint32 | PlainMessage<TestVerifyBigFieldNumberUint32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested
 */
export declare class TestVerifyBigFieldNumberUint32_Nested extends Message<TestVerifyBigFieldNumberUint32_Nested> {
  /**
   * @generated from field: optional uint32 optional_uint32_5000 = 5000;
   */
  optionalUint325000?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1000 = 1000;
   */
  optionalUint321000?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_66 = 66;
   */
  optionalUint3266?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_65 = 65;
   */
  optionalUint3265?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_1 = 1;
   */
  optionalUint321?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_2 = 2;
   */
  optionalUint322?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_63 = 63;
   */
  optionalUint3263?: number;

  /**
   * @generated from field: optional uint32 optional_uint32_64 = 64;
   */
  optionalUint3264?: number;

  /**
   * @generated from field: optional protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
   */
  optionalNested?: TestVerifyBigFieldNumberUint32_Nested;

  /**
   * @generated from field: repeated protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
   */
  repeatedNested: TestVerifyBigFieldNumberUint32_Nested[];

  constructor(data?: PartialMessage<TestVerifyBigFieldNumberUint32_Nested>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestVerifyBigFieldNumberUint32_Nested;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestVerifyBigFieldNumberUint32_Nested;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestVerifyBigFieldNumberUint32_Nested;

  static equals(a: TestVerifyBigFieldNumberUint32_Nested | PlainMessage<TestVerifyBigFieldNumberUint32_Nested> | undefined, b: TestVerifyBigFieldNumberUint32_Nested | PlainMessage<TestVerifyBigFieldNumberUint32_Nested> | undefined): boolean;
}

