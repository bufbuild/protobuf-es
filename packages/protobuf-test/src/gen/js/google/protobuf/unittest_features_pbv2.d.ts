// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.8.0 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest_features.proto (package pb, syntax proto2)
/* eslint-disable */

import type { GenDescEnum, GenDescExtension, GenDescFile, GenDescMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { FeatureSet } from "@bufbuild/protobuf/wkt";

export declare const fileDesc_google_protobuf_unittest_features: GenDescFile;

/**
 * @generated from message pb.TestMessage
 */
export declare type TestMessage = Message<"pb.TestMessage"> & {
};

// Describes the message pb.TestMessage. Use `create(TestMessageDesc)` to create a new TestMessage.
export declare const TestMessageDesc: GenDescMessage<TestMessage>;

/**
 * @generated from message pb.TestMessage.Nested
 */
export declare type TestMessage_Nested = Message<"pb.TestMessage.Nested"> & {
};

// Describes the message pb.TestMessage.Nested. Use `create(TestMessage_NestedDesc)` to create a new TestMessage_Nested.
export declare const TestMessage_NestedDesc: GenDescMessage<TestMessage_Nested>;

/**
 * @generated from extension: optional pb.TestFeatures test_nested = 9997;
 */
export declare const TestMessage_Nested_test_nested: GenDescExtension<FeatureSet, TestFeatures>;

/**
 * @generated from extension: optional pb.TestFeatures test_message = 9998;
 */
export declare const TestMessage_test_message: GenDescExtension<FeatureSet, TestFeatures>;

/**
 * @generated from message pb.TestFeatures
 */
export declare type TestFeatures = Message<"pb.TestFeatures"> & {
  /**
   * @generated from field: optional int32 int_file_feature = 1;
   */
  intFileFeature: number;

  /**
   * @generated from field: optional int32 int_extension_range_feature = 2;
   */
  intExtensionRangeFeature: number;

  /**
   * @generated from field: optional int32 int_message_feature = 3;
   */
  intMessageFeature: number;

  /**
   * @generated from field: optional int32 int_field_feature = 4;
   */
  intFieldFeature: number;

  /**
   * @generated from field: optional int32 int_oneof_feature = 5;
   */
  intOneofFeature: number;

  /**
   * @generated from field: optional int32 int_enum_feature = 6;
   */
  intEnumFeature: number;

  /**
   * @generated from field: optional int32 int_enum_entry_feature = 7;
   */
  intEnumEntryFeature: number;

  /**
   * @generated from field: optional int32 int_service_feature = 8;
   */
  intServiceFeature: number;

  /**
   * @generated from field: optional int32 int_method_feature = 9;
   */
  intMethodFeature: number;

  /**
   * @generated from field: optional int32 int_multiple_feature = 10;
   */
  intMultipleFeature: number;

  /**
   * @generated from field: optional bool bool_field_feature = 11;
   */
  boolFieldFeature: boolean;

  /**
   * @generated from field: optional float float_field_feature = 12;
   */
  floatFieldFeature: number;

  /**
   * @generated from field: optional pb.TestFeatures.MessageFeature message_field_feature = 13;
   */
  messageFieldFeature?: TestFeatures_MessageFeature;

  /**
   * @generated from field: optional pb.TestFeatures.EnumFeature enum_field_feature = 14;
   */
  enumFieldFeature: TestFeatures_EnumFeature;

  /**
   * @generated from field: optional int32 int_source_feature = 15;
   */
  intSourceFeature: number;

  /**
   * @generated from field: optional string string_source_feature = 16;
   */
  stringSourceFeature: string;
};

// Describes the message pb.TestFeatures. Use `create(TestFeaturesDesc)` to create a new TestFeatures.
export declare const TestFeaturesDesc: GenDescMessage<TestFeatures>;

/**
 * @generated from message pb.TestFeatures.MessageFeature
 */
export declare type TestFeatures_MessageFeature = Message<"pb.TestFeatures.MessageFeature"> & {
  /**
   * @generated from field: optional bool bool_field = 1;
   */
  boolField: boolean;

  /**
   * @generated from field: optional int32 int_field = 2;
   */
  intField: number;

  /**
   * @generated from field: optional float float_field = 3;
   */
  floatField: number;

  /**
   * @generated from field: optional string string_field = 4;
   */
  stringField: string;
};

// Describes the message pb.TestFeatures.MessageFeature. Use `create(TestFeatures_MessageFeatureDesc)` to create a new TestFeatures_MessageFeature.
export declare const TestFeatures_MessageFeatureDesc: GenDescMessage<TestFeatures_MessageFeature>;

/**
 * @generated from enum pb.TestFeatures.EnumFeature
 */
export enum TestFeatures_EnumFeature {
  /**
   * @generated from enum value: TEST_ENUM_FEATURE_UNKNOWN = 0;
   */
  TEST_ENUM_FEATURE_UNKNOWN = 0,

  /**
   * @generated from enum value: ENUM_VALUE1 = 1;
   */
  ENUM_VALUE1 = 1,

  /**
   * @generated from enum value: ENUM_VALUE2 = 2;
   */
  ENUM_VALUE2 = 2,

  /**
   * @generated from enum value: ENUM_VALUE3 = 3;
   */
  ENUM_VALUE3 = 3,

  /**
   * @generated from enum value: ENUM_VALUE4 = 4;
   */
  ENUM_VALUE4 = 4,

  /**
   * @generated from enum value: ENUM_VALUE5 = 5;
   */
  ENUM_VALUE5 = 5,
}

// Describes the enum pb.TestFeatures.EnumFeature.
export declare const TestFeatures_EnumFeatureDesc: GenDescEnum<TestFeatures_EnumFeature>;

/**
 * @generated from extension: optional pb.TestFeatures test = 9999;
 */
export declare const test: GenDescExtension<FeatureSet, TestFeatures>;

