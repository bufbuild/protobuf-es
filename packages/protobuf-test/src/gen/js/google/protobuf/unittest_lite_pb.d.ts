// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Author: kenton@google.com (Kenton Varda)
//
// This is like unittest.proto but with optimize_for = LITE_RUNTIME.

// @generated by protoc-gen-es v0.2.1 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest_lite.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto2} from "@bufbuild/protobuf";
import type {ImportEnumLite, ImportMessageLite} from "./unittest_import_lite_pb.js";
import type {PublicImportMessageLite} from "./unittest_import_public_lite_pb.js";

/**
 * @generated from enum protobuf_unittest.ForeignEnumLite
 */
export declare enum ForeignEnumLite {
  /**
   * @generated from enum value: FOREIGN_LITE_FOO = 4;
   */
  FOREIGN_LITE_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_LITE_BAZ = 6;
   */
  FOREIGN_LITE_BAZ = 6,

  /**
   * @generated from enum value: FOREIGN_LITE_BAR = 5;
   */
  FOREIGN_LITE_BAR = 5,
}

/**
 * @generated from enum protobuf_unittest.V1EnumLite
 */
export declare enum V1EnumLite {
  /**
   * @generated from enum value: V1_FIRST = 1;
   */
  V1_FIRST = 1,
}

/**
 * @generated from enum protobuf_unittest.V2EnumLite
 */
export declare enum V2EnumLite {
  /**
   * @generated from enum value: V2_FIRST = 1;
   */
  V2_FIRST = 1,

  /**
   * @generated from enum value: V2_SECOND = 2;
   */
  V2_SECOND = 2,
}

/**
 * Same as TestAllTypes but with the lite runtime.
 *
 * @generated from message protobuf_unittest.TestAllTypesLite
 */
export declare class TestAllTypesLite extends Message<TestAllTypesLite> {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64?: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32?: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64?: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32?: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64?: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32?: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64?: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat?: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble?: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool?: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypesLite_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum?: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
   */
  optionalForeignEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
   */
  optionalImportEnum?: ImportEnumLite;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece?: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord?: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypesLite_RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypesLite_NestedMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessageLite[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessageLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypesLite_NestedEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnumLite[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnumLite[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypesLite_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32?: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64?: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32?: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64?: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32?: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64?: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32?: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64?: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32?: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64?: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat?: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble?: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool?: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString?: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum?: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
   */
  defaultForeignEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
   */
  defaultImportEnum?: ImportEnumLite;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece?: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord?: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypesLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
     */
    value: TestAllTypesLite_NestedMessage2;
    case: "oneofNestedMessage2";
  } | { case: undefined; value?: undefined };

  /**
   * Tests toString for non-repeated fields with a list suffix
   *
   * @generated from field: optional int32 deceptively_named_list = 116;
   */
  deceptivelyNamedList?: number;

  constructor(data?: PartialMessage<TestAllTypesLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite;

  static equals(a: TestAllTypesLite | PlainMessage<TestAllTypesLite> | undefined, b: TestAllTypesLite | PlainMessage<TestAllTypesLite> | undefined): boolean;
}

/**
 * @generated from enum protobuf_unittest.TestAllTypesLite.NestedEnum
 */
export declare enum TestAllTypesLite_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage
 */
export declare class TestAllTypesLite_NestedMessage extends Message<TestAllTypesLite_NestedMessage> {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb?: number;

  /**
   * @generated from field: optional int64 cc = 2;
   */
  cc?: bigint;

  constructor(data?: PartialMessage<TestAllTypesLite_NestedMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.NestedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_NestedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage;

  static equals(a: TestAllTypesLite_NestedMessage | PlainMessage<TestAllTypesLite_NestedMessage> | undefined, b: TestAllTypesLite_NestedMessage | PlainMessage<TestAllTypesLite_NestedMessage> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage2
 */
export declare class TestAllTypesLite_NestedMessage2 extends Message<TestAllTypesLite_NestedMessage2> {
  /**
   * @generated from field: optional int32 dd = 1;
   */
  dd?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_NestedMessage2>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.NestedMessage2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_NestedMessage2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_NestedMessage2;

  static equals(a: TestAllTypesLite_NestedMessage2 | PlainMessage<TestAllTypesLite_NestedMessage2> | undefined, b: TestAllTypesLite_NestedMessage2 | PlainMessage<TestAllTypesLite_NestedMessage2> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.OptionalGroup
 */
export declare class TestAllTypesLite_OptionalGroup extends Message<TestAllTypesLite_OptionalGroup> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_OptionalGroup;

  static equals(a: TestAllTypesLite_OptionalGroup | PlainMessage<TestAllTypesLite_OptionalGroup> | undefined, b: TestAllTypesLite_OptionalGroup | PlainMessage<TestAllTypesLite_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.RepeatedGroup
 */
export declare class TestAllTypesLite_RepeatedGroup extends Message<TestAllTypesLite_RepeatedGroup> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<TestAllTypesLite_RepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllTypesLite.RepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllTypesLite_RepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllTypesLite_RepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllTypesLite_RepeatedGroup;

  static equals(a: TestAllTypesLite_RepeatedGroup | PlainMessage<TestAllTypesLite_RepeatedGroup> | undefined, b: TestAllTypesLite_RepeatedGroup | PlainMessage<TestAllTypesLite_RepeatedGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.ForeignMessageLite
 */
export declare class ForeignMessageLite extends Message<ForeignMessageLite> {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c?: number;

  constructor(data?: PartialMessage<ForeignMessageLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.ForeignMessageLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForeignMessageLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForeignMessageLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForeignMessageLite;

  static equals(a: ForeignMessageLite | PlainMessage<ForeignMessageLite> | undefined, b: ForeignMessageLite | PlainMessage<ForeignMessageLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPackedTypesLite
 */
export declare class TestPackedTypesLite extends Message<TestPackedTypesLite> {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnumLite[];

  constructor(data?: PartialMessage<TestPackedTypesLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPackedTypesLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedTypesLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedTypesLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedTypesLite;

  static equals(a: TestPackedTypesLite | PlainMessage<TestPackedTypesLite> | undefined, b: TestPackedTypesLite | PlainMessage<TestPackedTypesLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestAllExtensionsLite
 */
export declare class TestAllExtensionsLite extends Message<TestAllExtensionsLite> {
  constructor(data?: PartialMessage<TestAllExtensionsLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestAllExtensionsLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestAllExtensionsLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestAllExtensionsLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestAllExtensionsLite;

  static equals(a: TestAllExtensionsLite | PlainMessage<TestAllExtensionsLite> | undefined, b: TestAllExtensionsLite | PlainMessage<TestAllExtensionsLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension_lite
 */
export declare class OptionalGroup_extension_lite extends Message<OptionalGroup_extension_lite> {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a?: number;

  constructor(data?: PartialMessage<OptionalGroup_extension_lite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.OptionalGroup_extension_lite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OptionalGroup_extension_lite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OptionalGroup_extension_lite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OptionalGroup_extension_lite;

  static equals(a: OptionalGroup_extension_lite | PlainMessage<OptionalGroup_extension_lite> | undefined, b: OptionalGroup_extension_lite | PlainMessage<OptionalGroup_extension_lite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension_lite
 */
export declare class RepeatedGroup_extension_lite extends Message<RepeatedGroup_extension_lite> {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a?: number;

  constructor(data?: PartialMessage<RepeatedGroup_extension_lite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.RepeatedGroup_extension_lite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RepeatedGroup_extension_lite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RepeatedGroup_extension_lite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RepeatedGroup_extension_lite;

  static equals(a: RepeatedGroup_extension_lite | PlainMessage<RepeatedGroup_extension_lite> | undefined, b: RepeatedGroup_extension_lite | PlainMessage<RepeatedGroup_extension_lite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestPackedExtensionsLite
 */
export declare class TestPackedExtensionsLite extends Message<TestPackedExtensionsLite> {
  constructor(data?: PartialMessage<TestPackedExtensionsLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestPackedExtensionsLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestPackedExtensionsLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestPackedExtensionsLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestPackedExtensionsLite;

  static equals(a: TestPackedExtensionsLite | PlainMessage<TestPackedExtensionsLite> | undefined, b: TestPackedExtensionsLite | PlainMessage<TestPackedExtensionsLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestNestedExtensionLite
 */
export declare class TestNestedExtensionLite extends Message<TestNestedExtensionLite> {
  constructor(data?: PartialMessage<TestNestedExtensionLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestNestedExtensionLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestNestedExtensionLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestNestedExtensionLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestNestedExtensionLite;

  static equals(a: TestNestedExtensionLite | PlainMessage<TestNestedExtensionLite> | undefined, b: TestNestedExtensionLite | PlainMessage<TestNestedExtensionLite> | undefined): boolean;
}

/**
 * Test that deprecated fields work.  We only verify that they compile (at one
 * point this failed).
 *
 * @generated from message protobuf_unittest.TestDeprecatedLite
 */
export declare class TestDeprecatedLite extends Message<TestDeprecatedLite> {
  /**
   * @generated from field: optional int32 deprecated_field = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedField?: number;

  /**
   * @generated from field: required int32 deprecated_field2 = 2 [deprecated = true];
   * @deprecated
   */
  deprecatedField2: number;

  /**
   * @generated from field: optional string deprecated_field3 = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedField3?: string;

  /**
   * @generated from field: optional protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedField4?: TestDeprecatedLite;

  constructor(data?: PartialMessage<TestDeprecatedLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestDeprecatedLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestDeprecatedLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestDeprecatedLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestDeprecatedLite;

  static equals(a: TestDeprecatedLite | PlainMessage<TestDeprecatedLite> | undefined, b: TestDeprecatedLite | PlainMessage<TestDeprecatedLite> | undefined): boolean;
}

/**
 * See the comments of the same type in unittest.proto.
 *
 * @generated from message protobuf_unittest.TestParsingMergeLite
 */
export declare class TestParsingMergeLite extends Message<TestParsingMergeLite> {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypesLite required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypesLite[];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMergeLite.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMergeLite_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMergeLite_RepeatedGroup[];

  constructor(data?: PartialMessage<TestParsingMergeLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite;

  static equals(a: TestParsingMergeLite | PlainMessage<TestParsingMergeLite> | undefined, b: TestParsingMergeLite | PlainMessage<TestParsingMergeLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator
 */
export declare class TestParsingMergeLite_RepeatedFieldsGenerator extends Message<TestParsingMergeLite_RepeatedFieldsGenerator> {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field1 = 1;
   */
  field1: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field2 = 2;
   */
  field2: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field3 = 3;
   */
  field3: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMergeLite_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMergeLite_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext1 = 1000;
   */
  ext1: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext2 = 1001;
   */
  ext2: TestAllTypesLite[];

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator;

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1
 */
export declare class TestParsingMergeLite_RepeatedFieldsGenerator_Group1 extends Message<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 11;
   */
  field1?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group1;

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator_Group1 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2
 */
export declare class TestParsingMergeLite_RepeatedFieldsGenerator_Group2 extends Message<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 21;
   */
  field1?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedFieldsGenerator_Group2;

  static equals(a: TestParsingMergeLite_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> | undefined, b: TestParsingMergeLite_RepeatedFieldsGenerator_Group2 | PlainMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.OptionalGroup
 */
export declare class TestParsingMergeLite_OptionalGroup extends Message<TestParsingMergeLite_OptionalGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_OptionalGroup;

  static equals(a: TestParsingMergeLite_OptionalGroup | PlainMessage<TestParsingMergeLite_OptionalGroup> | undefined, b: TestParsingMergeLite_OptionalGroup | PlainMessage<TestParsingMergeLite_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedGroup
 */
export declare class TestParsingMergeLite_RepeatedGroup extends Message<TestParsingMergeLite_RepeatedGroup> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypesLite;

  constructor(data?: PartialMessage<TestParsingMergeLite_RepeatedGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestParsingMergeLite.RepeatedGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestParsingMergeLite_RepeatedGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestParsingMergeLite_RepeatedGroup;

  static equals(a: TestParsingMergeLite_RepeatedGroup | PlainMessage<TestParsingMergeLite_RepeatedGroup> | undefined, b: TestParsingMergeLite_RepeatedGroup | PlainMessage<TestParsingMergeLite_RepeatedGroup> | undefined): boolean;
}

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeExceptionLite
 */
export declare class TestMergeExceptionLite extends Message<TestMergeExceptionLite> {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
   */
  allExtensions?: TestAllExtensionsLite;

  constructor(data?: PartialMessage<TestMergeExceptionLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMergeExceptionLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMergeExceptionLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMergeExceptionLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMergeExceptionLite;

  static equals(a: TestMergeExceptionLite | PlainMessage<TestMergeExceptionLite> | undefined, b: TestMergeExceptionLite | PlainMessage<TestMergeExceptionLite> | undefined): boolean;
}

/**
 * TestEmptyMessageLite is used to test unknown fields support in lite mode.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageLite
 */
export declare class TestEmptyMessageLite extends Message<TestEmptyMessageLite> {
  constructor(data?: PartialMessage<TestEmptyMessageLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessageLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessageLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessageLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessageLite;

  static equals(a: TestEmptyMessageLite | PlainMessage<TestEmptyMessageLite> | undefined, b: TestEmptyMessageLite | PlainMessage<TestEmptyMessageLite> | undefined): boolean;
}

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensionsLite
 */
export declare class TestEmptyMessageWithExtensionsLite extends Message<TestEmptyMessageWithExtensionsLite> {
  constructor(data?: PartialMessage<TestEmptyMessageWithExtensionsLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestEmptyMessageWithExtensionsLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestEmptyMessageWithExtensionsLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensionsLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestEmptyMessageWithExtensionsLite;

  static equals(a: TestEmptyMessageWithExtensionsLite | PlainMessage<TestEmptyMessageWithExtensionsLite> | undefined, b: TestEmptyMessageWithExtensionsLite | PlainMessage<TestEmptyMessageWithExtensionsLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.V1MessageLite
 */
export declare class V1MessageLite extends Message<V1MessageLite> {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField: number;

  /**
   * @generated from field: optional protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
   */
  enumField?: V1EnumLite;

  constructor(data?: PartialMessage<V1MessageLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.V1MessageLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V1MessageLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V1MessageLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V1MessageLite;

  static equals(a: V1MessageLite | PlainMessage<V1MessageLite> | undefined, b: V1MessageLite | PlainMessage<V1MessageLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.V2MessageLite
 */
export declare class V2MessageLite extends Message<V2MessageLite> {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField: number;

  /**
   * @generated from field: optional protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
   */
  enumField?: V2EnumLite;

  constructor(data?: PartialMessage<V2MessageLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.V2MessageLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V2MessageLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V2MessageLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V2MessageLite;

  static equals(a: V2MessageLite | PlainMessage<V2MessageLite> | undefined, b: V2MessageLite | PlainMessage<V2MessageLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite
 */
export declare class TestHugeFieldNumbersLite extends Message<TestHugeFieldNumbersLite> {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32?: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32?: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
   */
  optionalEnum?: ForeignEnumLite;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString?: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes?: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_message = 536870007;
   */
  optionalMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbersLite_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbersLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
     */
    value: TestAllTypesLite;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestHugeFieldNumbersLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbersLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbersLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite;

  static equals(a: TestHugeFieldNumbersLite | PlainMessage<TestHugeFieldNumbersLite> | undefined, b: TestHugeFieldNumbersLite | PlainMessage<TestHugeFieldNumbersLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup
 */
export declare class TestHugeFieldNumbersLite_OptionalGroup extends Message<TestHugeFieldNumbersLite_OptionalGroup> {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA?: number;

  constructor(data?: PartialMessage<TestHugeFieldNumbersLite_OptionalGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestHugeFieldNumbersLite_OptionalGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite_OptionalGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestHugeFieldNumbersLite_OptionalGroup;

  static equals(a: TestHugeFieldNumbersLite_OptionalGroup | PlainMessage<TestHugeFieldNumbersLite_OptionalGroup> | undefined, b: TestHugeFieldNumbersLite_OptionalGroup | PlainMessage<TestHugeFieldNumbersLite_OptionalGroup> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestOneofParsingLite
 */
export declare class TestOneofParsingLite extends Message<TestOneofParsingLite> {
  /**
   * @generated from oneof protobuf_unittest.TestOneofParsingLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: int32 oneof_int32 = 1;
     */
    value: number;
    case: "oneofInt32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_submessage = 2;
     */
    value: TestAllTypesLite;
    case: "oneofSubmessage";
  } | {
    /**
     * @generated from field: string oneof_string = 3;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 4 [default = "default bytes"];
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_string_cord = 5 [default = "default Cord"];
     */
    value: string;
    case: "oneofStringCord";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_cord = 6;
     */
    value: Uint8Array;
    case: "oneofBytesCord";
  } | {
    /**
     * @generated from field: string oneof_string_string_piece = 7;
     */
    value: string;
    case: "oneofStringStringPiece";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_string_piece = 8 [default = "default StringPiece"];
     */
    value: Uint8Array;
    case: "oneofBytesStringPiece";
  } | {
    /**
     * @generated from field: protobuf_unittest.V2EnumLite oneof_enum = 9;
     */
    value: V2EnumLite;
    case: "oneofEnum";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TestOneofParsingLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestOneofParsingLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestOneofParsingLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestOneofParsingLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestOneofParsingLite;

  static equals(a: TestOneofParsingLite | PlainMessage<TestOneofParsingLite> | undefined, b: TestOneofParsingLite | PlainMessage<TestOneofParsingLite> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.TestMessageSetLite
 */
export declare class TestMessageSetLite extends Message<TestMessageSetLite> {
  constructor(data?: PartialMessage<TestMessageSetLite>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.TestMessageSetLite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestMessageSetLite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestMessageSetLite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestMessageSetLite;

  static equals(a: TestMessageSetLite | PlainMessage<TestMessageSetLite> | undefined, b: TestMessageSetLite | PlainMessage<TestMessageSetLite> | undefined): boolean;
}

/**
 * The following four messages are set up to test for wire compatibility between
 * packed and non-packed repeated fields. We use the field number 2048, because
 * that is large enough to require a 3-byte varint for the tag.
 *
 * @generated from message protobuf_unittest.PackedInt32
 */
export declare class PackedInt32 extends Message<PackedInt32> {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048 [packed = true];
   */
  repeatedInt32: number[];

  constructor(data?: PartialMessage<PackedInt32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.PackedInt32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PackedInt32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PackedInt32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PackedInt32;

  static equals(a: PackedInt32 | PlainMessage<PackedInt32> | undefined, b: PackedInt32 | PlainMessage<PackedInt32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.NonPackedInt32
 */
export declare class NonPackedInt32 extends Message<NonPackedInt32> {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048;
   */
  repeatedInt32: number[];

  constructor(data?: PartialMessage<NonPackedInt32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.NonPackedInt32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NonPackedInt32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NonPackedInt32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NonPackedInt32;

  static equals(a: NonPackedInt32 | PlainMessage<NonPackedInt32> | undefined, b: NonPackedInt32 | PlainMessage<NonPackedInt32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.PackedFixed32
 */
export declare class PackedFixed32 extends Message<PackedFixed32> {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048 [packed = true];
   */
  repeatedFixed32: number[];

  constructor(data?: PartialMessage<PackedFixed32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.PackedFixed32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PackedFixed32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PackedFixed32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PackedFixed32;

  static equals(a: PackedFixed32 | PlainMessage<PackedFixed32> | undefined, b: PackedFixed32 | PlainMessage<PackedFixed32> | undefined): boolean;
}

/**
 * @generated from message protobuf_unittest.NonPackedFixed32
 */
export declare class NonPackedFixed32 extends Message<NonPackedFixed32> {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048;
   */
  repeatedFixed32: number[];

  constructor(data?: PartialMessage<NonPackedFixed32>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.NonPackedFixed32";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NonPackedFixed32;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NonPackedFixed32;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NonPackedFixed32;

  static equals(a: NonPackedFixed32 | PlainMessage<NonPackedFixed32> | undefined, b: NonPackedFixed32 | PlainMessage<NonPackedFixed32> | undefined): boolean;
}

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from message protobuf_unittest.DupEnum
 */
export declare class DupEnum extends Message<DupEnum> {
  constructor(data?: PartialMessage<DupEnum>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.DupEnum";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DupEnum;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DupEnum;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DupEnum;

  static equals(a: DupEnum | PlainMessage<DupEnum> | undefined, b: DupEnum | PlainMessage<DupEnum> | undefined): boolean;
}

/**
 * @generated from enum protobuf_unittest.DupEnum.TestEnumWithDupValueLite
 */
export declare enum DupEnum_TestEnumWithDupValueLite {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

/**
 * @generated from message protobuf_unittest.RecursiveMessage
 */
export declare class RecursiveMessage extends Message<RecursiveMessage> {
  /**
   * @generated from field: optional protobuf_unittest.RecursiveMessage recurse = 1;
   */
  recurse?: RecursiveMessage;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload?: Uint8Array;

  constructor(data?: PartialMessage<RecursiveMessage>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "protobuf_unittest.RecursiveMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecursiveMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecursiveMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecursiveMessage;

  static equals(a: RecursiveMessage | PlainMessage<RecursiveMessage> | undefined, b: RecursiveMessage | PlainMessage<RecursiveMessage> | undefined): boolean;
}

