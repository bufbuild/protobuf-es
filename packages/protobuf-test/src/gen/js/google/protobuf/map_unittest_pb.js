// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.8.0 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/map_unittest.proto (package protobuf_unittest, syntax proto3)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In map_test_util.h we do "using namespace unittest = protobuf_unittest".

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { fileDesc_google_protobuf_unittest } from "./unittest_pb.js";

export const fileDesc_google_protobuf_map_unittest = /*@__PURE__*/
  fileDesc("", [fileDesc_google_protobuf_unittest]);

// Describes the message protobuf_unittest.TestMap. Use `create(TestMapDesc)` to create a new TestMap.
export const TestMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 0);

// Describes the message protobuf_unittest.TestMapSubmessage. Use `create(TestMapSubmessageDesc)` to create a new TestMapSubmessage.
export const TestMapSubmessageDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 1);

// Describes the message protobuf_unittest.TestMessageMap. Use `create(TestMessageMapDesc)` to create a new TestMessageMap.
export const TestMessageMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 2);

// Describes the message protobuf_unittest.TestSameTypeMap. Use `create(TestSameTypeMapDesc)` to create a new TestSameTypeMap.
export const TestSameTypeMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 3);

// Describes the message protobuf_unittest.TestRequiredMessageMap. Use `create(TestRequiredMessageMapDesc)` to create a new TestRequiredMessageMap.
export const TestRequiredMessageMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 4);

// Describes the message protobuf_unittest.TestArenaMap. Use `create(TestArenaMapDesc)` to create a new TestArenaMap.
export const TestArenaMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 5);

// Describes the message protobuf_unittest.MessageContainingEnumCalledType. Use `create(MessageContainingEnumCalledTypeDesc)` to create a new MessageContainingEnumCalledType.
export const MessageContainingEnumCalledTypeDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 6);

// Describes the enum protobuf_unittest.MessageContainingEnumCalledType.Type.
export const MessageContainingEnumCalledType_TypeDesc = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_map_unittest, 6, 0);

/**
 * @generated from enum protobuf_unittest.MessageContainingEnumCalledType.Type
 */
export const MessageContainingEnumCalledType_Type = /*@__PURE__*/
  tsEnum(MessageContainingEnumCalledType_TypeDesc);

// Describes the message protobuf_unittest.MessageContainingMapCalledEntry. Use `create(MessageContainingMapCalledEntryDesc)` to create a new MessageContainingMapCalledEntry.
export const MessageContainingMapCalledEntryDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 7);

// Describes the message protobuf_unittest.TestRecursiveMapMessage. Use `create(TestRecursiveMapMessageDesc)` to create a new TestRecursiveMapMessage.
export const TestRecursiveMapMessageDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 8);

// Describes the message protobuf_unittest.TestI32StrMap. Use `create(TestI32StrMapDesc)` to create a new TestI32StrMap.
export const TestI32StrMapDesc = /*@__PURE__*/
  messageDesc(fileDesc_google_protobuf_map_unittest, 9);

// Describes the enum protobuf_unittest.MapEnum.
export const MapEnumDesc = /*@__PURE__*/
  enumDesc(fileDesc_google_protobuf_map_unittest, 0);

/**
 * @generated from enum protobuf_unittest.MapEnum
 */
export const MapEnum = /*@__PURE__*/
  tsEnum(MapEnumDesc);

