// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Author: kenton@google.com (Kenton Varda)
//
// This is like unittest.proto but with optimize_for = LITE_RUNTIME.

// @generated by protoc-gen-es-next v1.7.2 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest_lite.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

import type { DescFile } from "@bufbuild/protobuf";
import type { Message } from "@bufbuild/protobuf/next";
import type { ImportEnumLite, ImportMessageLite } from "./unittest_import_lite_pbv2.js";
import type { PublicImportMessageLite } from "./unittest_import_public_lite_pbv2.js";
import type { TypedDescEnum, TypedDescExtension, TypedDescMessage } from "@bufbuild/protobuf/next/codegenv1";

export declare const fileDesc_google_protobuf_unittest_lite: DescFile;

/**
 * Same as TestAllTypes but with the lite runtime.
 *
 * @generated from message protobuf_unittest.TestAllTypesLite
 */
export declare type TestAllTypesLite = Message<"protobuf_unittest.TestAllTypesLite"> & {
  /**
   * Singular
   *
   * @generated from field: optional int32 optional_int32 = 1;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int64 optional_int64 = 2;
   */
  optionalInt64: bigint;

  /**
   * @generated from field: optional uint32 optional_uint32 = 3;
   */
  optionalUint32: number;

  /**
   * @generated from field: optional uint64 optional_uint64 = 4;
   */
  optionalUint64: bigint;

  /**
   * @generated from field: optional sint32 optional_sint32 = 5;
   */
  optionalSint32: number;

  /**
   * @generated from field: optional sint64 optional_sint64 = 6;
   */
  optionalSint64: bigint;

  /**
   * @generated from field: optional fixed32 optional_fixed32 = 7;
   */
  optionalFixed32: number;

  /**
   * @generated from field: optional fixed64 optional_fixed64 = 8;
   */
  optionalFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32: number;

  /**
   * @generated from field: optional sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64: bigint;

  /**
   * @generated from field: optional float optional_float = 11;
   */
  optionalFloat: number;

  /**
   * @generated from field: optional double optional_double = 12;
   */
  optionalDouble: number;

  /**
   * @generated from field: optional bool optional_bool = 13;
   */
  optionalBool: boolean;

  /**
   * @generated from field: optional string optional_string = 14;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 15;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.OptionalGroup optionalgroup = 16;
   */
  optionalgroup?: TestAllTypesLite_OptionalGroup;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
   */
  optionalImportEnum: ImportEnumLite;

  /**
   * @generated from field: optional string optional_string_piece = 24;
   */
  optionalStringPiece: string;

  /**
   * @generated from field: optional string optional_cord = 25;
   */
  optionalCord: string;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: optional protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.RepeatedGroup repeatedgroup = 46;
   */
  repeatedgroup: TestAllTypesLite_RepeatedGroup[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypesLite_NestedMessage[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessageLite[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessageLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypesLite_NestedEnum[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnumLite[];

  /**
   * @generated from field: repeated protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnumLite[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypesLite_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: optional int32 default_int32 = 61 [default = 41];
   */
  defaultInt32: number;

  /**
   * @generated from field: optional int64 default_int64 = 62 [default = 42];
   */
  defaultInt64: bigint;

  /**
   * @generated from field: optional uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32: number;

  /**
   * @generated from field: optional uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64: bigint;

  /**
   * @generated from field: optional sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32: number;

  /**
   * @generated from field: optional sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64: bigint;

  /**
   * @generated from field: optional fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32: number;

  /**
   * @generated from field: optional fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64: bigint;

  /**
   * @generated from field: optional sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32: number;

  /**
   * @generated from field: optional sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64: bigint;

  /**
   * @generated from field: optional float default_float = 71 [default = 51.5];
   */
  defaultFloat: number;

  /**
   * @generated from field: optional double default_double = 72 [default = 52000];
   */
  defaultDouble: number;

  /**
   * @generated from field: optional bool default_bool = 73 [default = true];
   */
  defaultBool: boolean;

  /**
   * @generated from field: optional string default_string = 74 [default = "hello"];
   */
  defaultString: string;

  /**
   * @generated from field: optional bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
   */
  defaultForeignEnum: ForeignEnumLite;

  /**
   * @generated from field: optional protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
   */
  defaultImportEnum: ImportEnumLite;

  /**
   * @generated from field: optional string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece: string;

  /**
   * @generated from field: optional string default_cord = 85 [default = "123"];
   */
  defaultCord: string;

  /**
   * For oneof test
   *
   * @generated from oneof protobuf_unittest.TestAllTypesLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
     */
    value: TestAllTypesLite_NestedMessage2;
    case: "oneofNestedMessage2";
  } | { case: undefined; value?: undefined };

  /**
   * Tests toString for non-repeated fields with a list suffix
   *
   * @generated from field: optional int32 deceptively_named_list = 116;
   */
  deceptivelyNamedList: number;
};

// Describes the message protobuf_unittest.TestAllTypesLite. Use `create(TestAllTypesLiteDesc)` to create a new TestAllTypesLite.
export declare const TestAllTypesLiteDesc: TypedDescMessage<TestAllTypesLite>;

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage
 */
export declare type TestAllTypesLite_NestedMessage = Message<"protobuf_unittest.TestAllTypesLite.NestedMessage"> & {
  /**
   * @generated from field: optional int32 bb = 1;
   */
  bb: number;

  /**
   * @generated from field: optional int64 cc = 2;
   */
  cc: bigint;

  /**
   * @generated from field: repeated int32 dd = 3 [packed = true];
   */
  dd: number[];
};

// Describes the message protobuf_unittest.TestAllTypesLite.NestedMessage. Use `create(TestAllTypesLite_NestedMessageDesc)` to create a new TestAllTypesLite_NestedMessage.
export declare const TestAllTypesLite_NestedMessageDesc: TypedDescMessage<TestAllTypesLite_NestedMessage>;

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.NestedMessage2
 */
export declare type TestAllTypesLite_NestedMessage2 = Message<"protobuf_unittest.TestAllTypesLite.NestedMessage2"> & {
  /**
   * @generated from field: optional int32 dd = 1;
   */
  dd: number;
};

// Describes the message protobuf_unittest.TestAllTypesLite.NestedMessage2. Use `create(TestAllTypesLite_NestedMessage2Desc)` to create a new TestAllTypesLite_NestedMessage2.
export declare const TestAllTypesLite_NestedMessage2Desc: TypedDescMessage<TestAllTypesLite_NestedMessage2>;

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.OptionalGroup
 */
export declare type TestAllTypesLite_OptionalGroup = Message<"protobuf_unittest.TestAllTypesLite.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestAllTypesLite.OptionalGroup. Use `create(TestAllTypesLite_OptionalGroupDesc)` to create a new TestAllTypesLite_OptionalGroup.
export declare const TestAllTypesLite_OptionalGroupDesc: TypedDescMessage<TestAllTypesLite_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestAllTypesLite.RepeatedGroup
 */
export declare type TestAllTypesLite_RepeatedGroup = Message<"protobuf_unittest.TestAllTypesLite.RepeatedGroup"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

// Describes the message protobuf_unittest.TestAllTypesLite.RepeatedGroup. Use `create(TestAllTypesLite_RepeatedGroupDesc)` to create a new TestAllTypesLite_RepeatedGroup.
export declare const TestAllTypesLite_RepeatedGroupDesc: TypedDescMessage<TestAllTypesLite_RepeatedGroup>;

/**
 * @generated from enum protobuf_unittest.TestAllTypesLite.NestedEnum
 */
export enum TestAllTypesLite_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

// Describes the enum protobuf_unittest.TestAllTypesLite.NestedEnum.
export declare const TestAllTypesLite_NestedEnumDesc: TypedDescEnum<TestAllTypesLite_NestedEnum>;

/**
 * @generated from message protobuf_unittest.ForeignMessageLite
 */
export declare type ForeignMessageLite = Message<"protobuf_unittest.ForeignMessageLite"> & {
  /**
   * @generated from field: optional int32 c = 1;
   */
  c: number;
};

// Describes the message protobuf_unittest.ForeignMessageLite. Use `create(ForeignMessageLiteDesc)` to create a new ForeignMessageLite.
export declare const ForeignMessageLiteDesc: TypedDescMessage<ForeignMessageLite>;

/**
 * @generated from message protobuf_unittest.TestPackedTypesLite
 */
export declare type TestPackedTypesLite = Message<"protobuf_unittest.TestPackedTypesLite"> & {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [packed = true];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [packed = true];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [packed = true];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [packed = true];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [packed = true];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [packed = true];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [packed = true];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [packed = true];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [packed = true];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [packed = true];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [packed = true];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [packed = true];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
   */
  packedEnum: ForeignEnumLite[];
};

// Describes the message protobuf_unittest.TestPackedTypesLite. Use `create(TestPackedTypesLiteDesc)` to create a new TestPackedTypesLite.
export declare const TestPackedTypesLiteDesc: TypedDescMessage<TestPackedTypesLite>;

/**
 * @generated from message protobuf_unittest.TestAllExtensionsLite
 */
export declare type TestAllExtensionsLite = Message<"protobuf_unittest.TestAllExtensionsLite"> & {
};

// Describes the message protobuf_unittest.TestAllExtensionsLite. Use `create(TestAllExtensionsLiteDesc)` to create a new TestAllExtensionsLite.
export declare const TestAllExtensionsLiteDesc: TypedDescMessage<TestAllExtensionsLite>;

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension_lite
 */
export declare type OptionalGroup_extension_lite = Message<"protobuf_unittest.OptionalGroup_extension_lite"> & {
  /**
   * @generated from field: optional int32 a = 17;
   */
  a: number;
};

// Describes the message protobuf_unittest.OptionalGroup_extension_lite. Use `create(OptionalGroup_extension_liteDesc)` to create a new OptionalGroup_extension_lite.
export declare const OptionalGroup_extension_liteDesc: TypedDescMessage<OptionalGroup_extension_lite>;

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension_lite
 */
export declare type RepeatedGroup_extension_lite = Message<"protobuf_unittest.RepeatedGroup_extension_lite"> & {
  /**
   * @generated from field: optional int32 a = 47;
   */
  a: number;
};

// Describes the message protobuf_unittest.RepeatedGroup_extension_lite. Use `create(RepeatedGroup_extension_liteDesc)` to create a new RepeatedGroup_extension_lite.
export declare const RepeatedGroup_extension_liteDesc: TypedDescMessage<RepeatedGroup_extension_lite>;

/**
 * @generated from message protobuf_unittest.TestPackedExtensionsLite
 */
export declare type TestPackedExtensionsLite = Message<"protobuf_unittest.TestPackedExtensionsLite"> & {
};

// Describes the message protobuf_unittest.TestPackedExtensionsLite. Use `create(TestPackedExtensionsLiteDesc)` to create a new TestPackedExtensionsLite.
export declare const TestPackedExtensionsLiteDesc: TypedDescMessage<TestPackedExtensionsLite>;

/**
 * @generated from message protobuf_unittest.TestNestedExtensionLite
 */
export declare type TestNestedExtensionLite = Message<"protobuf_unittest.TestNestedExtensionLite"> & {
};

// Describes the message protobuf_unittest.TestNestedExtensionLite. Use `create(TestNestedExtensionLiteDesc)` to create a new TestNestedExtensionLite.
export declare const TestNestedExtensionLiteDesc: TypedDescMessage<TestNestedExtensionLite>;

/**
 * @generated from extension: optional int32 nested_extension = 12345;
 */
export declare const TestNestedExtensionLite_nested_extension: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * Test that deprecated fields work.  We only verify that they compile (at one
 * point this failed).
 *
 * @generated from message protobuf_unittest.TestDeprecatedLite
 */
export declare type TestDeprecatedLite = Message<"protobuf_unittest.TestDeprecatedLite"> & {
  /**
   * @generated from field: optional int32 deprecated_field = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedField: number;

  /**
   * @generated from field: required int32 deprecated_field2 = 2 [deprecated = true];
   * @deprecated
   */
  deprecatedField2: number;

  /**
   * @generated from field: optional string deprecated_field3 = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedField3: string;

  /**
   * @generated from field: optional protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedField4?: TestDeprecatedLite;
};

// Describes the message protobuf_unittest.TestDeprecatedLite. Use `create(TestDeprecatedLiteDesc)` to create a new TestDeprecatedLite.
export declare const TestDeprecatedLiteDesc: TypedDescMessage<TestDeprecatedLite>;

/**
 * See the comments of the same type in unittest.proto.
 *
 * @generated from message protobuf_unittest.TestParsingMergeLite
 */
export declare type TestParsingMergeLite = Message<"protobuf_unittest.TestParsingMergeLite"> & {
  /**
   * @generated from field: required protobuf_unittest.TestAllTypesLite required_all_types = 1;
   */
  requiredAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypesLite[];

  /**
   * @generated from field: optional protobuf_unittest.TestParsingMergeLite.OptionalGroup optionalgroup = 10;
   */
  optionalgroup?: TestParsingMergeLite_OptionalGroup;

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedGroup repeatedgroup = 20;
   */
  repeatedgroup: TestParsingMergeLite_RepeatedGroup[];
};

// Describes the message protobuf_unittest.TestParsingMergeLite. Use `create(TestParsingMergeLiteDesc)` to create a new TestParsingMergeLite.
export declare const TestParsingMergeLiteDesc: TypedDescMessage<TestParsingMergeLite>;

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator
 */
export declare type TestParsingMergeLite_RepeatedFieldsGenerator = Message<"protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator"> & {
  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field1 = 1;
   */
  field1: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field2 = 2;
   */
  field2: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite field3 = 3;
   */
  field3: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 group1 = 10;
   */
  group1: TestParsingMergeLite_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 group2 = 20;
   */
  group2: TestParsingMergeLite_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext1 = 1000;
   */
  ext1: TestAllTypesLite[];

  /**
   * @generated from field: repeated protobuf_unittest.TestAllTypesLite ext2 = 1001;
   */
  ext2: TestAllTypesLite[];
};

// Describes the message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator. Use `create(TestParsingMergeLite_RepeatedFieldsGeneratorDesc)` to create a new TestParsingMergeLite_RepeatedFieldsGenerator.
export declare const TestParsingMergeLite_RepeatedFieldsGeneratorDesc: TypedDescMessage<TestParsingMergeLite_RepeatedFieldsGenerator>;

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1
 */
export declare type TestParsingMergeLite_RepeatedFieldsGenerator_Group1 = Message<"protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 11;
   */
  field1?: TestAllTypesLite;
};

// Describes the message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1. Use `create(TestParsingMergeLite_RepeatedFieldsGenerator_Group1Desc)` to create a new TestParsingMergeLite_RepeatedFieldsGenerator_Group1.
export declare const TestParsingMergeLite_RepeatedFieldsGenerator_Group1Desc: TypedDescMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1>;

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2
 */
export declare type TestParsingMergeLite_RepeatedFieldsGenerator_Group2 = Message<"protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite field1 = 21;
   */
  field1?: TestAllTypesLite;
};

// Describes the message protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2. Use `create(TestParsingMergeLite_RepeatedFieldsGenerator_Group2Desc)` to create a new TestParsingMergeLite_RepeatedFieldsGenerator_Group2.
export declare const TestParsingMergeLite_RepeatedFieldsGenerator_Group2Desc: TypedDescMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2>;

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.OptionalGroup
 */
export declare type TestParsingMergeLite_OptionalGroup = Message<"protobuf_unittest.TestParsingMergeLite.OptionalGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypesLite;
};

// Describes the message protobuf_unittest.TestParsingMergeLite.OptionalGroup. Use `create(TestParsingMergeLite_OptionalGroupDesc)` to create a new TestParsingMergeLite_OptionalGroup.
export declare const TestParsingMergeLite_OptionalGroupDesc: TypedDescMessage<TestParsingMergeLite_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestParsingMergeLite.RepeatedGroup
 */
export declare type TestParsingMergeLite_RepeatedGroup = Message<"protobuf_unittest.TestParsingMergeLite.RepeatedGroup"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypesLite;
};

// Describes the message protobuf_unittest.TestParsingMergeLite.RepeatedGroup. Use `create(TestParsingMergeLite_RepeatedGroupDesc)` to create a new TestParsingMergeLite_RepeatedGroup.
export declare const TestParsingMergeLite_RepeatedGroupDesc: TypedDescMessage<TestParsingMergeLite_RepeatedGroup>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite optional_ext = 1000;
 */
export declare const TestParsingMergeLite_optional_ext: TypedDescExtension<TestParsingMergeLite, TestAllTypesLite>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypesLite repeated_ext = 1001;
 */
export declare const TestParsingMergeLite_repeated_ext: TypedDescExtension<TestParsingMergeLite, TestAllTypesLite[]>;

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeExceptionLite
 */
export declare type TestMergeExceptionLite = Message<"protobuf_unittest.TestMergeExceptionLite"> & {
  /**
   * @generated from field: optional protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
   */
  allExtensions?: TestAllExtensionsLite;
};

// Describes the message protobuf_unittest.TestMergeExceptionLite. Use `create(TestMergeExceptionLiteDesc)` to create a new TestMergeExceptionLite.
export declare const TestMergeExceptionLiteDesc: TypedDescMessage<TestMergeExceptionLite>;

/**
 * TestEmptyMessageLite is used to test unknown fields support in lite mode.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageLite
 */
export declare type TestEmptyMessageLite = Message<"protobuf_unittest.TestEmptyMessageLite"> & {
};

// Describes the message protobuf_unittest.TestEmptyMessageLite. Use `create(TestEmptyMessageLiteDesc)` to create a new TestEmptyMessageLite.
export declare const TestEmptyMessageLiteDesc: TypedDescMessage<TestEmptyMessageLite>;

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensionsLite
 */
export declare type TestEmptyMessageWithExtensionsLite = Message<"protobuf_unittest.TestEmptyMessageWithExtensionsLite"> & {
};

// Describes the message protobuf_unittest.TestEmptyMessageWithExtensionsLite. Use `create(TestEmptyMessageWithExtensionsLiteDesc)` to create a new TestEmptyMessageWithExtensionsLite.
export declare const TestEmptyMessageWithExtensionsLiteDesc: TypedDescMessage<TestEmptyMessageWithExtensionsLite>;

/**
 * @generated from message protobuf_unittest.V1MessageLite
 */
export declare type V1MessageLite = Message<"protobuf_unittest.V1MessageLite"> & {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField: number;

  /**
   * @generated from field: optional protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
   */
  enumField: V1EnumLite;
};

// Describes the message protobuf_unittest.V1MessageLite. Use `create(V1MessageLiteDesc)` to create a new V1MessageLite.
export declare const V1MessageLiteDesc: TypedDescMessage<V1MessageLite>;

/**
 * @generated from message protobuf_unittest.V2MessageLite
 */
export declare type V2MessageLite = Message<"protobuf_unittest.V2MessageLite"> & {
  /**
   * @generated from field: required int32 int_field = 1;
   */
  intField: number;

  /**
   * @generated from field: optional protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
   */
  enumField: V2EnumLite;
};

// Describes the message protobuf_unittest.V2MessageLite. Use `create(V2MessageLiteDesc)` to create a new V2MessageLite.
export declare const V2MessageLiteDesc: TypedDescMessage<V2MessageLite>;

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite
 */
export declare type TestHugeFieldNumbersLite = Message<"protobuf_unittest.TestHugeFieldNumbersLite"> & {
  /**
   * @generated from field: optional int32 optional_int32 = 536870000;
   */
  optionalInt32: number;

  /**
   * @generated from field: optional int32 fixed_32 = 536870001;
   */
  fixed32: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002 [packed = false];
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [packed = true];
   */
  packedInt32: number[];

  /**
   * @generated from field: optional protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
   */
  optionalEnum: ForeignEnumLite;

  /**
   * @generated from field: optional string optional_string = 536870005;
   */
  optionalString: string;

  /**
   * @generated from field: optional bytes optional_bytes = 536870006;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: optional protobuf_unittest.ForeignMessageLite optional_message = 536870007;
   */
  optionalMessage?: ForeignMessageLite;

  /**
   * @generated from field: optional protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup optionalgroup = 536870008;
   */
  optionalgroup?: TestHugeFieldNumbersLite_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof protobuf_unittest.TestHugeFieldNumbersLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
     */
    value: TestAllTypesLite;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestHugeFieldNumbersLite. Use `create(TestHugeFieldNumbersLiteDesc)` to create a new TestHugeFieldNumbersLite.
export declare const TestHugeFieldNumbersLiteDesc: TypedDescMessage<TestHugeFieldNumbersLite>;

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup
 */
export declare type TestHugeFieldNumbersLite_OptionalGroup = Message<"protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup"> & {
  /**
   * @generated from field: optional int32 group_a = 536870009;
   */
  groupA: number;
};

// Describes the message protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup. Use `create(TestHugeFieldNumbersLite_OptionalGroupDesc)` to create a new TestHugeFieldNumbersLite_OptionalGroup.
export declare const TestHugeFieldNumbersLite_OptionalGroupDesc: TypedDescMessage<TestHugeFieldNumbersLite_OptionalGroup>;

/**
 * @generated from message protobuf_unittest.TestOneofParsingLite
 */
export declare type TestOneofParsingLite = Message<"protobuf_unittest.TestOneofParsingLite"> & {
  /**
   * @generated from oneof protobuf_unittest.TestOneofParsingLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: int32 oneof_int32 = 1;
     */
    value: number;
    case: "oneofInt32";
  } | {
    /**
     * @generated from field: protobuf_unittest.TestAllTypesLite oneof_submessage = 2;
     */
    value: TestAllTypesLite;
    case: "oneofSubmessage";
  } | {
    /**
     * @generated from field: string oneof_string = 3;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 4 [default = "default bytes"];
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_string_cord = 5 [default = "default Cord"];
     */
    value: string;
    case: "oneofStringCord";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_cord = 6;
     */
    value: Uint8Array;
    case: "oneofBytesCord";
  } | {
    /**
     * @generated from field: string oneof_string_string_piece = 7;
     */
    value: string;
    case: "oneofStringStringPiece";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_string_piece = 8 [default = "default StringPiece"];
     */
    value: Uint8Array;
    case: "oneofBytesStringPiece";
  } | {
    /**
     * @generated from field: protobuf_unittest.V2EnumLite oneof_enum = 9;
     */
    value: V2EnumLite;
    case: "oneofEnum";
  } | { case: undefined; value?: undefined };
};

// Describes the message protobuf_unittest.TestOneofParsingLite. Use `create(TestOneofParsingLiteDesc)` to create a new TestOneofParsingLite.
export declare const TestOneofParsingLiteDesc: TypedDescMessage<TestOneofParsingLite>;

/**
 * @generated from message protobuf_unittest.TestMessageSetLite
 */
export declare type TestMessageSetLite = Message<"protobuf_unittest.TestMessageSetLite"> & {
};

// Describes the message protobuf_unittest.TestMessageSetLite. Use `create(TestMessageSetLiteDesc)` to create a new TestMessageSetLite.
export declare const TestMessageSetLiteDesc: TypedDescMessage<TestMessageSetLite>;

/**
 * The following four messages are set up to test for wire compatibility between
 * packed and non-packed repeated fields. We use the field number 2048, because
 * that is large enough to require a 3-byte varint for the tag.
 *
 * @generated from message protobuf_unittest.PackedInt32
 */
export declare type PackedInt32 = Message<"protobuf_unittest.PackedInt32"> & {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048 [packed = true];
   */
  repeatedInt32: number[];
};

// Describes the message protobuf_unittest.PackedInt32. Use `create(PackedInt32Desc)` to create a new PackedInt32.
export declare const PackedInt32Desc: TypedDescMessage<PackedInt32>;

/**
 * @generated from message protobuf_unittest.NonPackedInt32
 */
export declare type NonPackedInt32 = Message<"protobuf_unittest.NonPackedInt32"> & {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048;
   */
  repeatedInt32: number[];
};

// Describes the message protobuf_unittest.NonPackedInt32. Use `create(NonPackedInt32Desc)` to create a new NonPackedInt32.
export declare const NonPackedInt32Desc: TypedDescMessage<NonPackedInt32>;

/**
 * @generated from message protobuf_unittest.PackedFixed32
 */
export declare type PackedFixed32 = Message<"protobuf_unittest.PackedFixed32"> & {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048 [packed = true];
   */
  repeatedFixed32: number[];
};

// Describes the message protobuf_unittest.PackedFixed32. Use `create(PackedFixed32Desc)` to create a new PackedFixed32.
export declare const PackedFixed32Desc: TypedDescMessage<PackedFixed32>;

/**
 * @generated from message protobuf_unittest.NonPackedFixed32
 */
export declare type NonPackedFixed32 = Message<"protobuf_unittest.NonPackedFixed32"> & {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048;
   */
  repeatedFixed32: number[];
};

// Describes the message protobuf_unittest.NonPackedFixed32. Use `create(NonPackedFixed32Desc)` to create a new NonPackedFixed32.
export declare const NonPackedFixed32Desc: TypedDescMessage<NonPackedFixed32>;

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from message protobuf_unittest.DupEnum
 */
export declare type DupEnum = Message<"protobuf_unittest.DupEnum"> & {
};

// Describes the message protobuf_unittest.DupEnum. Use `create(DupEnumDesc)` to create a new DupEnum.
export declare const DupEnumDesc: TypedDescMessage<DupEnum>;

/**
 * @generated from enum protobuf_unittest.DupEnum.TestEnumWithDupValueLite
 */
export enum DupEnum_TestEnumWithDupValueLite {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

// Describes the enum protobuf_unittest.DupEnum.TestEnumWithDupValueLite.
export declare const DupEnum_TestEnumWithDupValueLiteDesc: TypedDescEnum<DupEnum_TestEnumWithDupValueLite>;

/**
 * @generated from message protobuf_unittest.RecursiveMessage
 */
export declare type RecursiveMessage = Message<"protobuf_unittest.RecursiveMessage"> & {
  /**
   * @generated from field: optional protobuf_unittest.RecursiveMessage recurse = 1;
   */
  recurse?: RecursiveMessage;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload: Uint8Array;
};

// Describes the message protobuf_unittest.RecursiveMessage. Use `create(RecursiveMessageDesc)` to create a new RecursiveMessage.
export declare const RecursiveMessageDesc: TypedDescMessage<RecursiveMessage>;

/**
 * @generated from enum protobuf_unittest.ForeignEnumLite
 */
export enum ForeignEnumLite {
  /**
   * @generated from enum value: FOREIGN_LITE_FOO = 4;
   */
  FOREIGN_LITE_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_LITE_BAZ = 6;
   */
  FOREIGN_LITE_BAZ = 6,

  /**
   * @generated from enum value: FOREIGN_LITE_BAR = 5;
   */
  FOREIGN_LITE_BAR = 5,
}

// Describes the enum protobuf_unittest.ForeignEnumLite.
export declare const ForeignEnumLiteDesc: TypedDescEnum<ForeignEnumLite>;

/**
 * @generated from enum protobuf_unittest.V1EnumLite
 */
export enum V1EnumLite {
  /**
   * @generated from enum value: V1_FIRST = 1;
   */
  V1_FIRST = 1,
}

// Describes the enum protobuf_unittest.V1EnumLite.
export declare const V1EnumLiteDesc: TypedDescEnum<V1EnumLite>;

/**
 * @generated from enum protobuf_unittest.V2EnumLite
 */
export enum V2EnumLite {
  /**
   * @generated from enum value: V2_FIRST = 1;
   */
  V2_FIRST = 1,

  /**
   * @generated from enum value: V2_SECOND = 2;
   */
  V2_SECOND = 2,
}

// Describes the enum protobuf_unittest.V2EnumLite.
export declare const V2EnumLiteDesc: TypedDescEnum<V2EnumLite>;

/**
 * Singular
 *
 * @generated from extension: optional int32 optional_int32_extension_lite = 1;
 */
export declare const optional_int32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional int64 optional_int64_extension_lite = 2;
 */
export declare const optional_int64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional uint32 optional_uint32_extension_lite = 3;
 */
export declare const optional_uint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional uint64 optional_uint64_extension_lite = 4;
 */
export declare const optional_uint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional sint32 optional_sint32_extension_lite = 5;
 */
export declare const optional_sint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional sint64 optional_sint64_extension_lite = 6;
 */
export declare const optional_sint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional fixed32 optional_fixed32_extension_lite = 7;
 */
export declare const optional_fixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional fixed64 optional_fixed64_extension_lite = 8;
 */
export declare const optional_fixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional sfixed32 optional_sfixed32_extension_lite = 9;
 */
export declare const optional_sfixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional sfixed64 optional_sfixed64_extension_lite = 10;
 */
export declare const optional_sfixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional float optional_float_extension_lite = 11;
 */
export declare const optional_float_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional double optional_double_extension_lite = 12;
 */
export declare const optional_double_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional bool optional_bool_extension_lite = 13;
 */
export declare const optional_bool_extension_lite: TypedDescExtension<TestAllExtensionsLite, boolean>;

/**
 * @generated from extension: optional string optional_string_extension_lite = 14;
 */
export declare const optional_string_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * @generated from extension: optional bytes optional_bytes_extension_lite = 15;
 */
export declare const optional_bytes_extension_lite: TypedDescExtension<TestAllExtensionsLite, Uint8Array>;

/**
 * @generated from extension: optional protobuf_unittest.OptionalGroup_extension_lite optionalgroup_extension_lite = 16;
 */
export declare const optionalgroup_extension_lite: TypedDescExtension<TestAllExtensionsLite, OptionalGroup_extension_lite>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message_extension_lite = 18;
 */
export declare const optional_nested_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignMessageLite optional_foreign_message_extension_lite = 19;
 */
export declare const optional_foreign_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, ForeignMessageLite>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportMessageLite optional_import_message_extension_lite = 20;
 */
export declare const optional_import_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, ImportMessageLite>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum_extension_lite = 21;
 */
export declare const optional_nested_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnumLite optional_foreign_enum_extension_lite = 22;
 */
export declare const optional_foreign_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ForeignEnumLite>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnumLite optional_import_enum_extension_lite = 23;
 */
export declare const optional_import_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ImportEnumLite>;

/**
 * @generated from extension: optional string optional_string_piece_extension_lite = 24;
 */
export declare const optional_string_piece_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string optional_cord_extension_lite = 25;
 */
export declare const optional_cord_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * @generated from extension: optional protobuf_unittest_import.PublicImportMessageLite optional_public_import_message_extension_lite = 26;
 */
export declare const optional_public_import_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, PublicImportMessageLite>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message_extension_lite = 27;
 */
export declare const optional_lazy_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message_extension_lite = 28;
 */
export declare const optional_unverified_lazy_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage>;

/**
 * Repeated
 *
 * @generated from extension: repeated int32 repeated_int32_extension_lite = 31;
 */
export declare const repeated_int32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated int64 repeated_int64_extension_lite = 32;
 */
export declare const repeated_int64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated uint32 repeated_uint32_extension_lite = 33;
 */
export declare const repeated_uint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated uint64 repeated_uint64_extension_lite = 34;
 */
export declare const repeated_uint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated sint32 repeated_sint32_extension_lite = 35;
 */
export declare const repeated_sint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated sint64 repeated_sint64_extension_lite = 36;
 */
export declare const repeated_sint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated fixed32 repeated_fixed32_extension_lite = 37;
 */
export declare const repeated_fixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated fixed64 repeated_fixed64_extension_lite = 38;
 */
export declare const repeated_fixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated sfixed32 repeated_sfixed32_extension_lite = 39;
 */
export declare const repeated_sfixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated sfixed64 repeated_sfixed64_extension_lite = 40;
 */
export declare const repeated_sfixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated float repeated_float_extension_lite = 41;
 */
export declare const repeated_float_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated double repeated_double_extension_lite = 42;
 */
export declare const repeated_double_extension_lite: TypedDescExtension<TestAllExtensionsLite, number[]>;

/**
 * @generated from extension: repeated bool repeated_bool_extension_lite = 43;
 */
export declare const repeated_bool_extension_lite: TypedDescExtension<TestAllExtensionsLite, boolean[]>;

/**
 * @generated from extension: repeated string repeated_string_extension_lite = 44;
 */
export declare const repeated_string_extension_lite: TypedDescExtension<TestAllExtensionsLite, string[]>;

/**
 * @generated from extension: repeated bytes repeated_bytes_extension_lite = 45;
 */
export declare const repeated_bytes_extension_lite: TypedDescExtension<TestAllExtensionsLite, Uint8Array[]>;

/**
 * @generated from extension: repeated protobuf_unittest.RepeatedGroup_extension_lite repeatedgroup_extension_lite = 46;
 */
export declare const repeatedgroup_extension_lite: TypedDescExtension<TestAllExtensionsLite, RepeatedGroup_extension_lite[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message_extension_lite = 48;
 */
export declare const repeated_nested_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignMessageLite repeated_foreign_message_extension_lite = 49;
 */
export declare const repeated_foreign_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, ForeignMessageLite[]>;

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportMessageLite repeated_import_message_extension_lite = 50;
 */
export declare const repeated_import_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, ImportMessageLite[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum_extension_lite = 51;
 */
export declare const repeated_nested_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnumLite repeated_foreign_enum_extension_lite = 52;
 */
export declare const repeated_foreign_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ForeignEnumLite[]>;

/**
 * @generated from extension: repeated protobuf_unittest_import.ImportEnumLite repeated_import_enum_extension_lite = 53;
 */
export declare const repeated_import_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ImportEnumLite[]>;

/**
 * @generated from extension: repeated string repeated_string_piece_extension_lite = 54;
 */
export declare const repeated_string_piece_extension_lite: TypedDescExtension<TestAllExtensionsLite, string[]>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: repeated string repeated_cord_extension_lite = 55;
 */
export declare const repeated_cord_extension_lite: TypedDescExtension<TestAllExtensionsLite, string[]>;

/**
 * @generated from extension: repeated protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message_extension_lite = 57;
 */
export declare const repeated_lazy_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage[]>;

/**
 * Singular with defaults
 *
 * @generated from extension: optional int32 default_int32_extension_lite = 61 [default = 41];
 */
export declare const default_int32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional int64 default_int64_extension_lite = 62 [default = 42];
 */
export declare const default_int64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional uint32 default_uint32_extension_lite = 63 [default = 43];
 */
export declare const default_uint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional uint64 default_uint64_extension_lite = 64 [default = 44];
 */
export declare const default_uint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional sint32 default_sint32_extension_lite = 65 [default = -45];
 */
export declare const default_sint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional sint64 default_sint64_extension_lite = 66 [default = 46];
 */
export declare const default_sint64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional fixed32 default_fixed32_extension_lite = 67 [default = 47];
 */
export declare const default_fixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional fixed64 default_fixed64_extension_lite = 68 [default = 48];
 */
export declare const default_fixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional sfixed32 default_sfixed32_extension_lite = 69 [default = 49];
 */
export declare const default_sfixed32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional sfixed64 default_sfixed64_extension_lite = 70 [default = -50];
 */
export declare const default_sfixed64_extension_lite: TypedDescExtension<TestAllExtensionsLite, bigint>;

/**
 * @generated from extension: optional float default_float_extension_lite = 71 [default = 51.5];
 */
export declare const default_float_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional double default_double_extension_lite = 72 [default = 52000];
 */
export declare const default_double_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional bool default_bool_extension_lite = 73 [default = true];
 */
export declare const default_bool_extension_lite: TypedDescExtension<TestAllExtensionsLite, boolean>;

/**
 * @generated from extension: optional string default_string_extension_lite = 74 [default = "hello"];
 */
export declare const default_string_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * @generated from extension: optional bytes default_bytes_extension_lite = 75 [default = "world"];
 */
export declare const default_bytes_extension_lite: TypedDescExtension<TestAllExtensionsLite, Uint8Array>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum_extension_lite = 81 [default = BAR];
 */
export declare const default_nested_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum>;

/**
 * @generated from extension: optional protobuf_unittest.ForeignEnumLite default_foreign_enum_extension_lite = 82 [default = FOREIGN_LITE_BAR];
 */
export declare const default_foreign_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ForeignEnumLite>;

/**
 * @generated from extension: optional protobuf_unittest_import.ImportEnumLite default_import_enum_extension_lite = 83 [default = IMPORT_LITE_BAR];
 */
export declare const default_import_enum_extension_lite: TypedDescExtension<TestAllExtensionsLite, ImportEnumLite>;

/**
 * @generated from extension: optional string default_string_piece_extension_lite = 84 [default = "abc"];
 */
export declare const default_string_piece_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: optional string default_cord_extension_lite = 85 [default = "123"];
 */
export declare const default_cord_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * For oneof test
 *
 * @generated from extension: optional uint32 oneof_uint32_extension_lite = 111;
 */
export declare const oneof_uint32_extension_lite: TypedDescExtension<TestAllExtensionsLite, number>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message_extension_lite = 112;
 */
export declare const oneof_nested_message_extension_lite: TypedDescExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage>;

/**
 * @generated from extension: optional string oneof_string_extension_lite = 113;
 */
export declare const oneof_string_extension_lite: TypedDescExtension<TestAllExtensionsLite, string>;

/**
 * @generated from extension: optional bytes oneof_bytes_extension_lite = 114;
 */
export declare const oneof_bytes_extension_lite: TypedDescExtension<TestAllExtensionsLite, Uint8Array>;

/**
 * @generated from extension: repeated int32 packed_int32_extension_lite = 90 [packed = true];
 */
export declare const packed_int32_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated int64 packed_int64_extension_lite = 91 [packed = true];
 */
export declare const packed_int64_extension_lite: TypedDescExtension<TestPackedExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated uint32 packed_uint32_extension_lite = 92 [packed = true];
 */
export declare const packed_uint32_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated uint64 packed_uint64_extension_lite = 93 [packed = true];
 */
export declare const packed_uint64_extension_lite: TypedDescExtension<TestPackedExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated sint32 packed_sint32_extension_lite = 94 [packed = true];
 */
export declare const packed_sint32_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated sint64 packed_sint64_extension_lite = 95 [packed = true];
 */
export declare const packed_sint64_extension_lite: TypedDescExtension<TestPackedExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated fixed32 packed_fixed32_extension_lite = 96 [packed = true];
 */
export declare const packed_fixed32_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated fixed64 packed_fixed64_extension_lite = 97 [packed = true];
 */
export declare const packed_fixed64_extension_lite: TypedDescExtension<TestPackedExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated sfixed32 packed_sfixed32_extension_lite = 98 [packed = true];
 */
export declare const packed_sfixed32_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated sfixed64 packed_sfixed64_extension_lite = 99 [packed = true];
 */
export declare const packed_sfixed64_extension_lite: TypedDescExtension<TestPackedExtensionsLite, bigint[]>;

/**
 * @generated from extension: repeated float packed_float_extension_lite = 100 [packed = true];
 */
export declare const packed_float_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated double packed_double_extension_lite = 101 [packed = true];
 */
export declare const packed_double_extension_lite: TypedDescExtension<TestPackedExtensionsLite, number[]>;

/**
 * @generated from extension: repeated bool packed_bool_extension_lite = 102 [packed = true];
 */
export declare const packed_bool_extension_lite: TypedDescExtension<TestPackedExtensionsLite, boolean[]>;

/**
 * @generated from extension: repeated protobuf_unittest.ForeignEnumLite packed_enum_extension_lite = 103 [packed = true];
 */
export declare const packed_enum_extension_lite: TypedDescExtension<TestPackedExtensionsLite, ForeignEnumLite[]>;

/**
 * @generated from extension: optional protobuf_unittest.TestAllTypesLite test_all_types_lite = 536860000;
 */
export declare const test_all_types_lite: TypedDescExtension<TestHugeFieldNumbersLite, TestAllTypesLite>;

