// Copyright 2021-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.6.0 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/map_proto2_unittest.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In map_test_util.h we do "using namespace unittest = protobuf_unittest".

import { proto2 } from "@bufbuild/protobuf";
import { ImportEnumForMap } from "./unittest_import_pb.js";

/**
 * @generated from enum protobuf_unittest.Proto2MapEnum
 */
export const Proto2MapEnum = proto2.makeEnum(
  "protobuf_unittest.Proto2MapEnum",
  [
    {no: 0, name: "PROTO2_MAP_ENUM_FOO", localName: "FOO"},
    {no: 1, name: "PROTO2_MAP_ENUM_BAR", localName: "BAR"},
    {no: 2, name: "PROTO2_MAP_ENUM_BAZ", localName: "BAZ"},
  ],
);

/**
 * @generated from enum protobuf_unittest.Proto2MapEnumPlusExtra
 */
export const Proto2MapEnumPlusExtra = proto2.makeEnum(
  "protobuf_unittest.Proto2MapEnumPlusExtra",
  [
    {no: 0, name: "E_PROTO2_MAP_ENUM_FOO"},
    {no: 1, name: "E_PROTO2_MAP_ENUM_BAR"},
    {no: 2, name: "E_PROTO2_MAP_ENUM_BAZ"},
    {no: 3, name: "E_PROTO2_MAP_ENUM_EXTRA"},
  ],
);

/**
 * @generated from message protobuf_unittest.TestEnumMap
 */
export const TestEnumMap = proto2.makeMessageType(
  "protobuf_unittest.TestEnumMap",
  () => [
    { no: 101, name: "known_map_field", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 102, name: "unknown_map_field", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 200, name: "unknown_map_field_int64", kind: "map", K: 3 /* ScalarType.INT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 201, name: "unknown_map_field_uint64", kind: "map", K: 4 /* ScalarType.UINT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 202, name: "unknown_map_field_int32", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 203, name: "unknown_map_field_uint32", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 204, name: "unknown_map_field_fixed32", kind: "map", K: 7 /* ScalarType.FIXED32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 205, name: "unknown_map_field_fixed64", kind: "map", K: 6 /* ScalarType.FIXED64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 206, name: "unknown_map_field_bool", kind: "map", K: 8 /* ScalarType.BOOL */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 207, name: "unknown_map_field_string", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 208, name: "unknown_map_field_sint32", kind: "map", K: 17 /* ScalarType.SINT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 209, name: "unknown_map_field_sint64", kind: "map", K: 18 /* ScalarType.SINT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 210, name: "unknown_map_field_sfixed32", kind: "map", K: 15 /* ScalarType.SFIXED32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
    { no: 211, name: "unknown_map_field_sfixed64", kind: "map", K: 16 /* ScalarType.SFIXED64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnum)} },
  ],
);

/**
 * @generated from message protobuf_unittest.TestEnumMapPlusExtra
 */
export const TestEnumMapPlusExtra = proto2.makeMessageType(
  "protobuf_unittest.TestEnumMapPlusExtra",
  () => [
    { no: 101, name: "known_map_field", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 102, name: "unknown_map_field", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 200, name: "unknown_map_field_int64", kind: "map", K: 3 /* ScalarType.INT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 201, name: "unknown_map_field_uint64", kind: "map", K: 4 /* ScalarType.UINT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 202, name: "unknown_map_field_int32", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 203, name: "unknown_map_field_uint32", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 204, name: "unknown_map_field_fixed32", kind: "map", K: 7 /* ScalarType.FIXED32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 205, name: "unknown_map_field_fixed64", kind: "map", K: 6 /* ScalarType.FIXED64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 206, name: "unknown_map_field_bool", kind: "map", K: 8 /* ScalarType.BOOL */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 207, name: "unknown_map_field_string", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 208, name: "unknown_map_field_sint32", kind: "map", K: 17 /* ScalarType.SINT32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 209, name: "unknown_map_field_sint64", kind: "map", K: 18 /* ScalarType.SINT64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 210, name: "unknown_map_field_sfixed32", kind: "map", K: 15 /* ScalarType.SFIXED32 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
    { no: 211, name: "unknown_map_field_sfixed64", kind: "map", K: 16 /* ScalarType.SFIXED64 */, V: {kind: "enum", T: proto2.getEnumType(Proto2MapEnumPlusExtra)} },
  ],
);

/**
 * @generated from message protobuf_unittest.TestImportEnumMap
 */
export const TestImportEnumMap = proto2.makeMessageType(
  "protobuf_unittest.TestImportEnumMap",
  () => [
    { no: 1, name: "import_enum_amp", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "enum", T: proto2.getEnumType(ImportEnumForMap)} },
  ],
);

/**
 * @generated from message protobuf_unittest.TestIntIntMap
 */
export const TestIntIntMap = proto2.makeMessageType(
  "protobuf_unittest.TestIntIntMap",
  () => [
    { no: 1, name: "m", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "scalar", T: 5 /* ScalarType.INT32 */} },
  ],
);

/**
 * Test all key types: string, plus the non-floating-point scalars.
 *
 * @generated from message protobuf_unittest.TestMaps
 */
export const TestMaps = proto2.makeMessageType(
  "protobuf_unittest.TestMaps",
  () => [
    { no: 1, name: "m_int32", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 2, name: "m_int64", kind: "map", K: 3 /* ScalarType.INT64 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 3, name: "m_uint32", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 4, name: "m_uint64", kind: "map", K: 4 /* ScalarType.UINT64 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 5, name: "m_sint32", kind: "map", K: 17 /* ScalarType.SINT32 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 6, name: "m_sint64", kind: "map", K: 18 /* ScalarType.SINT64 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 7, name: "m_fixed32", kind: "map", K: 7 /* ScalarType.FIXED32 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 8, name: "m_fixed64", kind: "map", K: 6 /* ScalarType.FIXED64 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 9, name: "m_sfixed32", kind: "map", K: 15 /* ScalarType.SFIXED32 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 10, name: "m_sfixed64", kind: "map", K: 16 /* ScalarType.SFIXED64 */, V: {kind: "message", T: TestIntIntMap} },
    { no: 11, name: "m_bool", kind: "map", K: 8 /* ScalarType.BOOL */, V: {kind: "message", T: TestIntIntMap} },
    { no: 12, name: "m_string", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: TestIntIntMap} },
  ],
);

/**
 * Test maps in submessages.
 *
 * @generated from message protobuf_unittest.TestSubmessageMaps
 */
export const TestSubmessageMaps = proto2.makeMessageType(
  "protobuf_unittest.TestSubmessageMaps",
  () => [
    { no: 1, name: "m", kind: "message", T: TestMaps, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestProto2BytesMap
 */
export const TestProto2BytesMap = proto2.makeMessageType(
  "protobuf_unittest.TestProto2BytesMap",
  () => [
    { no: 1, name: "map_bytes", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "scalar", T: 12 /* ScalarType.BYTES */} },
    { no: 2, name: "map_string", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

