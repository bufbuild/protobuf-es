// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Author: kenton@google.com (Kenton Varda)
//  Based on original Protocol Buffers design by
//  Sanjay Ghemawat, Jeff Dean, and others.
//
// A proto file we will use for unit testing.
//
// LINT: ALLOW_GROUPS, LEGACY_NAMES

// @generated by protoc-gen-es v0.2.1 with parameter "ts_nocheck=false,target=js+dts"
// @generated from file google/protobuf/unittest.proto (package protobuf_unittest, syntax proto2)
/* eslint-disable */

// We don't put this in a package within proto2 because we need to make sure
// that the generated code doesn't depend on being in the proto2 namespace.
// In test_util.h we do "using namespace unittest = protobuf_unittest".

import {proto2, protoInt64} from "@bufbuild/protobuf";
import {ImportEnum, ImportMessage} from "./unittest_import_pb.js";
import {PublicImportMessage} from "./unittest_import_public_pb.js";

/**
 * @generated from enum protobuf_unittest.ForeignEnum
 */
export const ForeignEnum = proto2.makeEnum(
  "protobuf_unittest.ForeignEnum",
  [
    {no: 4, name: "FOREIGN_FOO"},
    {no: 5, name: "FOREIGN_BAR"},
    {no: 6, name: "FOREIGN_BAZ"},
  ],
);

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from enum protobuf_unittest.TestEnumWithDupValue
 */
export const TestEnumWithDupValue = proto2.makeEnum(
  "protobuf_unittest.TestEnumWithDupValue",
  [
    {no: 1, name: "FOO1"},
    {no: 2, name: "BAR1"},
    {no: 3, name: "BAZ"},
    {no: 1, name: "FOO2"},
    {no: 2, name: "BAR2"},
  ],
);

/**
 * Test an enum with large, unordered values.
 *
 * @generated from enum protobuf_unittest.TestSparseEnum
 */
export const TestSparseEnum = proto2.makeEnum(
  "protobuf_unittest.TestSparseEnum",
  [
    {no: 123, name: "SPARSE_A"},
    {no: 62374, name: "SPARSE_B"},
    {no: 12589234, name: "SPARSE_C"},
    {no: -15, name: "SPARSE_D"},
    {no: -53452, name: "SPARSE_E"},
    {no: 0, name: "SPARSE_F"},
    {no: 2, name: "SPARSE_G"},
  ],
);

/**
 * @generated from enum protobuf_unittest.VeryLargeEnum
 */
export const VeryLargeEnum = proto2.makeEnum(
  "protobuf_unittest.VeryLargeEnum",
  [
    {no: 0, name: "ENUM_LABEL_DEFAULT"},
    {no: 1, name: "ENUM_LABEL_1"},
    {no: 2, name: "ENUM_LABEL_2"},
    {no: 3, name: "ENUM_LABEL_3"},
    {no: 4, name: "ENUM_LABEL_4"},
    {no: 5, name: "ENUM_LABEL_5"},
    {no: 6, name: "ENUM_LABEL_6"},
    {no: 7, name: "ENUM_LABEL_7"},
    {no: 8, name: "ENUM_LABEL_8"},
    {no: 9, name: "ENUM_LABEL_9"},
    {no: 10, name: "ENUM_LABEL_10"},
    {no: 11, name: "ENUM_LABEL_11"},
    {no: 12, name: "ENUM_LABEL_12"},
    {no: 13, name: "ENUM_LABEL_13"},
    {no: 14, name: "ENUM_LABEL_14"},
    {no: 15, name: "ENUM_LABEL_15"},
    {no: 16, name: "ENUM_LABEL_16"},
    {no: 17, name: "ENUM_LABEL_17"},
    {no: 18, name: "ENUM_LABEL_18"},
    {no: 19, name: "ENUM_LABEL_19"},
    {no: 20, name: "ENUM_LABEL_20"},
    {no: 21, name: "ENUM_LABEL_21"},
    {no: 22, name: "ENUM_LABEL_22"},
    {no: 23, name: "ENUM_LABEL_23"},
    {no: 24, name: "ENUM_LABEL_24"},
    {no: 25, name: "ENUM_LABEL_25"},
    {no: 26, name: "ENUM_LABEL_26"},
    {no: 27, name: "ENUM_LABEL_27"},
    {no: 28, name: "ENUM_LABEL_28"},
    {no: 29, name: "ENUM_LABEL_29"},
    {no: 30, name: "ENUM_LABEL_30"},
    {no: 31, name: "ENUM_LABEL_31"},
    {no: 32, name: "ENUM_LABEL_32"},
    {no: 33, name: "ENUM_LABEL_33"},
    {no: 34, name: "ENUM_LABEL_34"},
    {no: 35, name: "ENUM_LABEL_35"},
    {no: 36, name: "ENUM_LABEL_36"},
    {no: 37, name: "ENUM_LABEL_37"},
    {no: 38, name: "ENUM_LABEL_38"},
    {no: 39, name: "ENUM_LABEL_39"},
    {no: 40, name: "ENUM_LABEL_40"},
    {no: 41, name: "ENUM_LABEL_41"},
    {no: 42, name: "ENUM_LABEL_42"},
    {no: 43, name: "ENUM_LABEL_43"},
    {no: 44, name: "ENUM_LABEL_44"},
    {no: 45, name: "ENUM_LABEL_45"},
    {no: 46, name: "ENUM_LABEL_46"},
    {no: 47, name: "ENUM_LABEL_47"},
    {no: 48, name: "ENUM_LABEL_48"},
    {no: 49, name: "ENUM_LABEL_49"},
    {no: 50, name: "ENUM_LABEL_50"},
    {no: 51, name: "ENUM_LABEL_51"},
    {no: 52, name: "ENUM_LABEL_52"},
    {no: 53, name: "ENUM_LABEL_53"},
    {no: 54, name: "ENUM_LABEL_54"},
    {no: 55, name: "ENUM_LABEL_55"},
    {no: 56, name: "ENUM_LABEL_56"},
    {no: 57, name: "ENUM_LABEL_57"},
    {no: 58, name: "ENUM_LABEL_58"},
    {no: 59, name: "ENUM_LABEL_59"},
    {no: 60, name: "ENUM_LABEL_60"},
    {no: 61, name: "ENUM_LABEL_61"},
    {no: 62, name: "ENUM_LABEL_62"},
    {no: 63, name: "ENUM_LABEL_63"},
    {no: 64, name: "ENUM_LABEL_64"},
    {no: 65, name: "ENUM_LABEL_65"},
    {no: 66, name: "ENUM_LABEL_66"},
    {no: 67, name: "ENUM_LABEL_67"},
    {no: 68, name: "ENUM_LABEL_68"},
    {no: 69, name: "ENUM_LABEL_69"},
    {no: 70, name: "ENUM_LABEL_70"},
    {no: 71, name: "ENUM_LABEL_71"},
    {no: 72, name: "ENUM_LABEL_72"},
    {no: 73, name: "ENUM_LABEL_73"},
    {no: 74, name: "ENUM_LABEL_74"},
    {no: 75, name: "ENUM_LABEL_75"},
    {no: 76, name: "ENUM_LABEL_76"},
    {no: 77, name: "ENUM_LABEL_77"},
    {no: 78, name: "ENUM_LABEL_78"},
    {no: 79, name: "ENUM_LABEL_79"},
    {no: 80, name: "ENUM_LABEL_80"},
    {no: 81, name: "ENUM_LABEL_81"},
    {no: 82, name: "ENUM_LABEL_82"},
    {no: 83, name: "ENUM_LABEL_83"},
    {no: 84, name: "ENUM_LABEL_84"},
    {no: 85, name: "ENUM_LABEL_85"},
    {no: 86, name: "ENUM_LABEL_86"},
    {no: 87, name: "ENUM_LABEL_87"},
    {no: 88, name: "ENUM_LABEL_88"},
    {no: 89, name: "ENUM_LABEL_89"},
    {no: 90, name: "ENUM_LABEL_90"},
    {no: 91, name: "ENUM_LABEL_91"},
    {no: 92, name: "ENUM_LABEL_92"},
    {no: 93, name: "ENUM_LABEL_93"},
    {no: 94, name: "ENUM_LABEL_94"},
    {no: 95, name: "ENUM_LABEL_95"},
    {no: 96, name: "ENUM_LABEL_96"},
    {no: 97, name: "ENUM_LABEL_97"},
    {no: 98, name: "ENUM_LABEL_98"},
    {no: 99, name: "ENUM_LABEL_99"},
    {no: 100, name: "ENUM_LABEL_100"},
  ],
);

/**
 * This proto includes every type of field in both singular and repeated
 * forms.
 *
 * @generated from message protobuf_unittest.TestAllTypes
 */
export const TestAllTypes = proto2.makeMessageType(
  "protobuf_unittest.TestAllTypes",
  () => [
    { no: 1, name: "optional_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 3, name: "optional_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "optional_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "optional_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 6, name: "optional_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, opt: true },
    { no: 7, name: "optional_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 8, name: "optional_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 9, name: "optional_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, opt: true },
    { no: 10, name: "optional_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, opt: true },
    { no: 11, name: "optional_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 12, name: "optional_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 13, name: "optional_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 14, name: "optional_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "optional_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 16, name: "optionalgroup", kind: "message", T: TestAllTypes_OptionalGroup, opt: true },
    { no: 18, name: "optional_nested_message", kind: "message", T: TestAllTypes_NestedMessage, opt: true },
    { no: 19, name: "optional_foreign_message", kind: "message", T: ForeignMessage, opt: true },
    { no: 20, name: "optional_import_message", kind: "message", T: ImportMessage, opt: true },
    { no: 21, name: "optional_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypes_NestedEnum), opt: true },
    { no: 22, name: "optional_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true },
    { no: 23, name: "optional_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnum), opt: true },
    { no: 24, name: "optional_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 25, name: "optional_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 26, name: "optional_public_import_message", kind: "message", T: PublicImportMessage, opt: true },
    { no: 27, name: "optional_lazy_message", kind: "message", T: TestAllTypes_NestedMessage, opt: true },
    { no: 28, name: "optional_unverified_lazy_message", kind: "message", T: TestAllTypes_NestedMessage, opt: true },
    { no: 31, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 32, name: "repeated_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 33, name: "repeated_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 34, name: "repeated_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 35, name: "repeated_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 36, name: "repeated_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 37, name: "repeated_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 38, name: "repeated_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 39, name: "repeated_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 40, name: "repeated_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 41, name: "repeated_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 42, name: "repeated_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 43, name: "repeated_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 44, name: "repeated_string", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 45, name: "repeated_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 46, name: "repeatedgroup", kind: "message", T: TestAllTypes_RepeatedGroup, repeated: true },
    { no: 48, name: "repeated_nested_message", kind: "message", T: TestAllTypes_NestedMessage, repeated: true },
    { no: 49, name: "repeated_foreign_message", kind: "message", T: ForeignMessage, repeated: true },
    { no: 50, name: "repeated_import_message", kind: "message", T: ImportMessage, repeated: true },
    { no: 51, name: "repeated_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypes_NestedEnum), repeated: true },
    { no: 52, name: "repeated_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), repeated: true },
    { no: 53, name: "repeated_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnum), repeated: true },
    { no: 54, name: "repeated_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 55, name: "repeated_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 57, name: "repeated_lazy_message", kind: "message", T: TestAllTypes_NestedMessage, repeated: true },
    { no: 61, name: "default_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: 41 },
    { no: 62, name: "default_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true, default: protoInt64.parse("42") },
    { no: 63, name: "default_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 43 },
    { no: 64, name: "default_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true, default: protoInt64.uParse("44") },
    { no: 65, name: "default_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true, default: -45 },
    { no: 66, name: "default_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, opt: true, default: protoInt64.parse("46") },
    { no: 67, name: "default_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true, default: 47 },
    { no: 68, name: "default_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true, default: protoInt64.uParse("48") },
    { no: 69, name: "default_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, opt: true, default: 49 },
    { no: 70, name: "default_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, opt: true, default: protoInt64.parse("-50") },
    { no: 71, name: "default_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 51.5 },
    { no: 72, name: "default_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true, default: 52000 },
    { no: 73, name: "default_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 74, name: "default_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "hello" },
    { no: 75, name: "default_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true, default: new Uint8Array([0x77, 0x6F, 0x72, 0x6C, 0x64]) },
    { no: 81, name: "default_nested_enum", kind: "enum", T: proto2.getEnumType(TestAllTypes_NestedEnum), opt: true, default: TestAllTypes_NestedEnum.BAR },
    { no: 82, name: "default_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true, default: ForeignEnum.FOREIGN_BAR },
    { no: 83, name: "default_import_enum", kind: "enum", T: proto2.getEnumType(ImportEnum), opt: true, default: ImportEnum.IMPORT_BAR },
    { no: 84, name: "default_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "abc" },
    { no: 85, name: "default_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "123" },
    { no: 111, name: "oneof_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "oneof_field" },
    { no: 112, name: "oneof_nested_message", kind: "message", T: TestAllTypes_NestedMessage, oneof: "oneof_field" },
    { no: 113, name: "oneof_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 114, name: "oneof_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "oneof_field" },
  ],
);

/**
 * @generated from enum protobuf_unittest.TestAllTypes.NestedEnum
 */
export const TestAllTypes_NestedEnum = proto2.makeEnum(
  "protobuf_unittest.TestAllTypes.NestedEnum",
  [
    {no: 1, name: "FOO"},
    {no: 2, name: "BAR"},
    {no: 3, name: "BAZ"},
    {no: -1, name: "NEG"},
  ],
);

/**
 * @generated from message protobuf_unittest.TestAllTypes.NestedMessage
 */
export const TestAllTypes_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestAllTypes.NestedMessage",
  () => [
    { no: 1, name: "bb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestAllTypes_NestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestAllTypes.OptionalGroup
 */
export const TestAllTypes_OptionalGroup = proto2.makeMessageType(
  "protobuf_unittest.TestAllTypes.OptionalGroup",
  () => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestAllTypes_OptionalGroup"},
);

/**
 * @generated from message protobuf_unittest.TestAllTypes.RepeatedGroup
 */
export const TestAllTypes_RepeatedGroup = proto2.makeMessageType(
  "protobuf_unittest.TestAllTypes.RepeatedGroup",
  () => [
    { no: 47, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestAllTypes_RepeatedGroup"},
);

/**
 * This proto includes a recursively nested message.
 *
 * @generated from message protobuf_unittest.NestedTestAllTypes
 */
export const NestedTestAllTypes = proto2.makeMessageType(
  "protobuf_unittest.NestedTestAllTypes",
  () => [
    { no: 1, name: "child", kind: "message", T: NestedTestAllTypes, opt: true },
    { no: 2, name: "payload", kind: "message", T: TestAllTypes, opt: true },
    { no: 3, name: "repeated_child", kind: "message", T: NestedTestAllTypes, repeated: true },
    { no: 4, name: "lazy_child", kind: "message", T: NestedTestAllTypes, opt: true },
    { no: 5, name: "eager_child", kind: "message", T: TestAllTypes, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestDeprecatedFields
 */
export const TestDeprecatedFields = proto2.makeMessageType(
  "protobuf_unittest.TestDeprecatedFields",
  () => [
    { no: 1, name: "deprecated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "deprecated_int32_in_oneof", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "oneof_fields" },
  ],
);

/**
 * @generated from message protobuf_unittest.TestDeprecatedMessage
 * @deprecated
 */
export const TestDeprecatedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestDeprecatedMessage",
  [],
);

/**
 * Define these after TestAllTypes to make sure the compiler can handle
 * that.
 *
 * @generated from message protobuf_unittest.ForeignMessage
 */
export const ForeignMessage = proto2.makeMessageType(
  "protobuf_unittest.ForeignMessage",
  () => [
    { no: 1, name: "c", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "d", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestReservedFields
 */
export const TestReservedFields = proto2.makeMessageType(
  "protobuf_unittest.TestReservedFields",
  [],
);

/**
 * @generated from message protobuf_unittest.TestAllExtensions
 */
export const TestAllExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestAllExtensions",
  [],
);

/**
 * @generated from message protobuf_unittest.OptionalGroup_extension
 */
export const OptionalGroup_extension = proto2.makeMessageType(
  "protobuf_unittest.OptionalGroup_extension",
  () => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.RepeatedGroup_extension
 */
export const RepeatedGroup_extension = proto2.makeMessageType(
  "protobuf_unittest.RepeatedGroup_extension",
  () => [
    { no: 47, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestGroup
 */
export const TestGroup = proto2.makeMessageType(
  "protobuf_unittest.TestGroup",
  () => [
    { no: 16, name: "optionalgroup", kind: "message", T: TestGroup_OptionalGroup, opt: true },
    { no: 22, name: "optional_foreign_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestGroup.OptionalGroup
 */
export const TestGroup_OptionalGroup = proto2.makeMessageType(
  "protobuf_unittest.TestGroup.OptionalGroup",
  () => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestGroup_OptionalGroup"},
);

/**
 * @generated from message protobuf_unittest.TestGroupExtension
 */
export const TestGroupExtension = proto2.makeMessageType(
  "protobuf_unittest.TestGroupExtension",
  [],
);

/**
 * @generated from message protobuf_unittest.TestNestedExtension
 */
export const TestNestedExtension = proto2.makeMessageType(
  "protobuf_unittest.TestNestedExtension",
  [],
);

/**
 * @generated from message protobuf_unittest.TestNestedExtension.OptionalGroup_extension
 */
export const TestNestedExtension_OptionalGroup_extension = proto2.makeMessageType(
  "protobuf_unittest.TestNestedExtension.OptionalGroup_extension",
  () => [
    { no: 17, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestNestedExtension_OptionalGroup_extension"},
);

/**
 * @generated from message protobuf_unittest.TestChildExtension
 */
export const TestChildExtension = proto2.makeMessageType(
  "protobuf_unittest.TestChildExtension",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "b", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "optional_extension", kind: "message", T: TestAllExtensions, opt: true },
  ],
);

/**
 * Emulates wireformat data of TestChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestChildExtensionData
 */
export const TestChildExtensionData = proto2.makeMessageType(
  "protobuf_unittest.TestChildExtensionData",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "b", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "optional_extension", kind: "message", T: TestChildExtensionData_NestedTestAllExtensionsData, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData
 */
export const TestChildExtensionData_NestedTestAllExtensionsData = proto2.makeMessageType(
  "protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData",
  () => [
    { no: 409707008, name: "dynamic", kind: "message", T: TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, opt: true },
  ],
  {localName: "TestChildExtensionData_NestedTestAllExtensionsData"},
);

/**
 * @generated from message protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions
 */
export const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "b", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions"},
);

/**
 * @generated from message protobuf_unittest.TestNestedChildExtension
 */
export const TestNestedChildExtension = proto2.makeMessageType(
  "protobuf_unittest.TestNestedChildExtension",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "child", kind: "message", T: TestChildExtension, opt: true },
  ],
);

/**
 * Emulates wireformat data of TestNestedChildExtension with dynamic extension
 * (DynamicExtension).
 *
 * @generated from message protobuf_unittest.TestNestedChildExtensionData
 */
export const TestNestedChildExtensionData = proto2.makeMessageType(
  "protobuf_unittest.TestNestedChildExtensionData",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "child", kind: "message", T: TestChildExtensionData, opt: true },
  ],
);

/**
 * We have separate messages for testing required fields because it's
 * annoying to have to fill in required fields in TestProto in order to
 * do anything with it.  Note that we don't need to test every type of
 * required filed because the code output is basically identical to
 * optional fields for all types.
 *
 * @generated from message protobuf_unittest.TestRequired
 */
export const TestRequired = proto2.makeMessageType(
  "protobuf_unittest.TestRequired",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "dummy2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "b", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "dummy4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "dummy5", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "dummy6", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "dummy7", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "dummy8", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "dummy9", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "dummy10", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "dummy11", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "dummy12", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 13, name: "dummy13", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "dummy14", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 15, name: "dummy15", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 16, name: "dummy16", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 17, name: "dummy17", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 18, name: "dummy18", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 19, name: "dummy19", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 20, name: "dummy20", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 21, name: "dummy21", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 22, name: "dummy22", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 23, name: "dummy23", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 24, name: "dummy24", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 25, name: "dummy25", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 26, name: "dummy26", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 27, name: "dummy27", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 28, name: "dummy28", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 29, name: "dummy29", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 30, name: "dummy30", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 31, name: "dummy31", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 32, name: "dummy32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 33, name: "c", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 34, name: "optional_foreign", kind: "message", T: ForeignMessage, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestRequiredForeign
 */
export const TestRequiredForeign = proto2.makeMessageType(
  "protobuf_unittest.TestRequiredForeign",
  () => [
    { no: 1, name: "optional_message", kind: "message", T: TestRequired, opt: true },
    { no: 2, name: "repeated_message", kind: "message", T: TestRequired, repeated: true },
    { no: 3, name: "dummy", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestRequiredMessage
 */
export const TestRequiredMessage = proto2.makeMessageType(
  "protobuf_unittest.TestRequiredMessage",
  () => [
    { no: 1, name: "optional_message", kind: "message", T: TestRequired, opt: true },
    { no: 2, name: "repeated_message", kind: "message", T: TestRequired, repeated: true },
    { no: 3, name: "required_message", kind: "message", T: TestRequired },
  ],
);

/**
 * @generated from message protobuf_unittest.TestNestedRequiredForeign
 */
export const TestNestedRequiredForeign = proto2.makeMessageType(
  "protobuf_unittest.TestNestedRequiredForeign",
  () => [
    { no: 1, name: "child", kind: "message", T: TestNestedRequiredForeign, opt: true },
    { no: 2, name: "payload", kind: "message", T: TestRequiredForeign, opt: true },
    { no: 3, name: "dummy", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * Test that we can use NestedMessage from outside TestAllTypes.
 *
 * @generated from message protobuf_unittest.TestForeignNested
 */
export const TestForeignNested = proto2.makeMessageType(
  "protobuf_unittest.TestForeignNested",
  () => [
    { no: 1, name: "foreign_nested", kind: "message", T: TestAllTypes_NestedMessage, opt: true },
  ],
);

/**
 * TestEmptyMessage is used to test unknown field support.
 *
 * @generated from message protobuf_unittest.TestEmptyMessage
 */
export const TestEmptyMessage = proto2.makeMessageType(
  "protobuf_unittest.TestEmptyMessage",
  [],
);

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message protobuf_unittest.TestEmptyMessageWithExtensions
 */
export const TestEmptyMessageWithExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestEmptyMessageWithExtensions",
  [],
);

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestPickleNestedMessage
 */
export const TestPickleNestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestPickleNestedMessage",
  [],
);

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage
 */
export const TestPickleNestedMessage_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestPickleNestedMessage.NestedMessage",
  () => [
    { no: 1, name: "bb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestPickleNestedMessage_NestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage
 */
export const TestPickleNestedMessage_NestedMessage_NestedNestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage",
  () => [
    { no: 1, name: "cc", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestPickleNestedMessage_NestedMessage_NestedNestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestMultipleExtensionRanges
 */
export const TestMultipleExtensionRanges = proto2.makeMessageType(
  "protobuf_unittest.TestMultipleExtensionRanges",
  [],
);

/**
 * Test that really large tag numbers don't break anything.
 *
 * @generated from message protobuf_unittest.TestReallyLargeTagNumber
 */
export const TestReallyLargeTagNumber = proto2.makeMessageType(
  "protobuf_unittest.TestReallyLargeTagNumber",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 268435455, name: "bb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestRecursiveMessage
 */
export const TestRecursiveMessage = proto2.makeMessageType(
  "protobuf_unittest.TestRecursiveMessage",
  () => [
    { no: 1, name: "a", kind: "message", T: TestRecursiveMessage, opt: true },
    { no: 2, name: "i", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * Test that mutual recursion works.
 *
 * @generated from message protobuf_unittest.TestMutualRecursionA
 */
export const TestMutualRecursionA = proto2.makeMessageType(
  "protobuf_unittest.TestMutualRecursionA",
  () => [
    { no: 1, name: "bb", kind: "message", T: TestMutualRecursionB, opt: true },
    { no: 2, name: "subgroup", kind: "message", T: TestMutualRecursionA_SubGroup, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubMessage
 */
export const TestMutualRecursionA_SubMessage = proto2.makeMessageType(
  "protobuf_unittest.TestMutualRecursionA.SubMessage",
  () => [
    { no: 1, name: "b", kind: "message", T: TestMutualRecursionB, opt: true },
  ],
  {localName: "TestMutualRecursionA_SubMessage"},
);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionA.SubGroup
 */
export const TestMutualRecursionA_SubGroup = proto2.makeMessageType(
  "protobuf_unittest.TestMutualRecursionA.SubGroup",
  () => [
    { no: 3, name: "sub_message", kind: "message", T: TestMutualRecursionA_SubMessage, opt: true },
    { no: 4, name: "not_in_this_scc", kind: "message", T: TestAllTypes, opt: true },
  ],
  {localName: "TestMutualRecursionA_SubGroup"},
);

/**
 * @generated from message protobuf_unittest.TestMutualRecursionB
 */
export const TestMutualRecursionB = proto2.makeMessageType(
  "protobuf_unittest.TestMutualRecursionB",
  () => [
    { no: 1, name: "a", kind: "message", T: TestMutualRecursionA, opt: true },
    { no: 2, name: "optional_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestIsInitialized
 */
export const TestIsInitialized = proto2.makeMessageType(
  "protobuf_unittest.TestIsInitialized",
  () => [
    { no: 1, name: "sub_message", kind: "message", T: TestIsInitialized_SubMessage, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage
 */
export const TestIsInitialized_SubMessage = proto2.makeMessageType(
  "protobuf_unittest.TestIsInitialized.SubMessage",
  () => [
    { no: 1, name: "subgroup", kind: "message", T: TestIsInitialized_SubMessage_SubGroup, opt: true },
  ],
  {localName: "TestIsInitialized_SubMessage"},
);

/**
 * @generated from message protobuf_unittest.TestIsInitialized.SubMessage.SubGroup
 */
export const TestIsInitialized_SubMessage_SubGroup = proto2.makeMessageType(
  "protobuf_unittest.TestIsInitialized.SubMessage.SubGroup",
  () => [
    { no: 2, name: "i", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "TestIsInitialized_SubMessage_SubGroup"},
);

/**
 * Test that groups have disjoint field numbers from their siblings and
 * parents.  This is NOT possible in proto1; only google.protobuf.  When attempting
 * to compile with proto1, this will emit an error; so we only include it
 * in protobuf_unittest_proto.
 *
 * NO_PROTO1
 *
 * @generated from message protobuf_unittest.TestDupFieldNumber
 */
export const TestDupFieldNumber = proto2.makeMessageType(
  "protobuf_unittest.TestDupFieldNumber",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "foo", kind: "message", T: TestDupFieldNumber_Foo, opt: true },
    { no: 3, name: "bar", kind: "message", T: TestDupFieldNumber_Bar, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Foo
 */
export const TestDupFieldNumber_Foo = proto2.makeMessageType(
  "protobuf_unittest.TestDupFieldNumber.Foo",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestDupFieldNumber_Foo"},
);

/**
 * @generated from message protobuf_unittest.TestDupFieldNumber.Bar
 */
export const TestDupFieldNumber_Bar = proto2.makeMessageType(
  "protobuf_unittest.TestDupFieldNumber.Bar",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestDupFieldNumber_Bar"},
);

/**
 * Additional messages for testing lazy fields.
 *
 * @generated from message protobuf_unittest.TestEagerMessage
 */
export const TestEagerMessage = proto2.makeMessageType(
  "protobuf_unittest.TestEagerMessage",
  () => [
    { no: 1, name: "sub_message", kind: "message", T: TestAllTypes, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestLazyMessage
 */
export const TestLazyMessage = proto2.makeMessageType(
  "protobuf_unittest.TestLazyMessage",
  () => [
    { no: 1, name: "sub_message", kind: "message", T: TestAllTypes, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy
 */
export const TestEagerMaybeLazy = proto2.makeMessageType(
  "protobuf_unittest.TestEagerMaybeLazy",
  () => [
    { no: 1, name: "message_foo", kind: "message", T: TestAllTypes, opt: true },
    { no: 2, name: "message_bar", kind: "message", T: TestAllTypes, opt: true },
    { no: 3, name: "message_baz", kind: "message", T: TestEagerMaybeLazy_NestedMessage, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestEagerMaybeLazy.NestedMessage
 */
export const TestEagerMaybeLazy_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestEagerMaybeLazy.NestedMessage",
  () => [
    { no: 1, name: "packed", kind: "message", T: TestPackedTypes, opt: true },
  ],
  {localName: "TestEagerMaybeLazy_NestedMessage"},
);

/**
 * Needed for a Python test.
 *
 * @generated from message protobuf_unittest.TestNestedMessageHasBits
 */
export const TestNestedMessageHasBits = proto2.makeMessageType(
  "protobuf_unittest.TestNestedMessageHasBits",
  () => [
    { no: 1, name: "optional_nested_message", kind: "message", T: TestNestedMessageHasBits_NestedMessage, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestNestedMessageHasBits.NestedMessage
 */
export const TestNestedMessageHasBits_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestNestedMessageHasBits.NestedMessage",
  () => [
    { no: 1, name: "nestedmessage_repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 2, name: "nestedmessage_repeated_foreignmessage", kind: "message", T: ForeignMessage, repeated: true },
  ],
  {localName: "TestNestedMessageHasBits_NestedMessage"},
);

/**
 * Test message with CamelCase field names.  This violates Protocol Buffer
 * standard style.
 *
 * @generated from message protobuf_unittest.TestCamelCaseFieldNames
 */
export const TestCamelCaseFieldNames = proto2.makeMessageType(
  "protobuf_unittest.TestCamelCaseFieldNames",
  () => [
    { no: 1, name: "PrimitiveField", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "StringField", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "EnumField", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true },
    { no: 4, name: "MessageField", kind: "message", T: ForeignMessage, opt: true },
    { no: 5, name: "StringPieceField", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "CordField", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "RepeatedPrimitiveField", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 8, name: "RepeatedStringField", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "RepeatedEnumField", kind: "enum", T: proto2.getEnumType(ForeignEnum), repeated: true },
    { no: 10, name: "RepeatedMessageField", kind: "message", T: ForeignMessage, repeated: true },
    { no: 11, name: "RepeatedStringPieceField", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "RepeatedCordField", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * We list fields out of order, to ensure that we're using field number and not
 * field index to determine serialization order.
 *
 * @generated from message protobuf_unittest.TestFieldOrderings
 */
export const TestFieldOrderings = proto2.makeMessageType(
  "protobuf_unittest.TestFieldOrderings",
  () => [
    { no: 11, name: "my_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 1, name: "my_int", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 101, name: "my_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 200, name: "optional_nested_message", kind: "message", T: TestFieldOrderings_NestedMessage, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestFieldOrderings.NestedMessage
 */
export const TestFieldOrderings_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestFieldOrderings.NestedMessage",
  () => [
    { no: 2, name: "oo", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 1, name: "bb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestFieldOrderings_NestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings1
 */
export const TestExtensionOrderings1 = proto2.makeMessageType(
  "protobuf_unittest.TestExtensionOrderings1",
  () => [
    { no: 1, name: "my_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2
 */
export const TestExtensionOrderings2 = proto2.makeMessageType(
  "protobuf_unittest.TestExtensionOrderings2",
  () => [
    { no: 1, name: "my_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3
 */
export const TestExtensionOrderings2_TestExtensionOrderings3 = proto2.makeMessageType(
  "protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3",
  () => [
    { no: 1, name: "my_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestExtensionOrderings2_TestExtensionOrderings3"},
);

/**
 * @generated from message protobuf_unittest.TestExtremeDefaultValues
 */
export const TestExtremeDefaultValues = proto2.makeMessageType(
  "protobuf_unittest.TestExtremeDefaultValues",
  () => [
    { no: 1, name: "escaped_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true, default: new Uint8Array([0x00, 0x01, 0x07, 0x08, 0x0C, 0x0A, 0x0D, 0x09, 0x0B, 0x5C, 0xFE]) },
    { no: 2, name: "large_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 4294967295 },
    { no: 3, name: "large_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true, default: protoInt64.uParse("18446744073709551615") },
    { no: 4, name: "small_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -2147483647 },
    { no: 5, name: "small_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true, default: protoInt64.parse("-9223372036854775807") },
    { no: 21, name: "really_small_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -2147483648 },
    { no: 22, name: "really_small_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true, default: protoInt64.parse("-9223372036854775808") },
    { no: 6, name: "utf8_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "ሴ" },
    { no: 7, name: "zero_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 0 },
    { no: 8, name: "one_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 1 },
    { no: 9, name: "small_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 1.5 },
    { no: 10, name: "negative_one_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: -1 },
    { no: 11, name: "negative_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: -1.5 },
    { no: 12, name: "large_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: 200000000 },
    { no: 13, name: "small_negative_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: -8e-28 },
    { no: 14, name: "inf_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true, default: globalThis.Number.POSITIVE_INFINITY },
    { no: 15, name: "neg_inf_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true, default: globalThis.Number.NEGATIVE_INFINITY },
    { no: 16, name: "nan_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true, default: globalThis.Number.NaN },
    { no: 17, name: "inf_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: globalThis.Number.POSITIVE_INFINITY },
    { no: 18, name: "neg_inf_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: globalThis.Number.NEGATIVE_INFINITY },
    { no: 19, name: "nan_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true, default: globalThis.Number.NaN },
    { no: 20, name: "cpp_trigraph", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "? ? ?? ?? ??? ??/ ??-" },
    { no: 23, name: "string_with_zero", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "hel lo" },
    { no: 24, name: "bytes_with_zero", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true, default: new Uint8Array([0x77, 0x6F, 0x72, 0x00, 0x6C, 0x64]) },
    { no: 25, name: "string_piece_with_zero", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "ab c" },
    { no: 26, name: "cord_with_zero", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "12 3" },
    { no: 27, name: "replacement_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "${unknown}" },
  ],
);

/**
 * @generated from message protobuf_unittest.SparseEnumMessage
 */
export const SparseEnumMessage = proto2.makeMessageType(
  "protobuf_unittest.SparseEnumMessage",
  () => [
    { no: 1, name: "sparse_enum", kind: "enum", T: proto2.getEnumType(TestSparseEnum), opt: true },
  ],
);

/**
 * Test String and Bytes: string is for valid UTF-8 strings
 *
 * @generated from message protobuf_unittest.OneString
 */
export const OneString = proto2.makeMessageType(
  "protobuf_unittest.OneString",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.MoreString
 */
export const MoreString = proto2.makeMessageType(
  "protobuf_unittest.MoreString",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.OneBytes
 */
export const OneBytes = proto2.makeMessageType(
  "protobuf_unittest.OneBytes",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.MoreBytes
 */
export const MoreBytes = proto2.makeMessageType(
  "protobuf_unittest.MoreBytes",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.ManyOptionalString
 */
export const ManyOptionalString = proto2.makeMessageType(
  "protobuf_unittest.ManyOptionalString",
  () => [
    { no: 1, name: "str1", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "str2", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "str3", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "str4", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "str5", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "str6", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "str7", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "str8", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "str9", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "str10", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "str11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "str12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "str13", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "str14", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "str15", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 16, name: "str16", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 17, name: "str17", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "str18", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 19, name: "str19", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 20, name: "str20", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 21, name: "str21", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 22, name: "str22", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 23, name: "str23", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 24, name: "str24", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 25, name: "str25", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 26, name: "str26", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 27, name: "str27", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 28, name: "str28", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 29, name: "str29", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 30, name: "str30", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 31, name: "str31", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 32, name: "str32", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * Test int32, uint32, int64, uint64, and bool are all compatible
 *
 * @generated from message protobuf_unittest.Int32Message
 */
export const Int32Message = proto2.makeMessageType(
  "protobuf_unittest.Int32Message",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.Uint32Message
 */
export const Uint32Message = proto2.makeMessageType(
  "protobuf_unittest.Uint32Message",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.Int64Message
 */
export const Int64Message = proto2.makeMessageType(
  "protobuf_unittest.Int64Message",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.Uint64Message
 */
export const Uint64Message = proto2.makeMessageType(
  "protobuf_unittest.Uint64Message",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.BoolMessage
 */
export const BoolMessage = proto2.makeMessageType(
  "protobuf_unittest.BoolMessage",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ],
);

/**
 * Test oneofs.
 *
 * @generated from message protobuf_unittest.TestOneof
 */
export const TestOneof = proto2.makeMessageType(
  "protobuf_unittest.TestOneof",
  () => [
    { no: 1, name: "foo_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "foo" },
    { no: 2, name: "foo_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "foo" },
    { no: 3, name: "foo_message", kind: "message", T: TestAllTypes, oneof: "foo" },
    { no: 4, name: "foogroup", kind: "message", T: TestOneof_FooGroup, oneof: "foo" },
  ],
);

/**
 * @generated from message protobuf_unittest.TestOneof.FooGroup
 */
export const TestOneof_FooGroup = proto2.makeMessageType(
  "protobuf_unittest.TestOneof.FooGroup",
  () => [
    { no: 5, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "b", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestOneof_FooGroup"},
);

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible
 */
export const TestOneofBackwardsCompatible = proto2.makeMessageType(
  "protobuf_unittest.TestOneofBackwardsCompatible",
  () => [
    { no: 1, name: "foo_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "foo_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "foo_message", kind: "message", T: TestAllTypes, opt: true },
    { no: 4, name: "foogroup", kind: "message", T: TestOneofBackwardsCompatible_FooGroup, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestOneofBackwardsCompatible.FooGroup
 */
export const TestOneofBackwardsCompatible_FooGroup = proto2.makeMessageType(
  "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup",
  () => [
    { no: 5, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "b", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestOneofBackwardsCompatible_FooGroup"},
);

/**
 * @generated from message protobuf_unittest.TestOneof2
 */
export const TestOneof2 = proto2.makeMessageType(
  "protobuf_unittest.TestOneof2",
  () => [
    { no: 1, name: "foo_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "foo" },
    { no: 2, name: "foo_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "foo" },
    { no: 3, name: "foo_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "foo" },
    { no: 4, name: "foo_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "foo" },
    { no: 5, name: "foo_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "foo" },
    { no: 6, name: "foo_enum", kind: "enum", T: proto2.getEnumType(TestOneof2_NestedEnum), oneof: "foo" },
    { no: 7, name: "foo_message", kind: "message", T: TestOneof2_NestedMessage, oneof: "foo" },
    { no: 8, name: "foogroup", kind: "message", T: TestOneof2_FooGroup, oneof: "foo" },
    { no: 11, name: "foo_lazy_message", kind: "message", T: TestOneof2_NestedMessage, oneof: "foo" },
    { no: 12, name: "bar_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, default: 5, oneof: "bar" },
    { no: 13, name: "bar_string", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "STRING", oneof: "bar" },
    { no: 14, name: "bar_cord", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "CORD", oneof: "bar" },
    { no: 15, name: "bar_string_piece", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "SPIECE", oneof: "bar" },
    { no: 16, name: "bar_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, default: new Uint8Array([0x42, 0x59, 0x54, 0x45, 0x53]), oneof: "bar" },
    { no: 17, name: "bar_enum", kind: "enum", T: proto2.getEnumType(TestOneof2_NestedEnum), default: TestOneof2_NestedEnum.BAR, oneof: "bar" },
    { no: 20, name: "bar_string_with_empty_default", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "", oneof: "bar" },
    { no: 21, name: "bar_cord_with_empty_default", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "", oneof: "bar" },
    { no: 22, name: "bar_string_piece_with_empty_default", kind: "scalar", T: 9 /* ScalarType.STRING */, default: "", oneof: "bar" },
    { no: 23, name: "bar_bytes_with_empty_default", kind: "scalar", T: 12 /* ScalarType.BYTES */, default: new Uint8Array(0), oneof: "bar" },
    { no: 18, name: "baz_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 19, name: "baz_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "BAZ" },
  ],
);

/**
 * @generated from enum protobuf_unittest.TestOneof2.NestedEnum
 */
export const TestOneof2_NestedEnum = proto2.makeEnum(
  "protobuf_unittest.TestOneof2.NestedEnum",
  [
    {no: 1, name: "FOO"},
    {no: 2, name: "BAR"},
    {no: 3, name: "BAZ"},
  ],
);

/**
 * @generated from message protobuf_unittest.TestOneof2.FooGroup
 */
export const TestOneof2_FooGroup = proto2.makeMessageType(
  "protobuf_unittest.TestOneof2.FooGroup",
  () => [
    { no: 9, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "b", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestOneof2_FooGroup"},
);

/**
 * @generated from message protobuf_unittest.TestOneof2.NestedMessage
 */
export const TestOneof2_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestOneof2.NestedMessage",
  () => [
    { no: 1, name: "moo_int", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 2, name: "corge_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
  {localName: "TestOneof2_NestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestRequiredOneof
 */
export const TestRequiredOneof = proto2.makeMessageType(
  "protobuf_unittest.TestRequiredOneof",
  () => [
    { no: 1, name: "foo_int", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "foo" },
    { no: 2, name: "foo_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "foo" },
    { no: 3, name: "foo_message", kind: "message", T: TestRequiredOneof_NestedMessage, oneof: "foo" },
  ],
);

/**
 * @generated from message protobuf_unittest.TestRequiredOneof.NestedMessage
 */
export const TestRequiredOneof_NestedMessage = proto2.makeMessageType(
  "protobuf_unittest.TestRequiredOneof.NestedMessage",
  () => [
    { no: 1, name: "required_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
  {localName: "TestRequiredOneof_NestedMessage"},
);

/**
 * @generated from message protobuf_unittest.TestPackedTypes
 */
export const TestPackedTypes = proto2.makeMessageType(
  "protobuf_unittest.TestPackedTypes",
  () => [
    { no: 90, name: "packed_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },
    { no: 91, name: "packed_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true, packed: true },
    { no: 92, name: "packed_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true, packed: true },
    { no: 93, name: "packed_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true, packed: true },
    { no: 94, name: "packed_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true, packed: true },
    { no: 95, name: "packed_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true, packed: true },
    { no: 96, name: "packed_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true, packed: true },
    { no: 97, name: "packed_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true, packed: true },
    { no: 98, name: "packed_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true, packed: true },
    { no: 99, name: "packed_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true, packed: true },
    { no: 100, name: "packed_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true, packed: true },
    { no: 101, name: "packed_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true, packed: true },
    { no: 102, name: "packed_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true, packed: true },
    { no: 103, name: "packed_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), repeated: true, packed: true },
  ],
);

/**
 * A message with the same fields as TestPackedTypes, but without packing. Used
 * to test packed <-> unpacked wire compatibility.
 *
 * @generated from message protobuf_unittest.TestUnpackedTypes
 */
export const TestUnpackedTypes = proto2.makeMessageType(
  "protobuf_unittest.TestUnpackedTypes",
  () => [
    { no: 90, name: "unpacked_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 91, name: "unpacked_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 92, name: "unpacked_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 93, name: "unpacked_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 94, name: "unpacked_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 95, name: "unpacked_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 96, name: "unpacked_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 97, name: "unpacked_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 98, name: "unpacked_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 99, name: "unpacked_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 100, name: "unpacked_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 101, name: "unpacked_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 102, name: "unpacked_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 103, name: "unpacked_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestPackedExtensions
 */
export const TestPackedExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestPackedExtensions",
  [],
);

/**
 * @generated from message protobuf_unittest.TestUnpackedExtensions
 */
export const TestUnpackedExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestUnpackedExtensions",
  [],
);

/**
 * Used by ExtensionSetTest/DynamicExtensions.  The test actually builds
 * a set of extensions to TestAllExtensions dynamically, based on the fields
 * of this message type.
 *
 * @generated from message protobuf_unittest.TestDynamicExtensions
 */
export const TestDynamicExtensions = proto2.makeMessageType(
  "protobuf_unittest.TestDynamicExtensions",
  () => [
    { no: 2000, name: "scalar_extension", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2001, name: "enum_extension", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true },
    { no: 2002, name: "dynamic_enum_extension", kind: "enum", T: proto2.getEnumType(TestDynamicExtensions_DynamicEnumType), opt: true },
    { no: 2003, name: "message_extension", kind: "message", T: ForeignMessage, opt: true },
    { no: 2004, name: "dynamic_message_extension", kind: "message", T: TestDynamicExtensions_DynamicMessageType, opt: true },
    { no: 2005, name: "repeated_extension", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2006, name: "packed_extension", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true, packed: true },
  ],
);

/**
 * @generated from enum protobuf_unittest.TestDynamicExtensions.DynamicEnumType
 */
export const TestDynamicExtensions_DynamicEnumType = proto2.makeEnum(
  "protobuf_unittest.TestDynamicExtensions.DynamicEnumType",
  [
    {no: 2200, name: "DYNAMIC_FOO"},
    {no: 2201, name: "DYNAMIC_BAR"},
    {no: 2202, name: "DYNAMIC_BAZ"},
  ],
);

/**
 * @generated from message protobuf_unittest.TestDynamicExtensions.DynamicMessageType
 */
export const TestDynamicExtensions_DynamicMessageType = proto2.makeMessageType(
  "protobuf_unittest.TestDynamicExtensions.DynamicMessageType",
  () => [
    { no: 2100, name: "dynamic_field", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestDynamicExtensions_DynamicMessageType"},
);

/**
 * @generated from message protobuf_unittest.TestRepeatedScalarDifferentTagSizes
 */
export const TestRepeatedScalarDifferentTagSizes = proto2.makeMessageType(
  "protobuf_unittest.TestRepeatedScalarDifferentTagSizes",
  () => [
    { no: 12, name: "repeated_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 13, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 2046, name: "repeated_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 2047, name: "repeated_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 262142, name: "repeated_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 262143, name: "repeated_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ],
);

/**
 * Test that if an optional or required message/group field appears multiple
 * times in the input, they need to be merged.
 *
 * @generated from message protobuf_unittest.TestParsingMerge
 */
export const TestParsingMerge = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge",
  () => [
    { no: 1, name: "required_all_types", kind: "message", T: TestAllTypes },
    { no: 2, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 3, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
    { no: 10, name: "optionalgroup", kind: "message", T: TestParsingMerge_OptionalGroup, opt: true },
    { no: 20, name: "repeatedgroup", kind: "message", T: TestParsingMerge_RepeatedGroup, repeated: true },
  ],
);

/**
 * RepeatedFieldsGenerator defines matching field types as TestParsingMerge,
 * except that all fields are repeated. In the tests, we will serialize the
 * RepeatedFieldsGenerator to bytes, and parse the bytes to TestParsingMerge.
 * Repeated fields in RepeatedFieldsGenerator are expected to be merged into
 * the corresponding required/optional fields in TestParsingMerge.
 *
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator
 */
export const TestParsingMerge_RepeatedFieldsGenerator = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator",
  () => [
    { no: 1, name: "field1", kind: "message", T: TestAllTypes, repeated: true },
    { no: 2, name: "field2", kind: "message", T: TestAllTypes, repeated: true },
    { no: 3, name: "field3", kind: "message", T: TestAllTypes, repeated: true },
    { no: 10, name: "group1", kind: "message", T: TestParsingMerge_RepeatedFieldsGenerator_Group1, repeated: true },
    { no: 20, name: "group2", kind: "message", T: TestParsingMerge_RepeatedFieldsGenerator_Group2, repeated: true },
    { no: 1000, name: "ext1", kind: "message", T: TestAllTypes, repeated: true },
    { no: 1001, name: "ext2", kind: "message", T: TestAllTypes, repeated: true },
  ],
  {localName: "TestParsingMerge_RepeatedFieldsGenerator"},
);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1
 */
export const TestParsingMerge_RepeatedFieldsGenerator_Group1 = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1",
  () => [
    { no: 11, name: "field1", kind: "message", T: TestAllTypes, opt: true },
  ],
  {localName: "TestParsingMerge_RepeatedFieldsGenerator_Group1"},
);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2
 */
export const TestParsingMerge_RepeatedFieldsGenerator_Group2 = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2",
  () => [
    { no: 21, name: "field1", kind: "message", T: TestAllTypes, opt: true },
  ],
  {localName: "TestParsingMerge_RepeatedFieldsGenerator_Group2"},
);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.OptionalGroup
 */
export const TestParsingMerge_OptionalGroup = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge.OptionalGroup",
  () => [
    { no: 11, name: "optional_group_all_types", kind: "message", T: TestAllTypes, opt: true },
  ],
  {localName: "TestParsingMerge_OptionalGroup"},
);

/**
 * @generated from message protobuf_unittest.TestParsingMerge.RepeatedGroup
 */
export const TestParsingMerge_RepeatedGroup = proto2.makeMessageType(
  "protobuf_unittest.TestParsingMerge.RepeatedGroup",
  () => [
    { no: 21, name: "repeated_group_all_types", kind: "message", T: TestAllTypes, opt: true },
  ],
  {localName: "TestParsingMerge_RepeatedGroup"},
);

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message protobuf_unittest.TestMergeException
 */
export const TestMergeException = proto2.makeMessageType(
  "protobuf_unittest.TestMergeException",
  () => [
    { no: 1, name: "all_extensions", kind: "message", T: TestAllExtensions, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestCommentInjectionMessage
 */
export const TestCommentInjectionMessage = proto2.makeMessageType(
  "protobuf_unittest.TestCommentInjectionMessage",
  () => [
    { no: 1, name: "a", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true, default: "*/ <- Neither should this." },
  ],
);

/**
 * Used to check that the c++ code generator re-orders messages to reduce
 * padding.
 *
 * @generated from message protobuf_unittest.TestMessageSize
 */
export const TestMessageSize = proto2.makeMessageType(
  "protobuf_unittest.TestMessageSize",
  () => [
    { no: 1, name: "m1", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "m2", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 3, name: "m3", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "m4", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "m5", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "m6", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
  ],
);

/**
 * Test that RPC services work.
 *
 * @generated from message protobuf_unittest.FooRequest
 */
export const FooRequest = proto2.makeMessageType(
  "protobuf_unittest.FooRequest",
  [],
);

/**
 * @generated from message protobuf_unittest.FooResponse
 */
export const FooResponse = proto2.makeMessageType(
  "protobuf_unittest.FooResponse",
  [],
);

/**
 * @generated from message protobuf_unittest.FooClientMessage
 */
export const FooClientMessage = proto2.makeMessageType(
  "protobuf_unittest.FooClientMessage",
  [],
);

/**
 * @generated from message protobuf_unittest.FooServerMessage
 */
export const FooServerMessage = proto2.makeMessageType(
  "protobuf_unittest.FooServerMessage",
  [],
);

/**
 * @generated from message protobuf_unittest.BarRequest
 */
export const BarRequest = proto2.makeMessageType(
  "protobuf_unittest.BarRequest",
  [],
);

/**
 * @generated from message protobuf_unittest.BarResponse
 */
export const BarResponse = proto2.makeMessageType(
  "protobuf_unittest.BarResponse",
  [],
);

/**
 * @generated from message protobuf_unittest.TestJsonName
 */
export const TestJsonName = proto2.makeMessageType(
  "protobuf_unittest.TestJsonName",
  () => [
    { no: 1, name: "field_name1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "fieldName2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "FieldName3", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "_field_name4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "FIELD_NAME5", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "field_name6", jsonName: "@type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "fieldname7", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers
 */
export const TestHugeFieldNumbers = proto2.makeMessageType(
  "protobuf_unittest.TestHugeFieldNumbers",
  () => [
    { no: 536870000, name: "optional_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 536870001, name: "fixed_32", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 536870002, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 536870003, name: "packed_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },
    { no: 536870004, name: "optional_enum", kind: "enum", T: proto2.getEnumType(ForeignEnum), opt: true },
    { no: 536870005, name: "optional_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 536870006, name: "optional_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 536870007, name: "optional_message", kind: "message", T: ForeignMessage, opt: true },
    { no: 536870008, name: "optionalgroup", kind: "message", T: TestHugeFieldNumbers_OptionalGroup, opt: true },
    { no: 536870010, name: "string_string_map", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 536870011, name: "oneof_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "oneof_field" },
    { no: 536870012, name: "oneof_test_all_types", kind: "message", T: TestAllTypes, oneof: "oneof_field" },
    { no: 536870013, name: "oneof_string", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "oneof_field" },
    { no: 536870014, name: "oneof_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "oneof_field" },
  ],
);

/**
 * @generated from message protobuf_unittest.TestHugeFieldNumbers.OptionalGroup
 */
export const TestHugeFieldNumbers_OptionalGroup = proto2.makeMessageType(
  "protobuf_unittest.TestHugeFieldNumbers.OptionalGroup",
  () => [
    { no: 536870009, name: "group_a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
  {localName: "TestHugeFieldNumbers_OptionalGroup"},
);

/**
 * @generated from message protobuf_unittest.TestExtensionInsideTable
 */
export const TestExtensionInsideTable = proto2.makeMessageType(
  "protobuf_unittest.TestExtensionInsideTable",
  () => [
    { no: 1, name: "field1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "field2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "field3", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "field4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "field6", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "field7", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "field8", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "field9", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "field10", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * NOTE(b/202996544): Intentionally nested to mirror go/glep.
 *
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter
 */
export const TestNestedGroupExtensionOuter = proto2.makeMessageType(
  "protobuf_unittest.TestNestedGroupExtensionOuter",
  () => [
    { no: 1, name: "layer1optionalgroup", kind: "message", T: TestNestedGroupExtensionOuter_Layer1OptionalGroup, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup
 */
export const TestNestedGroupExtensionOuter_Layer1OptionalGroup = proto2.makeMessageType(
  "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup",
  () => [
    { no: 2, name: "layer2repeatedgroup", kind: "message", T: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, repeated: true },
    { no: 4, name: "layer2anotheroptionalrepeatedgroup", kind: "message", T: TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, repeated: true },
  ],
  {localName: "TestNestedGroupExtensionOuter_Layer1OptionalGroup"},
);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup
 */
export const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup = proto2.makeMessageType(
  "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup",
  () => [
    { no: 6, name: "another_field", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup"},
);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup
 */
export const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup = proto2.makeMessageType(
  "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup",
  () => [
    { no: 5, name: "but_why_tho", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup"},
);

/**
 * @generated from message protobuf_unittest.TestNestedGroupExtensionInnerExtension
 */
export const TestNestedGroupExtensionInnerExtension = proto2.makeMessageType(
  "protobuf_unittest.TestNestedGroupExtensionInnerExtension",
  () => [
    { no: 1, name: "inner_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestExtensionRangeSerialize
 */
export const TestExtensionRangeSerialize = proto2.makeMessageType(
  "protobuf_unittest.TestExtensionRangeSerialize",
  () => [
    { no: 1, name: "foo_one", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "foo_two", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "foo_three", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 13, name: "foo_four", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32Simple
 */
export const TestVerifyInt32Simple = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyInt32Simple",
  () => [
    { no: 1, name: "optional_int32_1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32
 */
export const TestVerifyInt32 = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyInt32",
  () => [
    { no: 1, name: "optional_int32_1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32
 */
export const TestVerifyMostlyInt32 = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyMostlyInt32",
  () => [
    { no: 30, name: "optional_int64_30", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 1, name: "optional_int32_1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "optional_int32_3", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "optional_int32_4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber
 */
export const TestVerifyMostlyInt32BigFieldNumber = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber",
  () => [
    { no: 30, name: "optional_int64_30", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 300, name: "optional_int32_300", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 1, name: "optional_int32_1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "optional_int32_3", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "optional_int32_4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32Simple
 */
export const TestVerifyUint32Simple = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyUint32Simple",
  () => [
    { no: 1, name: "optional_uint32_1", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "optional_uint32_2", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 63, name: "optional_uint32_63", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 64, name: "optional_uint32_64", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32
 */
export const TestVerifyUint32 = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyUint32",
  () => [
    { no: 1, name: "optional_uint32_1", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "optional_uint32_2", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 63, name: "optional_uint32_63", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 64, name: "optional_uint32_64", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyOneUint32
 */
export const TestVerifyOneUint32 = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyOneUint32",
  () => [
    { no: 1, name: "optional_uint32_1", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyOneInt32BigFieldNumber
 */
export const TestVerifyOneInt32BigFieldNumber = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyOneInt32BigFieldNumber",
  () => [
    { no: 65, name: "optional_int32_65", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 1, name: "optional_int64_1", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 2, name: "optional_int64_2", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 63, name: "optional_int64_63", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 64, name: "optional_int64_64", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyInt32BigFieldNumber
 */
export const TestVerifyInt32BigFieldNumber = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyInt32BigFieldNumber",
  () => [
    { no: 1000, name: "optional_int32_1000", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 65, name: "optional_int32_65", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 1, name: "optional_int32_1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "optional_int32_2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 63, name: "optional_int32_63", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 64, name: "optional_int32_64", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyUint32BigFieldNumber
 */
export const TestVerifyUint32BigFieldNumber = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyUint32BigFieldNumber",
  () => [
    { no: 1000, name: "optional_uint32_1000", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 65, name: "optional_uint32_65", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 1, name: "optional_uint32_1", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "optional_uint32_2", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 63, name: "optional_uint32_63", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 64, name: "optional_uint32_64", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "optional_all_types", kind: "message", T: TestAllTypes, opt: true },
    { no: 10, name: "repeated_all_types", kind: "message", T: TestAllTypes, repeated: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32
 */
export const TestVerifyBigFieldNumberUint32 = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyBigFieldNumberUint32",
  () => [
    { no: 1, name: "optional_nested", kind: "message", T: TestVerifyBigFieldNumberUint32_Nested, opt: true },
  ],
);

/**
 * @generated from message protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested
 */
export const TestVerifyBigFieldNumberUint32_Nested = proto2.makeMessageType(
  "protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested",
  () => [
    { no: 5000, name: "optional_uint32_5000", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 1000, name: "optional_uint32_1000", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 66, name: "optional_uint32_66", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 65, name: "optional_uint32_65", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 1, name: "optional_uint32_1", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "optional_uint32_2", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 63, name: "optional_uint32_63", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 64, name: "optional_uint32_64", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "optional_nested", kind: "message", T: TestVerifyBigFieldNumberUint32_Nested, opt: true },
    { no: 10, name: "repeated_nested", kind: "message", T: TestVerifyBigFieldNumberUint32_Nested, repeated: true },
  ],
  {localName: "TestVerifyBigFieldNumberUint32_Nested"},
);

