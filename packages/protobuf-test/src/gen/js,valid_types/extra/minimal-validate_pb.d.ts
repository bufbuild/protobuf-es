// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.6.1 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required+legacy_required"
// @generated from file extra/minimal-validate.proto (package buf.validate, syntax proto2)
/* eslint-disable */

// This file is a reduced copy of https://github.com/bufbuild/protovalidate/blob/main/proto/protovalidate/buf/validate/validate.proto
// It only contains the definitions necessary to resolve `required` rule, ignores,
// and disabled.

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { FieldOptions, MessageOptions, OneofOptions } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file extra/minimal-validate.proto.
 */
export declare const file_extra_minimal_validate: GenFile;

/**
 * @generated from message buf.validate.MessageRules
 */
export declare type MessageRules = Message<"buf.validate.MessageRules"> & {
  /**
   * @generated from field: optional bool disabled = 1;
   */
  disabled: boolean;
};

export declare type MessageRulesValid = MessageRules;

/**
 * Describes the message buf.validate.MessageRules.
 * Use `create(MessageRulesSchema)` to create a new message.
 */
export declare const MessageRulesSchema: GenMessage<MessageRules, {validType: MessageRulesValid}>;

/**
 * @generated from message buf.validate.OneofRules
 */
export declare type OneofRules = Message<"buf.validate.OneofRules"> & {
  /**
   * @generated from field: optional bool required = 1;
   */
  required: boolean;
};

export declare type OneofRulesValid = OneofRules;

/**
 * Describes the message buf.validate.OneofRules.
 * Use `create(OneofRulesSchema)` to create a new message.
 */
export declare const OneofRulesSchema: GenMessage<OneofRules, {validType: OneofRulesValid}>;

/**
 * @generated from message buf.validate.FieldRules
 */
export declare type FieldRules = Message<"buf.validate.FieldRules"> & {
  /**
   * @generated from field: optional bool required = 25;
   */
  required: boolean;

  /**
   * @generated from field: optional buf.validate.Ignore ignore = 27;
   */
  ignore: Ignore;

  /**
   * @generated from oneof buf.validate.FieldRules.type
   */
  type: {
    /**
     * @generated from field: buf.validate.RepeatedRules repeated = 18;
     */
    value: RepeatedRules;
    case: "repeated";
  } | {
    /**
     * @generated from field: buf.validate.MapRules map = 19;
     */
    value: MapRules;
    case: "map";
  } | { case: undefined; value?: undefined };
};

export declare type FieldRulesValid = FieldRules;

/**
 * Describes the message buf.validate.FieldRules.
 * Use `create(FieldRulesSchema)` to create a new message.
 */
export declare const FieldRulesSchema: GenMessage<FieldRules, {validType: FieldRulesValid}>;

/**
 * @generated from message buf.validate.RepeatedRules
 */
export declare type RepeatedRules = Message<"buf.validate.RepeatedRules"> & {
  /**
   * @generated from field: optional buf.validate.FieldRules items = 4;
   */
  items?: FieldRules;
};

export declare type RepeatedRulesValid = RepeatedRules;

/**
 * Describes the message buf.validate.RepeatedRules.
 * Use `create(RepeatedRulesSchema)` to create a new message.
 */
export declare const RepeatedRulesSchema: GenMessage<RepeatedRules, {validType: RepeatedRulesValid}>;

/**
 * @generated from message buf.validate.MapRules
 */
export declare type MapRules = Message<"buf.validate.MapRules"> & {
  /**
   * @generated from field: optional buf.validate.FieldRules values = 5;
   */
  values?: FieldRules;
};

export declare type MapRulesValid = MapRules;

/**
 * Describes the message buf.validate.MapRules.
 * Use `create(MapRulesSchema)` to create a new message.
 */
export declare const MapRulesSchema: GenMessage<MapRules, {validType: MapRulesValid}>;

/**
 * @generated from enum buf.validate.Ignore
 */
export enum Ignore {
  /**
   * @generated from enum value: IGNORE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: IGNORE_IF_UNPOPULATED = 1;
   */
  IF_UNPOPULATED = 1,

  /**
   * @generated from enum value: IGNORE_IF_DEFAULT_VALUE = 2;
   */
  IF_DEFAULT_VALUE = 2,

  /**
   * @generated from enum value: IGNORE_ALWAYS = 3;
   */
  ALWAYS = 3,
}

/**
 * Describes the enum buf.validate.Ignore.
 */
export declare const IgnoreSchema: GenEnum<Ignore>;

/**
 * @generated from extension: optional buf.validate.MessageRules message = 1159;
 */
export declare const message: GenExtension<MessageOptions, MessageRules>;

/**
 * @generated from extension: optional buf.validate.OneofRules oneof = 1159;
 */
export declare const oneof: GenExtension<OneofOptions, OneofRules>;

/**
 * @generated from extension: optional buf.validate.FieldRules field = 1159;
 */
export declare const field: GenExtension<FieldOptions, FieldRules>;

