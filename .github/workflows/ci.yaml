name: ci
on:
  push:
    branches: [main, v2]
    tags: ['v*']
  pull_request:
    branches: [main, v2]
  workflow_dispatch:
jobs:
  ci:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-ci-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-ci-
      - name: make
        run: make ci
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-test-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-test-
      - name: NPM Install
        run: npm ci
      - name: Run all tests except conformance and TypeScript compat
        run: npx turbo run test -F '!./packages/protobuf-conformance' -F '!./packages/typescript-compat/*'
  conformance:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-conformance-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-conformance-
      - name: NPM Install
        run: npm ci
      - name: Run conformance tests
        run: npx turbo run test -F './packages/protobuf-conformance'
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-lint-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-lint-
      - name: NPM Install
        run: npm ci
      - name: lint
        run: npx turbo run lint
  attw:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-attw-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-attw-
      - name: NPM Install
        run: npm ci
      - name: Are the types wrong
        run: npx turbo run attw
  typescript-compat:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-typescript-compat-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-typescript-compat-
      - name: NPM Install
        run: npm ci
      - name: Test typescript-compat
        run: npx turbo run test -F './packages/typescript-compat/*'
  bootstrap:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.tmp
            .tmp
          key: ${{ runner.os }}-protobuf-es-bootstrap-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-protobuf-es-bootstrap-
      - name: NPM Install
        run: npm ci
      - name: Bootstrap well-known types
        run: npx turbo run bootstrap:inject bootstrap:wkt
      - name: Check changed files
        run: |
          if [[ -n $(git status --porcelain | tee /dev/stderr) ]]; then
            echo "::error::Formatting resulted in changed files. Please make sure this branch is up to date and run 'pnpm format'. Verify the changes are what you want and commit them."
            git diff
            exit 1
          fi
